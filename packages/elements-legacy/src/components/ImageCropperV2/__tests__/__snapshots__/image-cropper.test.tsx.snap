// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ImageCropper should match snapshots with multiple conditions 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="react-image-crop-global-styles image-cropper-outer"
      >
        <div
          class="image-cropper-inner"
        >
          <div
            class="image-cropper-content"
          >
            <div
              class="image-cropper-crop-panel-wrapper"
            >
              <h5
                class="title is-5 has-text-centered"
                id=""
              >
                Crop Image
              </h5>
              <div
                class="ReactCrop image-cropper-crop-panel ReactCrop--fixed-aspect ReactCrop--rule-of-thirds"
                tabindex="0"
              >
                <div>
                  <img
                    alt=""
                    class="ReactCrop__image"
                    src=""
                  />
                </div>
              </div>
            </div>
            <div
              class="image-cropper-preview-wrapper"
            >
              <h5
                class="title is-5 has-text-centered"
                id=""
              >
                Preview
              </h5>
            </div>
          </div>
          <div
            class="image-cropper-action-wrapper"
          >
            <button
              class="button   is-secondary "
              data-test=""
              type="button"
            >
              Cancel
            </button>
            <button
              class="button   is-primary "
              data-test=""
              disabled=""
              type="button"
            >
              Crop
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="react-image-crop-global-styles image-cropper-outer"
    >
      <div
        class="image-cropper-inner"
      >
        <div
          class="image-cropper-content"
        >
          <div
            class="image-cropper-crop-panel-wrapper"
          >
            <h5
              class="title is-5 has-text-centered"
              id=""
            >
              Crop Image
            </h5>
            <div
              class="ReactCrop image-cropper-crop-panel ReactCrop--fixed-aspect ReactCrop--rule-of-thirds"
              tabindex="0"
            >
              <div>
                <img
                  alt=""
                  class="ReactCrop__image"
                  src=""
                />
              </div>
            </div>
          </div>
          <div
            class="image-cropper-preview-wrapper"
          >
            <h5
              class="title is-5 has-text-centered"
              id=""
            >
              Preview
            </h5>
          </div>
        </div>
        <div
          class="image-cropper-action-wrapper"
        >
          <button
            class="button   is-secondary "
            data-test=""
            type="button"
          >
            Cancel
          </button>
          <button
            class="button   is-primary "
            data-test=""
            disabled=""
            type="button"
          >
            Crop
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`ImageCropper should match snapshots with multiple conditions 2`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="react-image-crop-global-styles image-cropper-outer"
      >
        <div
          class="image-cropper-inner"
        >
          <div
            class="image-cropper-content"
          >
            <div
              class="image-cropper-crop-panel-wrapper"
            >
              <h5
                class="title is-5 has-text-centered"
                id=""
              >
                Crop Image
              </h5>
              <div
                class="ReactCrop image-cropper-crop-panel ReactCrop--fixed-aspect ReactCrop--rule-of-thirds"
                tabindex="0"
              >
                <div>
                  <img
                    alt=""
                    class="ReactCrop__image"
                    src=""
                  />
                </div>
              </div>
            </div>
            <div
              class="image-cropper-preview-wrapper"
            >
              <h5
                class="title is-5 has-text-centered"
                id=""
              >
                Preview
              </h5>
            </div>
          </div>
          <div
            class="image-cropper-action-wrapper"
          >
            <button
              class="button   is-secondary "
              data-test=""
              type="button"
            >
              Cancel
            </button>
            <button
              class="button   is-primary "
              data-test=""
              disabled=""
              type="button"
            >
              Crop
            </button>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div>
        <div
          croppedimage=""
        >
          value
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        croppedimage=""
      >
        value
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`ImageCropperWithInput should match snapshots with multiple conditions 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          class="file is-primary  field pb-2"
        >
          <div
            class="control file-input-container is-full-width"
          >
            <label
              class="file-label"
              data-test="file-input-label"
              for="inputImage"
            >
              <input
                accept="image/*"
                class="file-input"
                data-test=""
                id="inputImage"
                type="file"
              />
              <span
                class="file-cta "
              >
                input image
              </span>
            </label>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        class="file is-primary  field pb-2"
      >
        <div
          class="control file-input-container is-full-width"
        >
          <label
            class="file-label"
            data-test="file-input-label"
            for="inputImage"
          >
            <input
              accept="image/*"
              class="file-input"
              data-test=""
              id="inputImage"
              type="file"
            />
            <span
              class="file-cta "
            >
              input image
            </span>
          </label>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`ImageCropperWithInput should match snapshots with multiple conditions 2`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          class="file is-primary  field pb-2"
        >
          <div
            class="control file-input-container is-full-width"
          >
            <label
              class="file-label"
              data-test="file-input-label"
              for="inputImage"
            >
              <input
                accept="image/*"
                class="file-input"
                data-test=""
                id="inputImage"
                type="file"
              />
              <span
                class="file-cta "
              >
                input image
              </span>
            </label>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div>
        <div
          class="file is-primary  field pb-2"
        >
          <div
            class="control file-input-container is-full-width"
          >
            <label
              class="file-label"
              data-test="file-input-label"
              for="inputImage"
            >
              <input
                accept="image/*"
                class="file-input"
                data-test=""
                id="inputImage"
                type="file"
              />
              <span
                class="file-cta "
              >
                input image
              </span>
            </label>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        class="file is-primary  field pb-2"
      >
        <div
          class="control file-input-container is-full-width"
        >
          <label
            class="file-label"
            data-test="file-input-label"
            for="inputImage"
          >
            <input
              accept="image/*"
              class="file-input"
              data-test=""
              id="inputImage"
              type="file"
            />
            <span
              class="file-cta "
            >
              input image
            </span>
          </label>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`renderChildrenWithProps should match snapshots with multiple conditions 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div>
          <div
            value="value"
          >
            1
          </div>
          <div
            value="value"
          >
            2
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          value="value"
        >
          1
        </div>
        <div
          value="value"
        >
          2
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`renderChildrenWithProps should match snapshots with multiple conditions 2`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div>
          <div
            value="value"
          >
            1
          </div>
          <div
            value="value"
          >
            2
          </div>
        </div>
      </div>
    </div>
    <div>
      <div />
    </div>
  </body>,
  "container": <div>
    <div />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
