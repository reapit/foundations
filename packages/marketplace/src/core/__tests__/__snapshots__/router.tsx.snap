// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Router should match a snapshot 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <Suspense
    fallback={null}
  >
    <PortalProvider>
      <Switch>
        <Route
          exact={true}
          path="/register"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/ok"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/login"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/404"
          render={[Function]}
        />
        <PrivateRouteWrapper
          path="/admin"
          showMenu={false}
        >
          <Switch>
            <PrivateRoute
              component={
                Object {
                  "$$typeof": Symbol(react.lazy),
                  "_init": [Function],
                  "_payload": Object {
                    "_result": [Function],
                    "_status": -1,
                  },
                }
              }
              path="/*"
            />
          </Switch>
        </PrivateRouteWrapper>
        <PrivateRouteWrapper
          path="/developer"
          showMenu={false}
        >
          <Switch>
            <PrivateRoute
              component={
                Object {
                  "$$typeof": Symbol(react.lazy),
                  "_init": [Function],
                  "_payload": Object {
                    "_result": [Function],
                    "_status": -1,
                  },
                }
              }
              path="/*"
            />
          </Switch>
        </PrivateRouteWrapper>
        <PrivateRouteWrapper>
          <Switch>
            <PrivateRoute
              component={
                Object {
                  "$$typeof": Symbol(react.lazy),
                  "_init": [Function],
                  "_payload": Object {
                    "_result": [Function],
                    "_status": -1,
                  },
                }
              }
              path="/authentication"
            />
            <PrivateRoute
              component={
                Object {
                  "$$typeof": Symbol(react.lazy),
                  "_init": [Function],
                  "_payload": Object {
                    "_result": [Function],
                    "_status": -1,
                  },
                }
              }
              exact={true}
              fetcher={true}
              path="/installed"
            />
            <PrivateRoute
              component={
                Object {
                  "$$typeof": Symbol(react.lazy),
                  "_init": [Function],
                  "_payload": Object {
                    "_result": [Function],
                    "_status": -1,
                  },
                }
              }
              exact={true}
              fetcher={true}
              path="/manage"
            />
            <PrivateRoute
              component={
                Object {
                  "$$typeof": Symbol(react.lazy),
                  "_init": [Function],
                  "_payload": Object {
                    "_result": [Function],
                    "_status": -1,
                  },
                }
              }
              exact={true}
              fetcher={true}
              path="/apps"
            />
            <PrivateRoute
              component={
                Object {
                  "$$typeof": Symbol(react.lazy),
                  "_init": [Function],
                  "_payload": Object {
                    "_result": [Function],
                    "_status": -1,
                  },
                }
              }
              exact={true}
              fetcher={true}
              path="/apps/:appid"
            />
            <PrivateRoute
              component={
                Object {
                  "$$typeof": Symbol(react.lazy),
                  "_init": [Function],
                  "_payload": Object {
                    "_result": [Function],
                    "_status": -1,
                  },
                }
              }
              exact={true}
              fetcher={true}
              path="/apps/:appid/manage"
            />
            <PrivateRoute
              component={
                Object {
                  "$$typeof": Symbol(react.lazy),
                  "_init": [Function],
                  "_payload": Object {
                    "_result": [Function],
                    "_status": -1,
                  },
                }
              }
              exact={true}
              fetcher={true}
              path="/settings"
            />
            <Route
              render={[Function]}
            />
          </Switch>
        </PrivateRouteWrapper>
        <Redirect
          to="/login"
        />
      </Switch>
    </PortalProvider>
  </Suspense>
</Router>
`;
