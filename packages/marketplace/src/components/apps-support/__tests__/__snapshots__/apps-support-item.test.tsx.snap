// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppsSupportItem should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.h5>
            MOCK_APP_NAME
          </mock-styled.h5>
          <mock-styled.h6>
            Will Test DevCo
          </mock-styled.h6>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              Website
            </mock-styled.div>
            <mock-styled.div>
              <a
                href="https://foo.bar"
                rel="noopener noreferrer"
                target="_blank"
              >
                https://foo.bar
              </a>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              Support Email
            </mock-styled.div>
            <mock-styled.div>
              <a
                href="mailto:foo@bar.com"
                rel="noopener noreferrer"
                target="_blank"
              >
                foo@bar.com
              </a>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              Telephone
            </mock-styled.div>
            <mock-styled.div>
              07777777777
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              Terms and Conditions
            </mock-styled.div>
            <mock-styled.div>
              <a
                href="https://foo.bar"
                rel="noopener noreferrer"
                target="_blank"
              >
                https://foo.bar
              </a>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              Privacy Policy
            </mock-styled.div>
            <mock-styled.div>
              <a
                href="https://foo.bar"
                rel="noopener noreferrer"
                target="_blank"
              >
                https://foo.bar
              </a>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              Pricing Policy
            </mock-styled.div>
            <mock-styled.div>
              <a
                href="https://foo.bar"
                rel="noopener noreferrer"
                target="_blank"
              >
                https://foo.bar
              </a>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname=""
    >
      <mock-styled.div
        classname=""
      >
        <mock-styled.h5>
          MOCK_APP_NAME
        </mock-styled.h5>
        <mock-styled.h6>
          Will Test DevCo
        </mock-styled.h6>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Website
          </mock-styled.div>
          <mock-styled.div>
            <a
              href="https://foo.bar"
              rel="noopener noreferrer"
              target="_blank"
            >
              https://foo.bar
            </a>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Support Email
          </mock-styled.div>
          <mock-styled.div>
            <a
              href="mailto:foo@bar.com"
              rel="noopener noreferrer"
              target="_blank"
            >
              foo@bar.com
            </a>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Telephone
          </mock-styled.div>
          <mock-styled.div>
            07777777777
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Terms and Conditions
          </mock-styled.div>
          <mock-styled.div>
            <a
              href="https://foo.bar"
              rel="noopener noreferrer"
              target="_blank"
            >
              https://foo.bar
            </a>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Privacy Policy
          </mock-styled.div>
          <mock-styled.div>
            <a
              href="https://foo.bar"
              rel="noopener noreferrer"
              target="_blank"
            >
              https://foo.bar
            </a>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Pricing Policy
          </mock-styled.div>
          <mock-styled.div>
            <a
              href="https://foo.bar"
              rel="noopener noreferrer"
              target="_blank"
            >
              https://foo.bar
            </a>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`AppsSupportItem should match a snapshot where details not supplied 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.h5>
            MOCK_APP_NAME
          </mock-styled.h5>
          <mock-styled.h6 />
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              Website
            </mock-styled.div>
            <mock-styled.div>
              Not Supplied
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              Support Email
            </mock-styled.div>
            <mock-styled.div>
              Not Supplied
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              Telephone
            </mock-styled.div>
            <mock-styled.div>
              Not Supplied
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              Terms and Conditions
            </mock-styled.div>
            <mock-styled.div>
              Not Supplied
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              Privacy Policy
            </mock-styled.div>
            <mock-styled.div>
              Not Supplied
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              Pricing Policy
            </mock-styled.div>
            <mock-styled.div>
              Free
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname=""
    >
      <mock-styled.div
        classname=""
      >
        <mock-styled.h5>
          MOCK_APP_NAME
        </mock-styled.h5>
        <mock-styled.h6 />
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Website
          </mock-styled.div>
          <mock-styled.div>
            Not Supplied
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Support Email
          </mock-styled.div>
          <mock-styled.div>
            Not Supplied
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Telephone
          </mock-styled.div>
          <mock-styled.div>
            Not Supplied
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Terms and Conditions
          </mock-styled.div>
          <mock-styled.div>
            Not Supplied
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Privacy Policy
          </mock-styled.div>
          <mock-styled.div>
            Not Supplied
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Pricing Policy
          </mock-styled.div>
          <mock-styled.div>
            Free
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
