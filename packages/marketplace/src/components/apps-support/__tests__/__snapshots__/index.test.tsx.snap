// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppsSupportPage should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname="mock-css.
  flex: 1 1 auto;
"
      >
        <mock-styled.aside
          classname=""
        >
          <mock-styled.span
            classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css.
  font-size: 5rem;
"
          >
            <svg />
          </mock-styled.span>
          <mock-styled.p
            classname="mock-css."
          >
            For AppMarket support, you will need to contact the app developer directly. You can find the relevant contact details by searching by app or developer name.
          </mock-styled.p>
          <mock-styled.p
            classname="mock-css."
          >
            In addition we have provided comprehensive documentation on using the AppMarket at the below link.
          </mock-styled.p>
          <mock-styled.button
            classname="mock-css."
          >
            <mock-styled.div />
            View Docs
          </mock-styled.button>
        </mock-styled.aside>
        <mock-styled.section
          classname="mock-css.
  height: 100%;
"
        >
          <mock-styled.div
            classname="mock-css.
  align-items: center;
 mock-css.
  width: 100%;

  , {
    margin-bottom: 2.5rem;
    width: 50%;
  }

  , {
    width: 33.33%;
  }

  , {
    width: 25%;
  }
 mock-css.
  margin-bottom: 2.5rem;
"
          >
            <mock-styled.span
              classname="mock-css.
  border-radius: 0.125rem 0 0 0.125rem;
  padding: 0 0.5rem 0 1.25rem;
  height: 2.25rem;
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1px solid var(--color-grey-150);
  border-right: none;

  &:has(+ input:focus) {
    border: 1px solid var(--intent-primary);
    border-right: none;
  }
"
              style="font-size: 1.25rem;"
            >
              <svg
                style="font-size: 1.25rem;"
              />
            </mock-styled.span>
            <mock-styled.input
              placeholder="Search by App or Developer"
              type="text"
            />
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css. mock-css. mock-css. mock-css."
          >
            <div
              class="mock-css.
  padding: 0 1rem;
  display: flex;
  align-items: center;
  border-radius: var(--default-border-radius) 0 0 var(--default-border-radius);
  cursor: pointer;

  , {
    color: var(--color-white);
  }
"
              data-testid="close-icon"
            >
              <mock-styled.span
                classname=""
              >
                <svg />
              </mock-styled.span>
            </div>
            <div
              class="mock-css.
  padding: 1rem;
  opacity: 0;
  transition: 0.5s;
  width: 100%;
"
            >
              Search for an app or developer name to get support contact details
            </div>
          </mock-styled.div>
        </mock-styled.section>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname="mock-css.
  flex: 1 1 auto;
"
    >
      <mock-styled.aside
        classname=""
      >
        <mock-styled.span
          classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css.
  font-size: 5rem;
"
        >
          <svg />
        </mock-styled.span>
        <mock-styled.p
          classname="mock-css."
        >
          For AppMarket support, you will need to contact the app developer directly. You can find the relevant contact details by searching by app or developer name.
        </mock-styled.p>
        <mock-styled.p
          classname="mock-css."
        >
          In addition we have provided comprehensive documentation on using the AppMarket at the below link.
        </mock-styled.p>
        <mock-styled.button
          classname="mock-css."
        >
          <mock-styled.div />
          View Docs
        </mock-styled.button>
      </mock-styled.aside>
      <mock-styled.section
        classname="mock-css.
  height: 100%;
"
      >
        <mock-styled.div
          classname="mock-css.
  align-items: center;
 mock-css.
  width: 100%;

  , {
    margin-bottom: 2.5rem;
    width: 50%;
  }

  , {
    width: 33.33%;
  }

  , {
    width: 25%;
  }
 mock-css.
  margin-bottom: 2.5rem;
"
        >
          <mock-styled.span
            classname="mock-css.
  border-radius: 0.125rem 0 0 0.125rem;
  padding: 0 0.5rem 0 1.25rem;
  height: 2.25rem;
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1px solid var(--color-grey-150);
  border-right: none;

  &:has(+ input:focus) {
    border: 1px solid var(--intent-primary);
    border-right: none;
  }
"
            style="font-size: 1.25rem;"
          >
            <svg
              style="font-size: 1.25rem;"
            />
          </mock-styled.span>
          <mock-styled.input
            placeholder="Search by App or Developer"
            type="text"
          />
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css. mock-css. mock-css. mock-css."
        >
          <div
            class="mock-css.
  padding: 0 1rem;
  display: flex;
  align-items: center;
  border-radius: var(--default-border-radius) 0 0 var(--default-border-radius);
  cursor: pointer;

  , {
    color: var(--color-white);
  }
"
            data-testid="close-icon"
          >
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </div>
          <div
            class="mock-css.
  padding: 1rem;
  opacity: 0;
  transition: 0.5s;
  width: 100%;
"
          >
            Search for an app or developer name to get support contact details
          </div>
        </mock-styled.div>
      </mock-styled.section>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`AppsSupportPage should match a snapshot when loading 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname="mock-css.
  flex: 1 1 auto;
"
      >
        <mock-styled.aside
          classname=""
        >
          <mock-styled.span
            classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css.
  font-size: 5rem;
"
          >
            <svg />
          </mock-styled.span>
          <mock-styled.p
            classname="mock-css."
          >
            For AppMarket support, you will need to contact the app developer directly. You can find the relevant contact details by searching by app or developer name.
          </mock-styled.p>
          <mock-styled.p
            classname="mock-css."
          >
            In addition we have provided comprehensive documentation on using the AppMarket at the below link.
          </mock-styled.p>
          <mock-styled.button
            classname="mock-css."
          >
            <mock-styled.div />
            View Docs
          </mock-styled.button>
        </mock-styled.aside>
        <mock-styled.section
          classname="mock-css.
  height: 100%;
"
        >
          <mock-styled.div
            classname="mock-css.
  align-items: center;
 mock-css.
  width: 100%;

  , {
    margin-bottom: 2.5rem;
    width: 50%;
  }

  , {
    width: 33.33%;
  }

  , {
    width: 25%;
  }
 mock-css.
  margin-bottom: 2.5rem;
"
          >
            <mock-styled.span
              classname="mock-css.
  border-radius: 0.125rem 0 0 0.125rem;
  padding: 0 0.5rem 0 1.25rem;
  height: 2.25rem;
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1px solid var(--color-grey-150);
  border-right: none;

  &:has(+ input:focus) {
    border: 1px solid var(--intent-primary);
    border-right: none;
  }
"
              style="font-size: 1.25rem;"
            >
              <svg
                style="font-size: 1.25rem;"
              />
            </mock-styled.span>
            <mock-styled.input
              placeholder="Search by App or Developer"
              type="text"
            />
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div>
              <mock-styled.div />
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.section>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname="mock-css.
  flex: 1 1 auto;
"
    >
      <mock-styled.aside
        classname=""
      >
        <mock-styled.span
          classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css.
  font-size: 5rem;
"
        >
          <svg />
        </mock-styled.span>
        <mock-styled.p
          classname="mock-css."
        >
          For AppMarket support, you will need to contact the app developer directly. You can find the relevant contact details by searching by app or developer name.
        </mock-styled.p>
        <mock-styled.p
          classname="mock-css."
        >
          In addition we have provided comprehensive documentation on using the AppMarket at the below link.
        </mock-styled.p>
        <mock-styled.button
          classname="mock-css."
        >
          <mock-styled.div />
          View Docs
        </mock-styled.button>
      </mock-styled.aside>
      <mock-styled.section
        classname="mock-css.
  height: 100%;
"
      >
        <mock-styled.div
          classname="mock-css.
  align-items: center;
 mock-css.
  width: 100%;

  , {
    margin-bottom: 2.5rem;
    width: 50%;
  }

  , {
    width: 33.33%;
  }

  , {
    width: 25%;
  }
 mock-css.
  margin-bottom: 2.5rem;
"
        >
          <mock-styled.span
            classname="mock-css.
  border-radius: 0.125rem 0 0 0.125rem;
  padding: 0 0.5rem 0 1.25rem;
  height: 2.25rem;
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1px solid var(--color-grey-150);
  border-right: none;

  &:has(+ input:focus) {
    border: 1px solid var(--intent-primary);
    border-right: none;
  }
"
            style="font-size: 1.25rem;"
          >
            <svg
              style="font-size: 1.25rem;"
            />
          </mock-styled.span>
          <mock-styled.input
            placeholder="Search by App or Developer"
            type="text"
          />
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div />
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.section>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
