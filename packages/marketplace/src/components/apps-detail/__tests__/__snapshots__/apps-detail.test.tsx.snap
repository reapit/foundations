// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppsDetail should match a snapshot for viewport desktop 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="root"
    >
      <div />
      <div />
      <div />
    </div>
    <div
      id="root"
    />
    <div>
      <mock-styled.div />
      <mock-styled.section
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div />
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.section>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.section
      classname=""
    >
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`AppsDetail should match a snapshot for viewport mobile 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="root"
    >
      <div />
      <div />
      <div />
    </div>
    <div
      id="root"
    />
    <div>
      <mock-styled.div />
      <mock-styled.section
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div />
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.section>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.section
      classname=""
    >
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`AppsDetail should match a snapshot for viewport superWidescreen 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="root"
    >
      <div />
      <div />
      <div />
    </div>
    <div
      id="root"
    />
    <div>
      <mock-styled.div />
      <mock-styled.section
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div />
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.section>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.section
      classname=""
    >
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`AppsDetail should match a snapshot for viewport tablet 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="root"
    >
      <div />
      <div />
      <div />
    </div>
    <div
      id="root"
    />
    <div>
      <mock-styled.div />
      <mock-styled.section
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div />
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.section>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.section
      classname=""
    >
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`AppsDetail should match a snapshot for viewport widescreen 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="root"
    >
      <div />
      <div />
      <div />
    </div>
    <div
      id="root"
    />
    <div>
      <mock-styled.div />
      <mock-styled.section
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div />
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.section>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.section
      classname=""
    >
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`AppsDetail should match a snapshot when loading 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="root"
    >
      <div />
      <div />
      <div />
    </div>
    <div
      id="root"
    />
    <div>
      <mock-styled.div />
      <mock-styled.section
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div />
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.section>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.section
      classname=""
    >
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`AppsDetail should match a snapshot when not installed 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="root"
    >
      <div />
      <div />
      <div />
      <div />
      <div />
    </div>
    <div
      id="root"
    />
    <div>
      <mock-styled.div />
      <mock-styled.section
        classname=""
      >
        <mock-styled.div
          classname="mock-css."
        >
          <div
            class="mock-css.
  padding: 0 1rem;
  display: flex;
  align-items: center;
  border-radius: var(--default-border-radius) 0 0 var(--default-border-radius);
  cursor: pointer;

  , {
    color: var(--color-white);
  }
"
            data-testid="close-icon"
          >
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </div>
          <div
            class="mock-css.
  padding: 1rem;
  opacity: 0;
  transition: 0.5s;
  width: 100%;
"
          >
            Interested in hearing more about this app? Click here and one of the Reapit Team will be in touch!
          </div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname="mock-css."
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 0.75rem;
"
        >
          <mock-styled.div>
            <mock-styled.img
              alt="will-test-dev-co-voracious-person"
              classname="mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
              src="https://reapit-marketplace-app-media-dev.s3.eu-west-2.amazonaws.com/Online-Check-List-icon.png"
            />
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  flex-direction: column;
 mock-css.
  justify-content: space-between;
"
          >
            <mock-styled.div
              classname="mock-css.
  flex-direction: column;
"
            >
              <mock-styled.h1
                classname="mock-css."
              >
                will-test-dev-co-voracious-person
              </mock-styled.h1>
              <mock-styled.p
                classname="mock-css."
              >
                Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar
              </mock-styled.p>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.span
                classname="mock-css.
  margin-right: 0.75rem;
 mock-css."
              >
                <svg />
              </mock-styled.span>
              <mock-styled.p
                classname="mock-css.
  margin-right: 0.75rem;
 mock-css."
              >
                Integration Enabled
              </mock-styled.p>
              <mock-styled.span
                classname="mock-css.
  margin-right: 0.75rem;
 mock-css."
              >
                <svg />
              </mock-styled.span>
              <mock-styled.p
                classname="mock-css.
  margin-right: 0.75rem;
 mock-css."
              >
                Verified by Reapit
              </mock-styled.p>
              <mock-styled.div
                classname="mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
              >
                Category
              </mock-styled.div>
              <mock-styled.p
                classname="mock-css.
  margin-right: 0.75rem;
 mock-css. mock-css."
              >
                Integration
              </mock-styled.p>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 2.5rem;
"
        >
          <mock-styled.div
            classname="mock-css."
          >
            <a
              href="mailto:foo@bar.com?subject=will-test-dev-co-voracious-person%20Enquiry&body=Dear%20Will Test DevCo%2C%20%0A%0AI%20would%20like%20more%20information%20about%20will-test-dev-co-voracious-person%20featured%20in%20the%20Reapit%20AppMarket%20%0A%0ARegards"
              rel="noopener noreferrer"
              target="_blank"
            >
              <mock-styled.button
                classname="mock-css."
              >
                <mock-styled.div />
                Enquire About Integration
              </mock-styled.button>
            </a>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.h2
              classname="mock-css."
            >
              About App
            </mock-styled.h2>
            <div
              class="html-render"
            >
              <mock-styled.div>
                <mock-styled.img
                  alt="Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar"
                  src="https://reapit-marketplace-app-media-dev.s3.eu-west-2.amazonaws.com/Online-Check-List-screen1ImageUrl.png"
                />
              </mock-styled.div>
              <mock-styled.div>
                Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar
              </mock-styled.div>
            </div>
            <mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.button
                  classname="mock-css."
                >
                  <mock-styled.div />
                  <mock-styled.div
                    classname="mock-css.
  align-items: center;
"
                  >
                    <mock-styled.span
                      classname="mock-css.
  margin-right: 0.625rem;
 mock-css."
                      style="font-size: 1.25em;"
                    >
                      <svg
                        style="font-size: 1.25em;"
                      />
                    </mock-styled.span>
                    Getting started with 
                    will-test-dev-co-voracious-person
                  </mock-styled.div>
                </mock-styled.button>
                <mock-styled.button
                  classname="mock-css."
                >
                  <mock-styled.div />
                  <mock-styled.div
                    classname="mock-css.
  align-items: center;
"
                  >
                    <mock-styled.span
                      classname="mock-css.
  margin-right: 0.625rem;
 mock-css."
                      style="font-size: 1.25em;"
                    >
                      <svg
                        style="font-size: 1.25em;"
                      />
                    </mock-styled.span>
                    Why 
                    will-test-dev-co-voracious-person
                  </mock-styled.div>
                </mock-styled.button>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.div
                numbercols="2"
                numberitems="1"
                percentagewidth="50.000"
              >
                <mock-styled.div>
                  <mock-styled.div>
                    <mock-styled.img
                      alt="Application Image"
                      src="https://reapit-marketplace-app-media-dev.s3.eu-west-2.amazonaws.com/Online-Check-List-screen2ImageUrl.png"
                    />
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div
              classname="mock-css.
  margin-bottom: 2.5rem;
"
            >
              <mock-styled.div>
                <mock-styled.h2
                  classname="mock-css."
                >
                  Website
                </mock-styled.h2>
                <mock-styled.p
                  classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
                >
                  <a
                    href="https://foo.bar"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    https://foo.bar
                  </a>
                </mock-styled.p>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.h2
                  classname="mock-css."
                >
                  Support Email
                </mock-styled.h2>
                <mock-styled.p
                  classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
                >
                  <a
                    href="mailto:foo@bar.com"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    foo@bar.com
                  </a>
                </mock-styled.p>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.h2
                  classname="mock-css."
                >
                  Telephone
                </mock-styled.h2>
                <mock-styled.p
                  classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
                >
                  07777777777
                </mock-styled.p>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.h2
                  classname="mock-css."
                >
                  Terms and Conditions
                </mock-styled.h2>
                <mock-styled.p
                  classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
                >
                  <a
                    href="https://foo.bar"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    https://foo.bar
                  </a>
                </mock-styled.p>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.h2
                  classname="mock-css."
                >
                  Privacy Policy
                </mock-styled.h2>
                <mock-styled.p
                  classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
                >
                  <a
                    href="https://foo.bar"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    https://foo.bar
                  </a>
                </mock-styled.p>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.h2
                  classname="mock-css."
                >
                  Pricing Policy
                </mock-styled.h2>
                <mock-styled.p
                  classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
                >
                  <a
                    href="https://foo.bar"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    https://foo.bar
                  </a>
                </mock-styled.p>
              </mock-styled.div>
            </mock-styled.div>
            <div
              class="mock-css.
  margin-bottom: 2.5rem;
"
            >
              <mock-styled.h2
                classname="mock-css."
              >
                About Developer
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css. mock-css."
              >
                All about us in a number of words
              </mock-styled.p>
            </div>
            <div
              class="mock-css.
  margin-bottom: 2.5rem;
"
            >
              <mock-styled.h2
                classname="mock-css."
              >
                Permissions
              </mock-styled.h2>
              <mock-styled.div>
                Read applicants
              </mock-styled.div>
              <mock-styled.div>
                Read property images
              </mock-styled.div>
              <mock-styled.div>
                Read properties
              </mock-styled.div>
            </div>
            <div
              class="mock-css.
  margin-bottom: 2.5rem;
"
            >
              <mock-styled.h2
                classname="mock-css."
              >
                AgencyCloud Launch Point
              </mock-styled.h2>
              <mock-styled.div>
                Applicant
              </mock-styled.div>
              <mock-styled.div>
                Applicant Export
              </mock-styled.div>
            </div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.section>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.section
      classname=""
    >
      <mock-styled.div
        classname="mock-css."
      >
        <div
          class="mock-css.
  padding: 0 1rem;
  display: flex;
  align-items: center;
  border-radius: var(--default-border-radius) 0 0 var(--default-border-radius);
  cursor: pointer;

  , {
    color: var(--color-white);
  }
"
          data-testid="close-icon"
        >
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </div>
        <div
          class="mock-css.
  padding: 1rem;
  opacity: 0;
  transition: 0.5s;
  width: 100%;
"
        >
          Interested in hearing more about this app? Click here and one of the Reapit Team will be in touch!
        </div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.span
          classname="mock-css."
        >
          <svg />
        </mock-styled.span>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 0.75rem;
"
      >
        <mock-styled.div>
          <mock-styled.img
            alt="will-test-dev-co-voracious-person"
            classname="mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
            src="https://reapit-marketplace-app-media-dev.s3.eu-west-2.amazonaws.com/Online-Check-List-icon.png"
          />
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  flex-direction: column;
 mock-css.
  justify-content: space-between;
"
        >
          <mock-styled.div
            classname="mock-css.
  flex-direction: column;
"
          >
            <mock-styled.h1
              classname="mock-css."
            >
              will-test-dev-co-voracious-person
            </mock-styled.h1>
            <mock-styled.p
              classname="mock-css."
            >
              Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar
            </mock-styled.p>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.span
              classname="mock-css.
  margin-right: 0.75rem;
 mock-css."
            >
              <svg />
            </mock-styled.span>
            <mock-styled.p
              classname="mock-css.
  margin-right: 0.75rem;
 mock-css."
            >
              Integration Enabled
            </mock-styled.p>
            <mock-styled.span
              classname="mock-css.
  margin-right: 0.75rem;
 mock-css."
            >
              <svg />
            </mock-styled.span>
            <mock-styled.p
              classname="mock-css.
  margin-right: 0.75rem;
 mock-css."
            >
              Verified by Reapit
            </mock-styled.p>
            <mock-styled.div
              classname="mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
            >
              Category
            </mock-styled.div>
            <mock-styled.p
              classname="mock-css.
  margin-right: 0.75rem;
 mock-css. mock-css."
            >
              Integration
            </mock-styled.p>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 2.5rem;
"
      >
        <mock-styled.div
          classname="mock-css."
        >
          <a
            href="mailto:foo@bar.com?subject=will-test-dev-co-voracious-person%20Enquiry&body=Dear%20Will Test DevCo%2C%20%0A%0AI%20would%20like%20more%20information%20about%20will-test-dev-co-voracious-person%20featured%20in%20the%20Reapit%20AppMarket%20%0A%0ARegards"
            rel="noopener noreferrer"
            target="_blank"
          >
            <mock-styled.button
              classname="mock-css."
            >
              <mock-styled.div />
              Enquire About Integration
            </mock-styled.button>
          </a>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.h2
            classname="mock-css."
          >
            About App
          </mock-styled.h2>
          <div
            class="html-render"
          >
            <mock-styled.div>
              <mock-styled.img
                alt="Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar"
                src="https://reapit-marketplace-app-media-dev.s3.eu-west-2.amazonaws.com/Online-Check-List-screen1ImageUrl.png"
              />
            </mock-styled.div>
            <mock-styled.div>
              Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar
            </mock-styled.div>
          </div>
          <mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.button
                classname="mock-css."
              >
                <mock-styled.div />
                <mock-styled.div
                  classname="mock-css.
  align-items: center;
"
                >
                  <mock-styled.span
                    classname="mock-css.
  margin-right: 0.625rem;
 mock-css."
                    style="font-size: 1.25em;"
                  >
                    <svg
                      style="font-size: 1.25em;"
                    />
                  </mock-styled.span>
                  Getting started with 
                  will-test-dev-co-voracious-person
                </mock-styled.div>
              </mock-styled.button>
              <mock-styled.button
                classname="mock-css."
              >
                <mock-styled.div />
                <mock-styled.div
                  classname="mock-css.
  align-items: center;
"
                >
                  <mock-styled.span
                    classname="mock-css.
  margin-right: 0.625rem;
 mock-css."
                    style="font-size: 1.25em;"
                  >
                    <svg
                      style="font-size: 1.25em;"
                    />
                  </mock-styled.span>
                  Why 
                  will-test-dev-co-voracious-person
                </mock-styled.div>
              </mock-styled.button>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.div
              numbercols="2"
              numberitems="1"
              percentagewidth="50.000"
            >
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.img
                    alt="Application Image"
                    src="https://reapit-marketplace-app-media-dev.s3.eu-west-2.amazonaws.com/Online-Check-List-screen2ImageUrl.png"
                  />
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  margin-bottom: 2.5rem;
"
          >
            <mock-styled.div>
              <mock-styled.h2
                classname="mock-css."
              >
                Website
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
              >
                <a
                  href="https://foo.bar"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  https://foo.bar
                </a>
              </mock-styled.p>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.h2
                classname="mock-css."
              >
                Support Email
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
              >
                <a
                  href="mailto:foo@bar.com"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  foo@bar.com
                </a>
              </mock-styled.p>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.h2
                classname="mock-css."
              >
                Telephone
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
              >
                07777777777
              </mock-styled.p>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.h2
                classname="mock-css."
              >
                Terms and Conditions
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
              >
                <a
                  href="https://foo.bar"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  https://foo.bar
                </a>
              </mock-styled.p>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.h2
                classname="mock-css."
              >
                Privacy Policy
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
              >
                <a
                  href="https://foo.bar"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  https://foo.bar
                </a>
              </mock-styled.p>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.h2
                classname="mock-css."
              >
                Pricing Policy
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
              >
                <a
                  href="https://foo.bar"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  https://foo.bar
                </a>
              </mock-styled.p>
            </mock-styled.div>
          </mock-styled.div>
          <div
            class="mock-css.
  margin-bottom: 2.5rem;
"
          >
            <mock-styled.h2
              classname="mock-css."
            >
              About Developer
            </mock-styled.h2>
            <mock-styled.p
              classname="mock-css. mock-css."
            >
              All about us in a number of words
            </mock-styled.p>
          </div>
          <div
            class="mock-css.
  margin-bottom: 2.5rem;
"
          >
            <mock-styled.h2
              classname="mock-css."
            >
              Permissions
            </mock-styled.h2>
            <mock-styled.div>
              Read applicants
            </mock-styled.div>
            <mock-styled.div>
              Read property images
            </mock-styled.div>
            <mock-styled.div>
              Read properties
            </mock-styled.div>
          </div>
          <div
            class="mock-css.
  margin-bottom: 2.5rem;
"
          >
            <mock-styled.h2
              classname="mock-css."
            >
              AgencyCloud Launch Point
            </mock-styled.h2>
            <mock-styled.div>
              Applicant
            </mock-styled.div>
            <mock-styled.div>
              Applicant Export
            </mock-styled.div>
          </div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`AppsDetail should match a snapshot with data 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="root"
    >
      <div />
      <div />
      <div />
      <div />
      <div />
    </div>
    <div>
      <mock-styled.div />
      <mock-styled.section
        classname=""
      >
        <mock-styled.div
          classname="mock-css."
        >
          <div
            class="mock-css.
  padding: 0 1rem;
  display: flex;
  align-items: center;
  border-radius: var(--default-border-radius) 0 0 var(--default-border-radius);
  cursor: pointer;

  , {
    color: var(--color-white);
  }
"
            data-testid="close-icon"
          >
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </div>
          <div
            class="mock-css.
  padding: 1rem;
  opacity: 0;
  transition: 0.5s;
  width: 100%;
"
          >
            Interested in hearing more about this app? Click here and one of the Reapit Team will be in touch!
          </div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname="mock-css."
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 0.75rem;
"
        >
          <mock-styled.div>
            <mock-styled.img
              alt="will-test-dev-co-voracious-person"
              classname="mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
              src="https://reapit-marketplace-app-media-dev.s3.eu-west-2.amazonaws.com/Online-Check-List-icon.png"
            />
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  flex-direction: column;
 mock-css.
  justify-content: space-between;
"
          >
            <mock-styled.div
              classname="mock-css.
  flex-direction: column;
"
            >
              <mock-styled.h1
                classname="mock-css."
              >
                will-test-dev-co-voracious-person
              </mock-styled.h1>
              <mock-styled.p
                classname="mock-css."
              >
                Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar
              </mock-styled.p>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.span
                classname="mock-css.
  margin-right: 0.75rem;
 mock-css."
              >
                <svg />
              </mock-styled.span>
              <mock-styled.p
                classname="mock-css.
  margin-right: 0.75rem;
 mock-css."
              >
                Verified by Reapit
              </mock-styled.p>
              <mock-styled.div
                classname="mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
              >
                Category
              </mock-styled.div>
              <mock-styled.p
                classname="mock-css.
  margin-right: 0.75rem;
 mock-css. mock-css."
              >
                Integration
              </mock-styled.p>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 2.5rem;
"
        >
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.button
              classname="mock-css."
            >
              <mock-styled.div />
              Enable Integration
            </mock-styled.button>
            <a
              href="mailto:foo@bar.com?subject=will-test-dev-co-voracious-person%20Enquiry&body=Dear%20Will Test DevCo%2C%20%0A%0AI%20would%20like%20more%20information%20about%20will-test-dev-co-voracious-person%20featured%20in%20the%20Reapit%20AppMarket%20%0A%0ARegards"
              rel="noopener noreferrer"
              target="_blank"
            >
              <mock-styled.button
                classname="mock-css."
              >
                <mock-styled.div />
                Enquire About Integration
              </mock-styled.button>
            </a>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.h2
              classname="mock-css."
            >
              About App
            </mock-styled.h2>
            <div
              class="html-render"
            >
              <mock-styled.div>
                <mock-styled.img
                  alt="Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar"
                  src="https://reapit-marketplace-app-media-dev.s3.eu-west-2.amazonaws.com/Online-Check-List-screen1ImageUrl.png"
                />
              </mock-styled.div>
              <mock-styled.div>
                Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar
              </mock-styled.div>
            </div>
            <mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.button
                  classname="mock-css."
                >
                  <mock-styled.div />
                  <mock-styled.div
                    classname="mock-css.
  align-items: center;
"
                  >
                    <mock-styled.span
                      classname="mock-css.
  margin-right: 0.625rem;
 mock-css."
                      style="font-size: 1.25em;"
                    >
                      <svg
                        style="font-size: 1.25em;"
                      />
                    </mock-styled.span>
                    Getting started with 
                    will-test-dev-co-voracious-person
                  </mock-styled.div>
                </mock-styled.button>
                <mock-styled.button
                  classname="mock-css."
                >
                  <mock-styled.div />
                  <mock-styled.div
                    classname="mock-css.
  align-items: center;
"
                  >
                    <mock-styled.span
                      classname="mock-css.
  margin-right: 0.625rem;
 mock-css."
                      style="font-size: 1.25em;"
                    >
                      <svg
                        style="font-size: 1.25em;"
                      />
                    </mock-styled.span>
                    Why 
                    will-test-dev-co-voracious-person
                  </mock-styled.div>
                </mock-styled.button>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.div
                numbercols="2"
                numberitems="1"
                percentagewidth="50.000"
              >
                <mock-styled.div>
                  <mock-styled.div>
                    <mock-styled.img
                      alt="Application Image"
                      src="https://reapit-marketplace-app-media-dev.s3.eu-west-2.amazonaws.com/Online-Check-List-screen2ImageUrl.png"
                    />
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div
              classname="mock-css.
  margin-bottom: 2.5rem;
"
            >
              <mock-styled.div>
                <mock-styled.h2
                  classname="mock-css."
                >
                  Website
                </mock-styled.h2>
                <mock-styled.p
                  classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
                >
                  <a
                    href="https://foo.bar"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    https://foo.bar
                  </a>
                </mock-styled.p>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.h2
                  classname="mock-css."
                >
                  Support Email
                </mock-styled.h2>
                <mock-styled.p
                  classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
                >
                  <a
                    href="mailto:foo@bar.com"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    foo@bar.com
                  </a>
                </mock-styled.p>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.h2
                  classname="mock-css."
                >
                  Telephone
                </mock-styled.h2>
                <mock-styled.p
                  classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
                >
                  07777777777
                </mock-styled.p>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.h2
                  classname="mock-css."
                >
                  Terms and Conditions
                </mock-styled.h2>
                <mock-styled.p
                  classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
                >
                  <a
                    href="https://foo.bar"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    https://foo.bar
                  </a>
                </mock-styled.p>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.h2
                  classname="mock-css."
                >
                  Privacy Policy
                </mock-styled.h2>
                <mock-styled.p
                  classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
                >
                  <a
                    href="https://foo.bar"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    https://foo.bar
                  </a>
                </mock-styled.p>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.h2
                  classname="mock-css."
                >
                  Pricing Policy
                </mock-styled.h2>
                <mock-styled.p
                  classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
                >
                  <a
                    href="https://foo.bar"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    https://foo.bar
                  </a>
                </mock-styled.p>
              </mock-styled.div>
            </mock-styled.div>
            <div
              class="mock-css.
  margin-bottom: 2.5rem;
"
            >
              <mock-styled.h2
                classname="mock-css."
              >
                About Developer
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css. mock-css."
              >
                All about us in a number of words
              </mock-styled.p>
            </div>
            <div
              class="mock-css.
  margin-bottom: 2.5rem;
"
            >
              <mock-styled.h2
                classname="mock-css."
              >
                Permissions
              </mock-styled.h2>
              <mock-styled.div>
                Read applicants
              </mock-styled.div>
              <mock-styled.div>
                Read property images
              </mock-styled.div>
              <mock-styled.div>
                Read properties
              </mock-styled.div>
            </div>
            <div
              class="mock-css.
  margin-bottom: 2.5rem;
"
            >
              <mock-styled.h2
                classname="mock-css."
              >
                AgencyCloud Launch Point
              </mock-styled.h2>
              <mock-styled.div>
                Applicant
              </mock-styled.div>
              <mock-styled.div>
                Applicant Export
              </mock-styled.div>
            </div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.section>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.section
      classname=""
    >
      <mock-styled.div
        classname="mock-css."
      >
        <div
          class="mock-css.
  padding: 0 1rem;
  display: flex;
  align-items: center;
  border-radius: var(--default-border-radius) 0 0 var(--default-border-radius);
  cursor: pointer;

  , {
    color: var(--color-white);
  }
"
          data-testid="close-icon"
        >
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </div>
        <div
          class="mock-css.
  padding: 1rem;
  opacity: 0;
  transition: 0.5s;
  width: 100%;
"
        >
          Interested in hearing more about this app? Click here and one of the Reapit Team will be in touch!
        </div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.span
          classname="mock-css."
        >
          <svg />
        </mock-styled.span>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 0.75rem;
"
      >
        <mock-styled.div>
          <mock-styled.img
            alt="will-test-dev-co-voracious-person"
            classname="mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
            src="https://reapit-marketplace-app-media-dev.s3.eu-west-2.amazonaws.com/Online-Check-List-icon.png"
          />
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  flex-direction: column;
 mock-css.
  justify-content: space-between;
"
        >
          <mock-styled.div
            classname="mock-css.
  flex-direction: column;
"
          >
            <mock-styled.h1
              classname="mock-css."
            >
              will-test-dev-co-voracious-person
            </mock-styled.h1>
            <mock-styled.p
              classname="mock-css."
            >
              Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar
            </mock-styled.p>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.span
              classname="mock-css.
  margin-right: 0.75rem;
 mock-css."
            >
              <svg />
            </mock-styled.span>
            <mock-styled.p
              classname="mock-css.
  margin-right: 0.75rem;
 mock-css."
            >
              Verified by Reapit
            </mock-styled.p>
            <mock-styled.div
              classname="mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
            >
              Category
            </mock-styled.div>
            <mock-styled.p
              classname="mock-css.
  margin-right: 0.75rem;
 mock-css. mock-css."
            >
              Integration
            </mock-styled.p>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 2.5rem;
"
      >
        <mock-styled.div
          classname="mock-css."
        >
          <mock-styled.button
            classname="mock-css."
          >
            <mock-styled.div />
            Enable Integration
          </mock-styled.button>
          <a
            href="mailto:foo@bar.com?subject=will-test-dev-co-voracious-person%20Enquiry&body=Dear%20Will Test DevCo%2C%20%0A%0AI%20would%20like%20more%20information%20about%20will-test-dev-co-voracious-person%20featured%20in%20the%20Reapit%20AppMarket%20%0A%0ARegards"
            rel="noopener noreferrer"
            target="_blank"
          >
            <mock-styled.button
              classname="mock-css."
            >
              <mock-styled.div />
              Enquire About Integration
            </mock-styled.button>
          </a>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.h2
            classname="mock-css."
          >
            About App
          </mock-styled.h2>
          <div
            class="html-render"
          >
            <mock-styled.div>
              <mock-styled.img
                alt="Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar"
                src="https://reapit-marketplace-app-media-dev.s3.eu-west-2.amazonaws.com/Online-Check-List-screen1ImageUrl.png"
              />
            </mock-styled.div>
            <mock-styled.div>
              Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar Foo bar
            </mock-styled.div>
          </div>
          <mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.button
                classname="mock-css."
              >
                <mock-styled.div />
                <mock-styled.div
                  classname="mock-css.
  align-items: center;
"
                >
                  <mock-styled.span
                    classname="mock-css.
  margin-right: 0.625rem;
 mock-css."
                    style="font-size: 1.25em;"
                  >
                    <svg
                      style="font-size: 1.25em;"
                    />
                  </mock-styled.span>
                  Getting started with 
                  will-test-dev-co-voracious-person
                </mock-styled.div>
              </mock-styled.button>
              <mock-styled.button
                classname="mock-css."
              >
                <mock-styled.div />
                <mock-styled.div
                  classname="mock-css.
  align-items: center;
"
                >
                  <mock-styled.span
                    classname="mock-css.
  margin-right: 0.625rem;
 mock-css."
                    style="font-size: 1.25em;"
                  >
                    <svg
                      style="font-size: 1.25em;"
                    />
                  </mock-styled.span>
                  Why 
                  will-test-dev-co-voracious-person
                </mock-styled.div>
              </mock-styled.button>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.div
              numbercols="2"
              numberitems="1"
              percentagewidth="50.000"
            >
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.img
                    alt="Application Image"
                    src="https://reapit-marketplace-app-media-dev.s3.eu-west-2.amazonaws.com/Online-Check-List-screen2ImageUrl.png"
                  />
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  margin-bottom: 2.5rem;
"
          >
            <mock-styled.div>
              <mock-styled.h2
                classname="mock-css."
              >
                Website
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
              >
                <a
                  href="https://foo.bar"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  https://foo.bar
                </a>
              </mock-styled.p>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.h2
                classname="mock-css."
              >
                Support Email
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
              >
                <a
                  href="mailto:foo@bar.com"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  foo@bar.com
                </a>
              </mock-styled.p>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.h2
                classname="mock-css."
              >
                Telephone
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
              >
                07777777777
              </mock-styled.p>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.h2
                classname="mock-css."
              >
                Terms and Conditions
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
              >
                <a
                  href="https://foo.bar"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  https://foo.bar
                </a>
              </mock-styled.p>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.h2
                classname="mock-css."
              >
                Privacy Policy
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
              >
                <a
                  href="https://foo.bar"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  https://foo.bar
                </a>
              </mock-styled.p>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.h2
                classname="mock-css."
              >
                Pricing Policy
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css.
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
 mock-css. mock-css."
              >
                <a
                  href="https://foo.bar"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  https://foo.bar
                </a>
              </mock-styled.p>
            </mock-styled.div>
          </mock-styled.div>
          <div
            class="mock-css.
  margin-bottom: 2.5rem;
"
          >
            <mock-styled.h2
              classname="mock-css."
            >
              About Developer
            </mock-styled.h2>
            <mock-styled.p
              classname="mock-css. mock-css."
            >
              All about us in a number of words
            </mock-styled.p>
          </div>
          <div
            class="mock-css.
  margin-bottom: 2.5rem;
"
          >
            <mock-styled.h2
              classname="mock-css."
            >
              Permissions
            </mock-styled.h2>
            <mock-styled.div>
              Read applicants
            </mock-styled.div>
            <mock-styled.div>
              Read property images
            </mock-styled.div>
            <mock-styled.div>
              Read properties
            </mock-styled.div>
          </div>
          <div
            class="mock-css.
  margin-bottom: 2.5rem;
"
          >
            <mock-styled.h2
              classname="mock-css."
            >
              AgencyCloud Launch Point
            </mock-styled.h2>
            <mock-styled.div>
              Applicant
            </mock-styled.div>
            <mock-styled.div>
              Applicant Export
            </mock-styled.div>
          </div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
