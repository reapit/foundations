// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ServiceChart handleUseEffect should render Chart 1`] = `
<div>
  <Bar
    data={
      Object {
        "datasets": Array [
          Object {
            "backgroundColor": "rgba(255,99,132,0.2)",
            "borderColor": "rgba(255,99,132,1)",
            "borderWidth": 1,
            "data": Array [
              1,
              2,
              3,
            ],
            "hoverBackgroundColor": "rgba(255,99,132,0.4)",
            "hoverBorderColor": "rgba(255,99,132,1)",
            "label": "Resource",
          },
        ],
        "label": Array [
          "A",
          "B",
          "C",
        ],
      }
    }
    height={50}
    options={
      Object {
        "maintainAspectRatio": false,
        "scales": Object {
          "yAxes": Array [
            Object {
              "scaleLabel": Object {
                "display": true,
                "labelString": "Total Cost ( Â£ )",
              },
            },
          ],
        },
      }
    }
    width={50}
  />
</div>
`;

exports[`ServiceChart handleUseEffect should render Loader 1`] = `
<div>
  <Component />
</div>
`;

exports[`ServiceChart should match a snapshot 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <Component />
</ContextProvider>
`;
