// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppSidebar should match a snapshot 1`] = `
<div
  className="sym7snt-sidebar"
>
  <FlexContainerBasic
    flexColumn={true}
    hasPadding={true}
  >
    <div
      className="syuub8n-sidebar-wrap"
    >
      <H5>
        Browse Apps
      </H5>
      <H6
        className="semyxxp-sub-heading"
      >
        Search
      </H6>
      <Formik
        component={[Function]}
        enableReinitialize={true}
        initialValues={
          Object {
            "search": undefined,
            "searchBy": "appName",
          }
        }
        onSubmit={[Function]}
        validationSchema={
          ObjectSchema {
            "_blacklist": ReferenceSet {
              "list": Set {},
              "refs": Map {},
            },
            "_blacklistError": undefined,
            "_excludedEdges": Array [],
            "_nodes": Array [
              "searchBy",
              "search",
            ],
            "_sortErrors": [Function],
            "_typeError": [Function],
            "_whitelist": ReferenceSet {
              "list": Set {},
              "refs": Map {},
            },
            "_whitelistError": undefined,
            "conditions": Array [],
            "deps": Array [],
            "exclusiveTests": Object {},
            "fields": Object {
              "search": StringSchema {
                "_blacklist": ReferenceSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_blacklistError": undefined,
                "_typeError": [Function],
                "_whitelist": ReferenceSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_whitelistError": undefined,
                "conditions": Array [],
                "deps": Array [],
                "exclusiveTests": Object {
                  "matches": false,
                  "max": true,
                  "trim": false,
                },
                "spec": Object {
                  "abortEarly": true,
                  "nullable": false,
                  "presence": "optional",
                  "recursive": true,
                  "strict": false,
                  "strip": false,
                },
                "tests": Array [
                  [Function],
                  [Function],
                  [Function],
                ],
                "transforms": Array [
                  [Function],
                  [Function],
                ],
                "type": "string",
              },
              "searchBy": StringSchema {
                "_blacklist": ReferenceSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_blacklistError": undefined,
                "_mutate": undefined,
                "_typeError": [Function],
                "_whitelist": ReferenceSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_whitelistError": undefined,
                "conditions": Array [],
                "deps": Array [],
                "exclusiveTests": Object {
                  "required": true,
                },
                "spec": Object {
                  "abortEarly": true,
                  "nullable": false,
                  "presence": "required",
                  "recursive": true,
                  "strict": false,
                  "strip": false,
                },
                "tests": Array [
                  [Function],
                ],
                "transforms": Array [
                  [Function],
                ],
                "type": "string",
              },
            },
            "spec": Object {
              "abortEarly": true,
              "nullable": false,
              "presence": "optional",
              "recursive": true,
              "strict": false,
              "strip": false,
            },
            "tests": Array [],
            "transforms": Array [
              [Function],
            ],
            "type": "object",
          }
        }
      />
    </div>
    <div
      className="syuub8n-sidebar-wrap"
    >
      <H6
        className="semyxxp-sub-heading"
      >
        Filter
      </H6>
      <CategoriesList
        categories={
          Array [
            Object {
              "description": "apps for game",
              "id": "3",
              "name": "Game",
            },
            Object {
              "description": "apps for entertainment",
              "id": "2",
              "name": "entertainment",
            },
            Object {
              "description": "apps for education",
              "id": "1",
              "name": "education",
            },
            Object {
              "id": "DIRECT_API_APPS_FILTER",
              "name": "Integration",
            },
          ]
        }
        onSelectCategory={[Function]}
      />
    </div>
  </FlexContainerBasic>
</div>
`;

exports[`FilterForm should match a snapshot 1`] = `
<Form>
  <Input
    id="search"
    name="search"
    placeholder="Search..."
    rightIcon={
      <button
        className="b101rvil-btn-search"
        type="submit"
      >
        <FaSearch />
      </button>
    }
    type="text"
  />
  <RadioSelect
    id="searchBy"
    name="searchBy"
    options={
      Array [
        Object {
          "label": "By App Name",
          "value": "appName",
        },
        Object {
          "label": "By Company",
          "value": "companyName",
        },
      ]
    }
    state="1"
  />
</Form>
`;
