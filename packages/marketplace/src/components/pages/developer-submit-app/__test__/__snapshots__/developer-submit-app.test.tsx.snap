// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DeveloperSubmitApp should match a snapshot when pendingRevisions = false 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "registerRoute",
          "pathname": "/register",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "registerRoute",
              "pathname": "/register",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "registerRoute",
            "pathname": "/register",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Component>
        <Component
          className=" undefined"
          data-test="app-input-form"
          flexColumn={true}
          hasPadding={true}
        >
          <div
            className=" container-flex is-column   has-padding   undefined"
          >
            <Component
              flexColumn={true}
              hasBackground={true}
              hasPadding={true}
            >
              <div
                className="container is-column  has-background has-padding  "
              >
                <Component>
                  <h3
                    className="title is-3  "
                    id=""
                  >
                    Submit App
                  </h3>
                </Component>
                <Formik
                  initialValues={
                    Object {
                      "authFlow": "",
                      "categoryId": "",
                      "description": "",
                      "desktopIntegrationTypeIds": "",
                      "developerId": null,
                      "homePage": "",
                      "iconImageUrl": "",
                      "launchUri": "",
                      "limitToClientIds": "",
                      "name": "",
                      "redirectUris": "",
                      "scopes": Array [],
                      "screen1ImageUrl": "",
                      "screen2ImageUrl": "",
                      "screen3ImageUrl": "",
                      "screen4ImageUrl": "",
                      "screen5ImageUrl": "",
                      "signoutUris": "",
                      "summary": "",
                      "supportEmail": "",
                      "telephone": "",
                    }
                  }
                  onSubmit={[Function]}
                  validate={[Function]}
                  validationSchema={
                    ObjectSchema {
                      "_blacklist": RefSet {
                        "list": Set {},
                        "refs": Map {},
                      },
                      "_conditions": Array [],
                      "_defaultDefault": [Function],
                      "_deps": Array [],
                      "_excludedEdges": Array [],
                      "_exclusive": Object {},
                      "_mutate": undefined,
                      "_nodes": Array [
                        "telephone",
                        "name",
                      ],
                      "_options": Object {
                        "abortEarly": true,
                        "recursive": true,
                      },
                      "_type": "object",
                      "_typeError": [Function],
                      "_whitelist": RefSet {
                        "list": Set {},
                        "refs": Map {},
                      },
                      "fields": Object {
                        "name": StringSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {
                            "matches": false,
                            "max": true,
                            "required": true,
                            "trim": false,
                          },
                          "_mutate": undefined,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "tests": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "transforms": Array [
                            [Function],
                            [Function],
                          ],
                          "type": "string",
                        },
                        "telephone": StringSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {
                            "matches": false,
                            "max": true,
                            "required": true,
                            "trim": false,
                          },
                          "_mutate": undefined,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "tests": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "transforms": Array [
                            [Function],
                            [Function],
                          ],
                          "type": "string",
                        },
                      },
                      "tests": Array [],
                      "transforms": Array [
                        [Function],
                      ],
                      "type": "object",
                    }
                  }
                >
                  <Form
                    noValidate={true}
                  >
                    <form
                      action="#"
                      noValidate={true}
                      onReset={[Function]}
                      onSubmit={[Function]}
                    >
                      <GeneralInformationSection>
                        <Component
                          data-test="submit-app-form"
                        >
                          <div
                            className="form-section mb-4 "
                          >
                            <Component>
                              <div
                                className="notification helper-wrap helper-info"
                              >
                                For more information on how to complete this form, please view our "Step-by-step" guideÂ 
                                <a
                                  className={[Function]}
                                  href="https://foundations-documentation.reapit.cloud/developer-portal"
                                  rel="noopener noreferrer"
                                  target="_blank"
                                >
                                  here
                                </a>
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="form-heading mb-1 "
                              >
                                App Listing
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="form-subheading mb-6 "
                              >
                                The section below relates to the fields that comprise the listing of your application as it will appear to a user in the Marketplace. It also includes details we will use to enable us to contact you about your submitted application, how best to make your app discoverable to users and to determine where to launch it from the marketplace.
                              </div>
                            </Component>
                            <Component
                              isMultiLine={true}
                            >
                              <div
                                className="columns is-multiline "
                                data-test=""
                              >
                                <Component>
                                  <div
                                    className="column  "
                                    data-test=""
                                  >
                                    <Component
                                      dataTest="submit-app-name"
                                      id="name"
                                      labelText="Name"
                                      name="name"
                                      placeholder="The name of your app as it will appear to users"
                                      required={true}
                                      type="text"
                                    >
                                      <Field
                                        name="name"
                                        validate={[Function]}
                                      >
                                        <div
                                          className="field pb-4"
                                        >
                                          <div
                                            className="control "
                                          >
                                            <label
                                              className="label inline-block required-label"
                                              htmlFor="name"
                                            >
                                              Name
                                            </label>
                                            <input
                                              className="input is-primary"
                                              data-test="submit-app-name"
                                              disabled={false}
                                              id="name"
                                              name="name"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder="The name of your app as it will appear to users"
                                              type="text"
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </Field>
                                    </Component>
                                  </div>
                                </Component>
                                <Component>
                                  <div
                                    className="column  "
                                    data-test=""
                                  >
                                    <Component
                                      id="categoryId"
                                      labelText="Category"
                                      name="categoryId"
                                      options={Array []}
                                    >
                                      <Field
                                        name="categoryId"
                                        validate={null}
                                      >
                                        <div
                                          className="field pb-2"
                                        >
                                          <div
                                            className="control"
                                          >
                                            <label
                                              className="label "
                                              htmlFor="categoryId"
                                            >
                                              Category
                                            </label>
                                            <select
                                              className="input is-primary "
                                              data-test=""
                                              name="categoryId"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value=""
                                            >
                                              <option
                                                disabled={true}
                                                hidden={true}
                                                value=""
                                              >
                                                Please select
                                              </option>
                                            </select>
                                          </div>
                                        </div>
                                      </Field>
                                    </Component>
                                  </div>
                                </Component>
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="columns  "
                                data-test=""
                              >
                                <Component>
                                  <div
                                    className="column  "
                                    data-test=""
                                  >
                                    <Component
                                      dataTest="submit-app-support-email"
                                      id="supportEmail"
                                      labelText="Support email"
                                      name="supportEmail"
                                      placeholder="The contact to your support team if your users have a problem"
                                      required={true}
                                      type="email"
                                    >
                                      <Field
                                        name="supportEmail"
                                        validate={[Function]}
                                      >
                                        <div
                                          className="field pb-4"
                                        >
                                          <div
                                            className="control "
                                          >
                                            <label
                                              className="label inline-block required-label"
                                              htmlFor="supportEmail"
                                            >
                                              Support email
                                            </label>
                                            <input
                                              className="input is-primary"
                                              data-test="submit-app-support-email"
                                              disabled={false}
                                              id="supportEmail"
                                              name="supportEmail"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder="The contact to your support team if your users have a problem"
                                              type="email"
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </Field>
                                    </Component>
                                  </div>
                                </Component>
                                <Component>
                                  <div
                                    className="column  "
                                    data-test=""
                                  >
                                    <Component
                                      dataTest="submit-app-phone"
                                      id="phone"
                                      labelText="Telephone"
                                      name="telephone"
                                      placeholder="Should one of our developers need to contact you about your app"
                                      required={true}
                                      type="tel"
                                    >
                                      <Field
                                        name="telephone"
                                        validate={[Function]}
                                      >
                                        <div
                                          className="field pb-4"
                                        >
                                          <div
                                            className="control "
                                          >
                                            <label
                                              className="label inline-block required-label"
                                              htmlFor="phone"
                                            >
                                              Telephone
                                            </label>
                                            <input
                                              className="input is-primary"
                                              data-test="submit-app-phone"
                                              disabled={false}
                                              id="phone"
                                              name="telephone"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder="Should one of our developers need to contact you about your app"
                                              type="tel"
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </Field>
                                    </Component>
                                  </div>
                                </Component>
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="columns  "
                                data-test=""
                              >
                                <Component>
                                  <div
                                    className="column  "
                                    data-test=""
                                  >
                                    <Component
                                      dataTest="submit-app-home-page"
                                      id="homePage"
                                      labelText="Home page"
                                      name="homePage"
                                      placeholder="Your company homepage. HTTP:// or HTTPS://"
                                      required={true}
                                      type="text"
                                    >
                                      <Field
                                        name="homePage"
                                        validate={[Function]}
                                      >
                                        <div
                                          className="field pb-4"
                                        >
                                          <div
                                            className="control "
                                          >
                                            <label
                                              className="label inline-block required-label"
                                              htmlFor="homePage"
                                            >
                                              Home page
                                            </label>
                                            <input
                                              className="input is-primary"
                                              data-test="submit-app-home-page"
                                              disabled={false}
                                              id="homePage"
                                              name="homePage"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder="Your company homepage. HTTP:// or HTTPS://"
                                              type="text"
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </Field>
                                    </Component>
                                  </div>
                                </Component>
                                <Component>
                                  <div
                                    className="column  "
                                    data-test=""
                                  >
                                    <Component
                                      dataTest="submit-app-launch-uri"
                                      id="launch Url"
                                      labelText="Launch URI"
                                      name="launchUri"
                                      placeholder="The launch page for your app. HTTPS only other than for http://localhost"
                                      required={true}
                                      type="text"
                                    >
                                      <Field
                                        name="launchUri"
                                        validate={[Function]}
                                      >
                                        <div
                                          className="field pb-4"
                                        >
                                          <div
                                            className="control "
                                          >
                                            <label
                                              className="label inline-block required-label"
                                              htmlFor="launch Url"
                                            >
                                              Launch URI
                                            </label>
                                            <input
                                              className="input is-primary"
                                              data-test="submit-app-launch-uri"
                                              disabled={false}
                                              id="launch Url"
                                              name="launchUri"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder="The launch page for your app. HTTPS only other than for http://localhost"
                                              type="text"
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </Field>
                                    </Component>
                                  </div>
                                </Component>
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="columns  "
                                data-test=""
                              >
                                <Component>
                                  <div
                                    className="column  "
                                    data-test=""
                                  >
                                    <Component
                                      dataTest="submit-app-summary"
                                      id="summary"
                                      labelText="Summary"
                                      name="summary"
                                      placeholder="A short strapline summary for your app listing. Must be between 50 and 150 characters"
                                      required={true}
                                    >
                                      <Field
                                        name="summary"
                                      >
                                        <div
                                          className="field"
                                        >
                                          <div
                                            className="control"
                                          >
                                            <label
                                              className=""
                                              htmlFor="summary"
                                            >
                                              Summary
                                            </label>
                                            <textarea
                                              className=""
                                              data-test="submit-app-summary"
                                              id="summary"
                                              name="summary"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder="A short strapline summary for your app listing. Must be between 50 and 150 characters"
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </Field>
                                    </Component>
                                  </div>
                                </Component>
                                <Component>
                                  <div
                                    className="column  "
                                    data-test=""
                                  >
                                    <Component
                                      actions={
                                        Array [
                                          "bold",
                                          "italic",
                                          "paragraph",
                                          "olist",
                                          "ulist",
                                          "link",
                                          Object {
                                            "icon": "<b>H<sub>5</sub></b>",
                                            "name": "test",
                                            "result": [Function],
                                            "title": "Add heading 5",
                                          },
                                        ]
                                      }
                                      dataTest="submit-app-description"
                                      id="description"
                                      labelText="Description"
                                      name="description"
                                      placeholder="A detailed description for your app listing. Must be between 150 and 1000 characters. Please note: As this field supports HTML, special characters will be included in the character count"
                                      required={true}
                                    >
                                      <div
                                        className="field pb-2"
                                      >
                                        <div
                                          className="control"
                                        >
                                          <label
                                            className="label required-label"
                                            htmlFor="description"
                                          >
                                            Description
                                          </label>
                                          <Component
                                            actions={
                                              Array [
                                                "bold",
                                                "italic",
                                                "paragraph",
                                                "olist",
                                                "ulist",
                                                "link",
                                                Object {
                                                  "icon": "<b>H<sub>5</sub></b>",
                                                  "name": "test",
                                                  "result": [Function],
                                                  "title": "Add heading 5",
                                                },
                                              ]
                                            }
                                            dataTest="submit-app-description"
                                            defaultContent=""
                                            hasError={false}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onPaste={[Function]}
                                            placeholder="A detailed description for your app listing. Must be between 150 and 1000 characters. Please note: As this field supports HTML, special characters will be included in the character count"
                                          >
                                            <div
                                              className="pell false "
                                              data-test="submit-app-description"
                                              onBlur={[Function]}
                                              onPaste={[Function]}
                                            />
                                          </Component>
                                        </div>
                                      </div>
                                    </Component>
                                  </div>
                                </Component>
                              </div>
                            </Component>
                          </div>
                        </Component>
                      </GeneralInformationSection>
                      <AgencyCloudIntegrationSection>
                        <Component>
                          <div
                            className="form-section mb-4 "
                          >
                            <Component>
                              <div
                                className="form-heading mb-1 "
                              >
                                Agency Cloud Integration
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="form-subheading mb-6 "
                              >
                                To be able to associate your application with an action in Agency Cloud the application will need to be given a desktop type. Please select the type of integration your app requires from the list below. For more information on Desktop Types, please
                                 
                                <a
                                  className={[Function]}
                                  href="https://foundations-documentation.reapit.cloud/api/desktop-api#desktop-types"
                                  rel="noopener noreferrer"
                                  target="_blank"
                                >
                                  click here
                                </a>
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="columns  "
                                data-test=""
                              >
                                <Component>
                                  <div
                                    className="column  "
                                    data-test=""
                                  >
                                    <Component
                                      fixedPosition={true}
                                      id="desktopIntegrationTypeIds"
                                      labelText="Integration Type"
                                      mode="multiple"
                                      name="desktopIntegrationTypeIds"
                                      options={Array []}
                                      placeholder="Please select"
                                    >
                                      <div
                                        className="field pb-4"
                                      >
                                        <div
                                          className="control"
                                        >
                                          <Field
                                            name="desktopIntegrationTypeIds"
                                            validate={null}
                                          >
                                            <div
                                              className="field field-dropdown-select"
                                            >
                                              <label
                                                className="label "
                                              >
                                                Integration Type
                                              </label>
                                              <Select
                                                className="is-primary input"
                                                dropdownStyle={
                                                  Object {
                                                    "zIndex": 999,
                                                  }
                                                }
                                                id="desktopIntegrationTypeIds"
                                                mode="multiple"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                placeholder="Please select"
                                                tagRender={[Function]}
                                                value={Array []}
                                              >
                                                <ForwardRef(Select)
                                                  className="is-primary input"
                                                  dropdownStyle={
                                                    Object {
                                                      "zIndex": 999,
                                                    }
                                                  }
                                                  id="desktopIntegrationTypeIds"
                                                  mode="multiple"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder="Please select"
                                                  tagRender={[Function]}
                                                  value={Array []}
                                                >
                                                  <div
                                                    className="rc-select is-primary input rc-select-multiple rc-select-show-search"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                  >
                                                    <SelectTrigger
                                                      containerWidth={null}
                                                      dropdownStyle={
                                                        Object {
                                                          "zIndex": 999,
                                                        }
                                                      }
                                                      empty={true}
                                                      getTriggerDOMNode={[Function]}
                                                      popupElement={
                                                        <OptionList
                                                          childrenAsData={true}
                                                          defaultActiveFirstOption={true}
                                                          flattenOptions={Array []}
                                                          height={200}
                                                          id="desktopIntegrationTypeIds"
                                                          itemHeight={20}
                                                          multiple={true}
                                                          notFoundContent="Not Found"
                                                          onActiveValue={[Function]}
                                                          onSelect={[Function]}
                                                          onToggleOpen={[Function]}
                                                          options={Array []}
                                                          prefixCls="rc-select"
                                                          searchValue=""
                                                          values={Set {}}
                                                          virtual={true}
                                                        />
                                                      }
                                                      prefixCls="rc-select"
                                                    >
                                                      <Trigger
                                                        action={Array []}
                                                        afterPopupVisibleChange={[Function]}
                                                        autoDestroy={false}
                                                        blurDelay={0.15}
                                                        builtinPlacements={
                                                          Object {
                                                            "bottomLeft": Object {
                                                              "offset": Array [
                                                                0,
                                                                4,
                                                              ],
                                                              "overflow": Object {
                                                                "adjustX": 0,
                                                                "adjustY": 1,
                                                              },
                                                              "points": Array [
                                                                "tl",
                                                                "bl",
                                                              ],
                                                            },
                                                            "bottomRight": Object {
                                                              "offset": Array [
                                                                0,
                                                                4,
                                                              ],
                                                              "overflow": Object {
                                                                "adjustX": 0,
                                                                "adjustY": 1,
                                                              },
                                                              "points": Array [
                                                                "tr",
                                                                "br",
                                                              ],
                                                            },
                                                            "topLeft": Object {
                                                              "offset": Array [
                                                                0,
                                                                -4,
                                                              ],
                                                              "overflow": Object {
                                                                "adjustX": 0,
                                                                "adjustY": 1,
                                                              },
                                                              "points": Array [
                                                                "bl",
                                                                "tl",
                                                              ],
                                                            },
                                                            "topRight": Object {
                                                              "offset": Array [
                                                                0,
                                                                -4,
                                                              ],
                                                              "overflow": Object {
                                                                "adjustX": 0,
                                                                "adjustY": 1,
                                                              },
                                                              "points": Array [
                                                                "br",
                                                                "tr",
                                                              ],
                                                            },
                                                          }
                                                        }
                                                        defaultPopupVisible={false}
                                                        destroyPopupOnHide={false}
                                                        focusDelay={0}
                                                        getDocument={[Function]}
                                                        getPopupClassNameFromAlign={[Function]}
                                                        getTriggerDOMNode={[Function]}
                                                        hideAction={Array []}
                                                        mask={false}
                                                        maskClosable={true}
                                                        mouseEnterDelay={0}
                                                        mouseLeaveDelay={0.1}
                                                        onPopupAlign={[Function]}
                                                        onPopupVisibleChange={[Function]}
                                                        popup={
                                                          <div>
                                                            <OptionList
                                                              childrenAsData={true}
                                                              defaultActiveFirstOption={true}
                                                              flattenOptions={Array []}
                                                              height={200}
                                                              id="desktopIntegrationTypeIds"
                                                              itemHeight={20}
                                                              multiple={true}
                                                              notFoundContent="Not Found"
                                                              onActiveValue={[Function]}
                                                              onSelect={[Function]}
                                                              onToggleOpen={[Function]}
                                                              options={Array []}
                                                              prefixCls="rc-select"
                                                              searchValue=""
                                                              values={Set {}}
                                                              virtual={true}
                                                            />
                                                          </div>
                                                        }
                                                        popupAlign={Object {}}
                                                        popupClassName="rc-select-dropdown-empty"
                                                        popupPlacement="bottomLeft"
                                                        popupStyle={
                                                          Object {
                                                            "minWidth": null,
                                                            "width": null,
                                                            "zIndex": 999,
                                                          }
                                                        }
                                                        prefixCls="rc-select-dropdown"
                                                        showAction={Array []}
                                                      >
                                                        <Selector
                                                          accessibilityIndex={0}
                                                          activeValue={null}
                                                          className="is-primary input"
                                                          domRef={
                                                            Object {
                                                              "current": <div
                                                                class="rc-select-selector"
                                                              >
                                                                <span
                                                                  class="rc-select-selection-search"
                                                                  style="width: 0px;"
                                                                >
                                                                  <input
                                                                    aria-activedescendant="desktopIntegrationTypeIds_list_0"
                                                                    aria-autocomplete="list"
                                                                    aria-controls="desktopIntegrationTypeIds_list"
                                                                    aria-haspopup="listbox"
                                                                    aria-owns="desktopIntegrationTypeIds_list"
                                                                    autocomplete="off"
                                                                    class="rc-select-selection-search-input"
                                                                    id="desktopIntegrationTypeIds"
                                                                    readonly=""
                                                                    role="combobox"
                                                                    style="opacity: 0;"
                                                                    unselectable="on"
                                                                    value=""
                                                                  />
                                                                  <span
                                                                    aria-hidden="true"
                                                                    class="rc-select-selection-search-mirror"
                                                                  >
                                                                    
                                                                    Â 
                                                                  </span>
                                                                </span>
                                                                <span
                                                                  class="rc-select-selection-placeholder"
                                                                >
                                                                  Please select
                                                                </span>
                                                              </div>,
                                                            }
                                                          }
                                                          dropdownStyle={
                                                            Object {
                                                              "zIndex": 999,
                                                            }
                                                          }
                                                          id="desktopIntegrationTypeIds"
                                                          inputElement={null}
                                                          key="trigger"
                                                          mode="multiple"
                                                          multiple={true}
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onSearch={[Function]}
                                                          onSelect={[Function]}
                                                          onToggleOpen={[Function]}
                                                          placeholder="Please select"
                                                          prefixCls="rc-select"
                                                          searchValue=""
                                                          showSearch={true}
                                                          tagRender={[Function]}
                                                          value={Array []}
                                                          values={Array []}
                                                        >
                                                          <div
                                                            className="rc-select-selector"
                                                            onClick={[Function]}
                                                            onMouseDown={[Function]}
                                                          >
                                                            <SelectSelector
                                                              accessibilityIndex={0}
                                                              activeValue={null}
                                                              className="is-primary input"
                                                              domRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="rc-select-selector"
                                                                  >
                                                                    <span
                                                                      class="rc-select-selection-search"
                                                                      style="width: 0px;"
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="desktopIntegrationTypeIds_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="desktopIntegrationTypeIds_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="desktopIntegrationTypeIds_list"
                                                                        autocomplete="off"
                                                                        class="rc-select-selection-search-input"
                                                                        id="desktopIntegrationTypeIds"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="rc-select-selection-search-mirror"
                                                                      >
                                                                        
                                                                        Â 
                                                                      </span>
                                                                    </span>
                                                                    <span
                                                                      class="rc-select-selection-placeholder"
                                                                    >
                                                                      Please select
                                                                    </span>
                                                                  </div>,
                                                                }
                                                              }
                                                              dropdownStyle={
                                                                Object {
                                                                  "zIndex": 999,
                                                                }
                                                              }
                                                              id="desktopIntegrationTypeIds"
                                                              inputElement={null}
                                                              inputRef={
                                                                Object {
                                                                  "current": <input
                                                                    aria-activedescendant="desktopIntegrationTypeIds_list_0"
                                                                    aria-autocomplete="list"
                                                                    aria-controls="desktopIntegrationTypeIds_list"
                                                                    aria-haspopup="listbox"
                                                                    aria-owns="desktopIntegrationTypeIds_list"
                                                                    autocomplete="off"
                                                                    class="rc-select-selection-search-input"
                                                                    id="desktopIntegrationTypeIds"
                                                                    readonly=""
                                                                    role="combobox"
                                                                    style="opacity: 0;"
                                                                    unselectable="on"
                                                                    value=""
                                                                  />,
                                                                }
                                                              }
                                                              mode="multiple"
                                                              multiple={true}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onInputChange={[Function]}
                                                              onInputKeyDown={[Function]}
                                                              onInputMouseDown={[Function]}
                                                              onInputPaste={[Function]}
                                                              onSearch={[Function]}
                                                              onSelect={[Function]}
                                                              onToggleOpen={[Function]}
                                                              placeholder="Please select"
                                                              prefixCls="rc-select"
                                                              searchValue=""
                                                              showSearch={true}
                                                              tagRender={[Function]}
                                                              value={Array []}
                                                              values={Array []}
                                                            >
                                                              <CSSMotionList
                                                                component={false}
                                                                keys={Array []}
                                                                motionAppear={true}
                                                              />
                                                              <span
                                                                className="rc-select-selection-search"
                                                                style={
                                                                  Object {
                                                                    "width": 0,
                                                                  }
                                                                }
                                                              >
                                                                <Input
                                                                  accessibilityIndex={0}
                                                                  attrs={Object {}}
                                                                  id="desktopIntegrationTypeIds"
                                                                  inputElement={null}
                                                                  onChange={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onPaste={[Function]}
                                                                  prefixCls="rc-select"
                                                                  value=""
                                                                >
                                                                  <input
                                                                    aria-activedescendant="desktopIntegrationTypeIds_list_0"
                                                                    aria-autocomplete="list"
                                                                    aria-controls="desktopIntegrationTypeIds_list"
                                                                    aria-haspopup="listbox"
                                                                    aria-owns="desktopIntegrationTypeIds_list"
                                                                    autoComplete="off"
                                                                    className="rc-select-selection-search-input"
                                                                    id="desktopIntegrationTypeIds"
                                                                    onChange={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onPaste={[Function]}
                                                                    readOnly={true}
                                                                    role="combobox"
                                                                    style={
                                                                      Object {
                                                                        "opacity": 0,
                                                                      }
                                                                    }
                                                                    unselectable="on"
                                                                    value=""
                                                                  />
                                                                </Input>
                                                                <span
                                                                  aria-hidden={true}
                                                                  className="rc-select-selection-search-mirror"
                                                                >
                                                                  Â 
                                                                </span>
                                                              </span>
                                                              <span
                                                                className="rc-select-selection-placeholder"
                                                              >
                                                                Please select
                                                              </span>
                                                            </SelectSelector>
                                                          </div>
                                                        </Selector>
                                                      </Trigger>
                                                    </SelectTrigger>
                                                  </div>
                                                </ForwardRef(Select)>
                                              </Select>
                                            </div>
                                          </Field>
                                        </div>
                                      </div>
                                      <div />
                                    </Component>
                                  </div>
                                </Component>
                              </div>
                            </Component>
                          </div>
                        </Component>
                      </AgencyCloudIntegrationSection>
                      <AuthenticationFlowSection
                        authFlow=""
                        isSubmitApp={true}
                        setFieldValue={[Function]}
                      >
                        <Component>
                          <div
                            className="form-section mb-4 "
                          >
                            <Component>
                              <div
                                className="form-heading mb-1 "
                              >
                                AUTHENTICATION FLOW *
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="form-subheading mb-6 "
                              >
                                Please select an authentication flow for your application.
                                 
                                <strong>
                                  You can only do this once when you submit your app
                                </strong>
                                . If your application is
                                 
                                <strong>
                                  user facing
                                </strong>
                                , you should select "Authorization Code". This will allow you to use our hosted authentication service, Reapit Connect. If you are developing a
                                 
                                <strong>
                                  server-side machine to machine
                                </strong>
                                 application such as a feed to another system, you should select "Client Credentials".
                                 
                                <strong>
                                  This flow must not be used for applications without a server-side component
                                </strong>
                                . For more information on authentication, see our platform documentation
                                 
                                <a
                                  className={[Function]}
                                  href="https://foundations-documentation.reapit.cloud/api/api-documentation#authentication"
                                  rel="noopener noreferrer"
                                  target="_blank"
                                >
                                  here
                                </a>
                                 
                                before progressing.
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="columns  "
                                data-test=""
                              >
                                <Component>
                                  <div
                                    className="column  "
                                    data-test=""
                                  >
                                    <Component
                                      disabled={false}
                                      id="authFlow"
                                      name="authFlow"
                                      options={
                                        Array [
                                          Object {
                                            "label": "AUTHORIZATION CODE (Reapit Connect)",
                                            "value": "authorisationCode",
                                          },
                                          Object {
                                            "label": "CLIENT CREDENTIALS",
                                            "value": "clientCredentials",
                                          },
                                        ]
                                      }
                                      setFieldValue={[Function]}
                                      state=""
                                    >
                                      <Field
                                        name="authFlow"
                                        type="radio"
                                      >
                                        <div
                                          className="field pb-2 "
                                        >
                                          <div
                                            className="control"
                                          >
                                            <label
                                              className="label"
                                              htmlFor="authFlow"
                                            />
                                            <Component
                                              className=""
                                              isMultiLine={true}
                                            >
                                              <div
                                                className="columns is-multiline "
                                                data-test=""
                                              >
                                                <Component
                                                  className=""
                                                  key="0"
                                                >
                                                  <div
                                                    className="column  "
                                                    data-test=""
                                                  >
                                                    <div
                                                      className="radio-wrap"
                                                    >
                                                      <input
                                                        checked={false}
                                                        className="checkbox "
                                                        disabled={false}
                                                        id="authFlowAUTHORIZATION CODE (Reapit Connect)"
                                                        key="authorisationCode"
                                                        name="authFlow"
                                                        onChange={[Function]}
                                                        type="radio"
                                                        value="authorisationCode"
                                                      />
                                                      <label
                                                        htmlFor="authFlowAUTHORIZATION CODE (Reapit Connect)"
                                                      >
                                                        AUTHORIZATION CODE (Reapit Connect)
                                                      </label>
                                                    </div>
                                                  </div>
                                                </Component>
                                                <Component
                                                  className=""
                                                  key="1"
                                                >
                                                  <div
                                                    className="column  "
                                                    data-test=""
                                                  >
                                                    <div
                                                      className="radio-wrap"
                                                    >
                                                      <input
                                                        checked={false}
                                                        className="checkbox "
                                                        disabled={false}
                                                        id="authFlowCLIENT CREDENTIALS"
                                                        key="clientCredentials"
                                                        name="authFlow"
                                                        onChange={[Function]}
                                                        type="radio"
                                                        value="clientCredentials"
                                                      />
                                                      <label
                                                        htmlFor="authFlowCLIENT CREDENTIALS"
                                                      >
                                                        CLIENT CREDENTIALS
                                                      </label>
                                                    </div>
                                                  </div>
                                                </Component>
                                              </div>
                                            </Component>
                                          </div>
                                        </div>
                                      </Field>
                                    </Component>
                                  </div>
                                </Component>
                              </div>
                            </Component>
                          </div>
                        </Component>
                      </AuthenticationFlowSection>
                      <RedirectUriSection
                        authFlow=""
                        setFieldValue={[Function]}
                      >
                        <Component>
                          <div
                            className="form-section mb-4 "
                          >
                            <Component>
                              <div
                                className="columns  "
                                data-test=""
                              >
                                <Component>
                                  <div
                                    className="column  "
                                    data-test=""
                                  >
                                    <Component>
                                      <div
                                        className="form-heading mb-1 "
                                      >
                                        Redirect URI(s) 
                                        *
                                      </div>
                                    </Component>
                                    <Component>
                                      <div
                                        className="form-subheading mb-6 "
                                      >
                                        Please enter a Redirect URI(s) to define the route Reapit Connect is permitted to redirect to after a successful authentication. The following formats are supported: https://, http:// (for localhost only) or your own custom URI schemes such as myapp://login. For multiple URIâs, separate using a comma.
                                      </div>
                                    </Component>
                                    <Component
                                      dataTest="submit-app-redirect-uri"
                                      disabled={false}
                                      id="redirectUris"
                                      name="redirectUris"
                                      placeholder="Enter your Redirect URI(s)"
                                      required={true}
                                      type="text"
                                    >
                                      <Field
                                        name="redirectUris"
                                        validate={[Function]}
                                      >
                                        <div
                                          className="field pb-4"
                                        >
                                          <div
                                            className="control "
                                          >
                                            <input
                                              className="input is-primary"
                                              data-test="submit-app-redirect-uri"
                                              disabled={false}
                                              id="redirectUris"
                                              name="redirectUris"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder="Enter your Redirect URI(s)"
                                              type="text"
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </Field>
                                    </Component>
                                  </div>
                                </Component>
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="columns  "
                                data-test=""
                              >
                                <Component>
                                  <div
                                    className="column  "
                                    data-test=""
                                  >
                                    <Component>
                                      <div
                                        className="form-heading mb-1 "
                                      >
                                        Sign Out URI(s) 
                                        *
                                      </div>
                                    </Component>
                                    <Component>
                                      <div
                                        className="form-subheading mb-6 "
                                      >
                                        Please enter a Sign Out URI(s) to define the route Reapit Connect is permitted to redirect to after successfully logging out. The following formats are supported: https://, http:// (for localhost only) or your own custom URI schemes such as myapp://login. For multiple URIâs, separate using a comma.
                                      </div>
                                    </Component>
                                    <Component
                                      dataTest="submit-app-signout-uris"
                                      disabled={false}
                                      id="signoutUris"
                                      name="signoutUris"
                                      placeholder="Enter your Sign Out URI(s)"
                                      required={true}
                                      type="text"
                                    >
                                      <Field
                                        name="signoutUris"
                                        validate={[Function]}
                                      >
                                        <div
                                          className="field pb-4"
                                        >
                                          <div
                                            className="control "
                                          >
                                            <input
                                              className="input is-primary"
                                              data-test="submit-app-signout-uris"
                                              disabled={false}
                                              id="signoutUris"
                                              name="signoutUris"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder="Enter your Sign Out URI(s)"
                                              type="text"
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </Field>
                                    </Component>
                                  </div>
                                </Component>
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="columns  "
                                data-test=""
                              >
                                <Component>
                                  <div
                                    className="column  "
                                    data-test=""
                                  >
                                    <Component>
                                      <div
                                        className="form-heading mb-1 "
                                      >
                                        Private Apps
                                      </div>
                                    </Component>
                                    <Component>
                                      <div
                                        className="form-subheading mb-6 "
                                      >
                                        If your App is a Private App and you would like it to only be visible to certain customers, please select âYesâ below. You should then enter the âCustomer IDâ of the customer(s) you wish to share your app with. If you select âNoâ, your App will be visible to all on the Marketplace. For multiple customers, please separate the Customer IDs using a comma, e.g. ABC, DEF.
                                      </div>
                                    </Component>
                                    <Component
                                      id="isPrivateApp"
                                      name="isPrivateApp"
                                      options={
                                        Array [
                                          Object {
                                            "label": "YES",
                                            "value": "yes",
                                          },
                                          Object {
                                            "label": "NO",
                                            "value": "no",
                                          },
                                        ]
                                      }
                                      setFieldValue={[Function]}
                                    >
                                      <Field
                                        name="isPrivateApp"
                                        type="radio"
                                      >
                                        <div
                                          className="field pb-2 "
                                        >
                                          <div
                                            className="control"
                                          >
                                            <label
                                              className="label"
                                              htmlFor="isPrivateApp"
                                            />
                                            <Component
                                              className=""
                                              isMultiLine={true}
                                            >
                                              <div
                                                className="columns is-multiline "
                                                data-test=""
                                              >
                                                <Component
                                                  className=""
                                                  key="0"
                                                >
                                                  <div
                                                    className="column  "
                                                    data-test=""
                                                  >
                                                    <div
                                                      className="radio-wrap"
                                                    >
                                                      <input
                                                        checked={false}
                                                        className="checkbox "
                                                        disabled={false}
                                                        id="isPrivateAppYES"
                                                        key="yes"
                                                        name="isPrivateApp"
                                                        onChange={[Function]}
                                                        type="radio"
                                                        value="yes"
                                                      />
                                                      <label
                                                        htmlFor="isPrivateAppYES"
                                                      >
                                                        YES
                                                      </label>
                                                    </div>
                                                  </div>
                                                </Component>
                                                <Component
                                                  className=""
                                                  key="1"
                                                >
                                                  <div
                                                    className="column  "
                                                    data-test=""
                                                  >
                                                    <div
                                                      className="radio-wrap"
                                                    >
                                                      <input
                                                        checked={false}
                                                        className="checkbox "
                                                        disabled={false}
                                                        id="isPrivateAppNO"
                                                        key="no"
                                                        name="isPrivateApp"
                                                        onChange={[Function]}
                                                        type="radio"
                                                        value="no"
                                                      />
                                                      <label
                                                        htmlFor="isPrivateAppNO"
                                                      >
                                                        NO
                                                      </label>
                                                    </div>
                                                  </div>
                                                </Component>
                                              </div>
                                            </Component>
                                          </div>
                                        </div>
                                      </Field>
                                    </Component>
                                    <Component
                                      dataTest="submit-app-limited-to-client-ids"
                                      disabled={false}
                                      id="limitToClientIds"
                                      name="limitToClientIds"
                                      placeholder="Please enter the Customer ID. For multiple Customer IDâs, please separate using a comma"
                                      type="text"
                                    >
                                      <Field
                                        name="limitToClientIds"
                                        validate={null}
                                      >
                                        <div
                                          className="field pb-4"
                                        >
                                          <div
                                            className="control "
                                          >
                                            <input
                                              className="input is-primary"
                                              data-test="submit-app-limited-to-client-ids"
                                              disabled={false}
                                              id="limitToClientIds"
                                              name="limitToClientIds"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder="Please enter the Customer ID. For multiple Customer IDâs, please separate using a comma"
                                              type="text"
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </Field>
                                    </Component>
                                    <Component>
                                      <div
                                        className="form-subheading mb-6 "
                                      >
                                        This field is disabled during the beta period. Your app will be private by default as the Marketplace is not yet live. You will have the opportunity to make your app private via an edit before setting it to be "Listed" in the marketplace when we move from beta to production.
                                      </div>
                                    </Component>
                                  </div>
                                </Component>
                              </div>
                            </Component>
                          </div>
                        </Component>
                      </RedirectUriSection>
                      <UploadImageSection>
                        <Component>
                          <div
                            className="form-section mb-4 "
                          >
                            <Component>
                              <div
                                className="form-heading mb-1 "
                              >
                                Images
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="form-subheading mb-6 "
                              >
                                The icon field will appear as the main brand representation of your app in marketplace listings and installed apps pages. You can also select a minimum of one and up to five screenshots of your application, that will appear in a carousel in the details view of your app listing.
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="columns is-multiline "
                                data-test=""
                              >
                                <Component>
                                  <div
                                    className="column is-multiline is-half-tablet is-one-third-widescreen is-one-quarter-fullhd "
                                    data-test=""
                                  >
                                    <div
                                      className="control"
                                    >
                                      <label
                                        className="label"
                                      >
                                        Icon *
                                      </label>
                                      <Component
                                        allowClear={true}
                                        aspect={1}
                                        dataTest="submit-app-icon"
                                        id="iconImage"
                                        labelText="Upload Image"
                                        name="iconImageUrl"
                                        required={true}
                                        resizeDimensions={
                                          Object {
                                            "height": 96,
                                            "width": 96,
                                          }
                                        }
                                      >
                                        <Component
                                          aspect={1}
                                          croppedImage={null}
                                          onClose={[Function]}
                                          onCropClick={[Function]}
                                          resizeDimensions={
                                            Object {
                                              "height": 96,
                                              "width": 96,
                                            }
                                          }
                                          setCroppedImage={[Function]}
                                          setUpImg={[Function]}
                                          setVisible={[Function]}
                                          upImg=""
                                          visible={false}
                                        >
                                          <div>
                                            <Component
                                              afterLoadedImage={[Function]}
                                              allowClear={true}
                                              croppedImage={null}
                                              dataTest="submit-app-icon"
                                              id="iconImage"
                                              key=".0"
                                              labelText="Upload Image"
                                              name="iconImageUrl"
                                              required={true}
                                            >
                                              <Component
                                                accept="image/*"
                                                afterLoadedFile={[Function]}
                                                allowClear={true}
                                                croppedImage={null}
                                                dataTest="submit-app-icon"
                                                id="iconImage"
                                                labelText="Upload Image"
                                                name="iconImageUrl"
                                                required={true}
                                              >
                                                <Field
                                                  name="iconImageUrl"
                                                >
                                                  <div
                                                    className="file is-primary  field pb-2"
                                                  >
                                                    <div
                                                      className=""
                                                    >
                                                      <label
                                                        className="file-label"
                                                        data-test="file-input-label"
                                                        htmlFor="iconImage"
                                                      >
                                                        <input
                                                          accept="image/*"
                                                          className="file-input"
                                                          data-test="submit-app-icon"
                                                          id="iconImage"
                                                          onChange={[Function]}
                                                          type="file"
                                                        />
                                                        <span
                                                          className="file-cta required-label"
                                                        >
                                                          Upload Image
                                                        </span>
                                                      </label>
                                                    </div>
                                                  </div>
                                                </Field>
                                              </Component>
                                            </Component>
                                          </div>
                                        </Component>
                                      </Component>
                                    </div>
                                  </div>
                                </Component>
                                <Component>
                                  <div
                                    className="column is-multiline is-half-tablet is-one-third-widescreen is-one-quarter-fullhd "
                                    data-test=""
                                  >
                                    <div
                                      className="control mb-4"
                                    >
                                      <label
                                        className="label"
                                      >
                                        Screenshot 1 *
                                      </label>
                                      <Component
                                        allowClear={true}
                                        aspect={2.22972972972973}
                                        dataTest="submit-app-screenshot1"
                                        id="screenshot1"
                                        labelText="Upload Image"
                                        name="screen1ImageUrl"
                                        required={true}
                                        resizeDimensions={
                                          Object {
                                            "height": 222,
                                            "width": 495,
                                          }
                                        }
                                      >
                                        <Component
                                          aspect={2.22972972972973}
                                          croppedImage={null}
                                          onClose={[Function]}
                                          onCropClick={[Function]}
                                          resizeDimensions={
                                            Object {
                                              "height": 222,
                                              "width": 495,
                                            }
                                          }
                                          setCroppedImage={[Function]}
                                          setUpImg={[Function]}
                                          setVisible={[Function]}
                                          upImg=""
                                          visible={false}
                                        >
                                          <div>
                                            <Component
                                              afterLoadedImage={[Function]}
                                              allowClear={true}
                                              croppedImage={null}
                                              dataTest="submit-app-screenshot1"
                                              id="screenshot1"
                                              key=".0"
                                              labelText="Upload Image"
                                              name="screen1ImageUrl"
                                              required={true}
                                            >
                                              <Component
                                                accept="image/*"
                                                afterLoadedFile={[Function]}
                                                allowClear={true}
                                                croppedImage={null}
                                                dataTest="submit-app-screenshot1"
                                                id="screenshot1"
                                                labelText="Upload Image"
                                                name="screen1ImageUrl"
                                                required={true}
                                              >
                                                <Field
                                                  name="screen1ImageUrl"
                                                >
                                                  <div
                                                    className="file is-primary  field pb-2"
                                                  >
                                                    <div
                                                      className=""
                                                    >
                                                      <label
                                                        className="file-label"
                                                        data-test="file-input-label"
                                                        htmlFor="screenshot1"
                                                      >
                                                        <input
                                                          accept="image/*"
                                                          className="file-input"
                                                          data-test="submit-app-screenshot1"
                                                          id="screenshot1"
                                                          onChange={[Function]}
                                                          type="file"
                                                        />
                                                        <span
                                                          className="file-cta required-label"
                                                        >
                                                          Upload Image
                                                        </span>
                                                      </label>
                                                    </div>
                                                  </div>
                                                </Field>
                                              </Component>
                                            </Component>
                                          </div>
                                        </Component>
                                      </Component>
                                    </div>
                                  </div>
                                </Component>
                                <Component>
                                  <div
                                    className="column is-multiline is-half-tablet is-one-third-widescreen is-one-quarter-fullhd "
                                    data-test=""
                                  >
                                    <div
                                      className="control mb-4"
                                    >
                                      <label
                                        className="label"
                                      >
                                        Screenshot 2
                                      </label>
                                      <Component
                                        allowClear={true}
                                        aspect={1.3085339168490153}
                                        dataTest="submit-app-screenshot2"
                                        id="screenshot2"
                                        labelText="Upload Image"
                                        name="screen2ImageUrl"
                                        resizeDimensions={
                                          Object {
                                            "height": 457,
                                            "width": 598,
                                          }
                                        }
                                      >
                                        <Component
                                          aspect={1.3085339168490153}
                                          croppedImage={null}
                                          onClose={[Function]}
                                          onCropClick={[Function]}
                                          resizeDimensions={
                                            Object {
                                              "height": 457,
                                              "width": 598,
                                            }
                                          }
                                          setCroppedImage={[Function]}
                                          setUpImg={[Function]}
                                          setVisible={[Function]}
                                          upImg=""
                                          visible={false}
                                        >
                                          <div>
                                            <Component
                                              afterLoadedImage={[Function]}
                                              allowClear={true}
                                              croppedImage={null}
                                              dataTest="submit-app-screenshot2"
                                              id="screenshot2"
                                              key=".0"
                                              labelText="Upload Image"
                                              name="screen2ImageUrl"
                                            >
                                              <Component
                                                accept="image/*"
                                                afterLoadedFile={[Function]}
                                                allowClear={true}
                                                croppedImage={null}
                                                dataTest="submit-app-screenshot2"
                                                id="screenshot2"
                                                labelText="Upload Image"
                                                name="screen2ImageUrl"
                                              >
                                                <Field
                                                  name="screen2ImageUrl"
                                                >
                                                  <div
                                                    className="file is-primary  field pb-2"
                                                  >
                                                    <div
                                                      className=""
                                                    >
                                                      <label
                                                        className="file-label"
                                                        data-test="file-input-label"
                                                        htmlFor="screenshot2"
                                                      >
                                                        <input
                                                          accept="image/*"
                                                          className="file-input"
                                                          data-test="submit-app-screenshot2"
                                                          id="screenshot2"
                                                          onChange={[Function]}
                                                          type="file"
                                                        />
                                                        <span
                                                          className="file-cta "
                                                        >
                                                          Upload Image
                                                        </span>
                                                      </label>
                                                    </div>
                                                  </div>
                                                </Field>
                                              </Component>
                                            </Component>
                                          </div>
                                        </Component>
                                      </Component>
                                    </div>
                                  </div>
                                </Component>
                                <Component>
                                  <div
                                    className="column is-multiline is-half-tablet is-one-third-widescreen is-one-quarter-fullhd "
                                    data-test=""
                                  >
                                    <div
                                      className="control mb-4"
                                    >
                                      <label
                                        className="label"
                                      >
                                        Screenshot 3
                                      </label>
                                      <Component
                                        allowClear={true}
                                        aspect={1.3085339168490153}
                                        dataTest="submit-app-screenshot3"
                                        id="screenshot3"
                                        labelText="Upload Image"
                                        name="screen3ImageUrl"
                                        resizeDimensions={
                                          Object {
                                            "height": 457,
                                            "width": 598,
                                          }
                                        }
                                      >
                                        <Component
                                          aspect={1.3085339168490153}
                                          croppedImage={null}
                                          onClose={[Function]}
                                          onCropClick={[Function]}
                                          resizeDimensions={
                                            Object {
                                              "height": 457,
                                              "width": 598,
                                            }
                                          }
                                          setCroppedImage={[Function]}
                                          setUpImg={[Function]}
                                          setVisible={[Function]}
                                          upImg=""
                                          visible={false}
                                        >
                                          <div>
                                            <Component
                                              afterLoadedImage={[Function]}
                                              allowClear={true}
                                              croppedImage={null}
                                              dataTest="submit-app-screenshot3"
                                              id="screenshot3"
                                              key=".0"
                                              labelText="Upload Image"
                                              name="screen3ImageUrl"
                                            >
                                              <Component
                                                accept="image/*"
                                                afterLoadedFile={[Function]}
                                                allowClear={true}
                                                croppedImage={null}
                                                dataTest="submit-app-screenshot3"
                                                id="screenshot3"
                                                labelText="Upload Image"
                                                name="screen3ImageUrl"
                                              >
                                                <Field
                                                  name="screen3ImageUrl"
                                                >
                                                  <div
                                                    className="file is-primary  field pb-2"
                                                  >
                                                    <div
                                                      className=""
                                                    >
                                                      <label
                                                        className="file-label"
                                                        data-test="file-input-label"
                                                        htmlFor="screenshot3"
                                                      >
                                                        <input
                                                          accept="image/*"
                                                          className="file-input"
                                                          data-test="submit-app-screenshot3"
                                                          id="screenshot3"
                                                          onChange={[Function]}
                                                          type="file"
                                                        />
                                                        <span
                                                          className="file-cta "
                                                        >
                                                          Upload Image
                                                        </span>
                                                      </label>
                                                    </div>
                                                  </div>
                                                </Field>
                                              </Component>
                                            </Component>
                                          </div>
                                        </Component>
                                      </Component>
                                    </div>
                                  </div>
                                </Component>
                                <Component>
                                  <div
                                    className="column is-multiline is-half-tablet is-one-third-widescreen is-one-quarter-fullhd "
                                    data-test=""
                                  >
                                    <div
                                      className="control mb-4"
                                    >
                                      <label
                                        className="label"
                                      >
                                        Screenshot 4
                                      </label>
                                      <Component
                                        allowClear={true}
                                        aspect={1.3085339168490153}
                                        dataTest="submit-app-screenshot4"
                                        id="screenshot4"
                                        labelText="Upload Image"
                                        name="screen4ImageUrl"
                                        resizeDimensions={
                                          Object {
                                            "height": 457,
                                            "width": 598,
                                          }
                                        }
                                      >
                                        <Component
                                          aspect={1.3085339168490153}
                                          croppedImage={null}
                                          onClose={[Function]}
                                          onCropClick={[Function]}
                                          resizeDimensions={
                                            Object {
                                              "height": 457,
                                              "width": 598,
                                            }
                                          }
                                          setCroppedImage={[Function]}
                                          setUpImg={[Function]}
                                          setVisible={[Function]}
                                          upImg=""
                                          visible={false}
                                        >
                                          <div>
                                            <Component
                                              afterLoadedImage={[Function]}
                                              allowClear={true}
                                              croppedImage={null}
                                              dataTest="submit-app-screenshot4"
                                              id="screenshot4"
                                              key=".0"
                                              labelText="Upload Image"
                                              name="screen4ImageUrl"
                                            >
                                              <Component
                                                accept="image/*"
                                                afterLoadedFile={[Function]}
                                                allowClear={true}
                                                croppedImage={null}
                                                dataTest="submit-app-screenshot4"
                                                id="screenshot4"
                                                labelText="Upload Image"
                                                name="screen4ImageUrl"
                                              >
                                                <Field
                                                  name="screen4ImageUrl"
                                                >
                                                  <div
                                                    className="file is-primary  field pb-2"
                                                  >
                                                    <div
                                                      className=""
                                                    >
                                                      <label
                                                        className="file-label"
                                                        data-test="file-input-label"
                                                        htmlFor="screenshot4"
                                                      >
                                                        <input
                                                          accept="image/*"
                                                          className="file-input"
                                                          data-test="submit-app-screenshot4"
                                                          id="screenshot4"
                                                          onChange={[Function]}
                                                          type="file"
                                                        />
                                                        <span
                                                          className="file-cta "
                                                        >
                                                          Upload Image
                                                        </span>
                                                      </label>
                                                    </div>
                                                  </div>
                                                </Field>
                                              </Component>
                                            </Component>
                                          </div>
                                        </Component>
                                      </Component>
                                    </div>
                                  </div>
                                </Component>
                                <Component>
                                  <div
                                    className="column is-multiline is-half-tablet is-one-third-widescreen is-one-quarter-fullhd "
                                    data-test=""
                                  >
                                    <div
                                      className="control mb-4"
                                    >
                                      <label
                                        className="label"
                                      >
                                        Screenshot 5
                                      </label>
                                      <Component
                                        allowClear={true}
                                        aspect={1.3085339168490153}
                                        dataTest="submit-app-screenshot5"
                                        id="screenshot5"
                                        labelText="Upload Image"
                                        name="screen5ImageUrl"
                                        resizeDimensions={
                                          Object {
                                            "height": 457,
                                            "width": 598,
                                          }
                                        }
                                      >
                                        <Component
                                          aspect={1.3085339168490153}
                                          croppedImage={null}
                                          onClose={[Function]}
                                          onCropClick={[Function]}
                                          resizeDimensions={
                                            Object {
                                              "height": 457,
                                              "width": 598,
                                            }
                                          }
                                          setCroppedImage={[Function]}
                                          setUpImg={[Function]}
                                          setVisible={[Function]}
                                          upImg=""
                                          visible={false}
                                        >
                                          <div>
                                            <Component
                                              afterLoadedImage={[Function]}
                                              allowClear={true}
                                              croppedImage={null}
                                              dataTest="submit-app-screenshot5"
                                              id="screenshot5"
                                              key=".0"
                                              labelText="Upload Image"
                                              name="screen5ImageUrl"
                                            >
                                              <Component
                                                accept="image/*"
                                                afterLoadedFile={[Function]}
                                                allowClear={true}
                                                croppedImage={null}
                                                dataTest="submit-app-screenshot5"
                                                id="screenshot5"
                                                labelText="Upload Image"
                                                name="screen5ImageUrl"
                                              >
                                                <Field
                                                  name="screen5ImageUrl"
                                                >
                                                  <div
                                                    className="file is-primary  field pb-2"
                                                  >
                                                    <div
                                                      className=""
                                                    >
                                                      <label
                                                        className="file-label"
                                                        data-test="file-input-label"
                                                        htmlFor="screenshot5"
                                                      >
                                                        <input
                                                          accept="image/*"
                                                          className="file-input"
                                                          data-test="submit-app-screenshot5"
                                                          id="screenshot5"
                                                          onChange={[Function]}
                                                          type="file"
                                                        />
                                                        <span
                                                          className="file-cta "
                                                        >
                                                          Upload Image
                                                        </span>
                                                      </label>
                                                    </div>
                                                  </div>
                                                </Field>
                                              </Component>
                                            </Component>
                                          </div>
                                        </Component>
                                      </Component>
                                    </div>
                                  </div>
                                </Component>
                              </div>
                            </Component>
                          </div>
                        </Component>
                      </UploadImageSection>
                      <MarketplaceStatusSection
                        isSubmitRevision={false}
                      >
                        <Component>
                          <div
                            className="form-section mb-4 "
                          >
                            <Component>
                              <div
                                className="form-heading mb-1 "
                              >
                                Marketplace Status
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="form-subheading mb-6 "
                              >
                                This section refers to the listing status in the Marketplace. If your App is an external application i.e. it is just an API feed app or is a web application that exists out of the Marketplace ecosystem, please select, âDirect APIâ. Your app will still need to be listed in the Marketplace and installed by clients so they can grant permissions however, it will not appear as a launchable app for users from the Marketplace. It is a hard requirement that launchable apps conform closely to our âElementsâ, brand guidelines so if your app does not, please also select âDirect APIâ. When you have done your initial app submit, please return here to set the âis Listedâ status to make the app installable for users.
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="columns  "
                                data-test=""
                              >
                                <Component>
                                  <div
                                    className="column  "
                                    data-test=""
                                  >
                                    <Component
                                      id="isDirectApi"
                                      labelText="Direct API"
                                      name="isDirectApi"
                                    >
                                      <div
                                        className="field pb-4 "
                                      >
                                        <div
                                          className="control"
                                        >
                                          <Field
                                            name="isDirectApi"
                                            type="checkbox"
                                          >
                                            <div
                                              className="field field-checkbox"
                                            >
                                              <input
                                                checked={false}
                                                className="checkbox"
                                                data-test=""
                                                id="isDirectApi"
                                                onChange={[Function]}
                                                type="checkbox"
                                                value=""
                                              />
                                              <label
                                                className="label"
                                                htmlFor="isDirectApi"
                                              >
                                                Direct API
                                              </label>
                                            </div>
                                          </Field>
                                        </div>
                                      </div>
                                    </Component>
                                  </div>
                                </Component>
                              </div>
                            </Component>
                          </div>
                        </Component>
                      </MarketplaceStatusSection>
                      <PermissionSection
                        errors={Object {}}
                        scopes={Array []}
                      >
                        <Component>
                          <div
                            className="form-section mb-4 "
                          >
                            <Component>
                              <div
                                className="form-heading mb-1 "
                              >
                                Permissions *
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="form-subheading mb-6 "
                              >
                                To access a client's data, you will need to specify the entities you need access to on a read or write basis. You should be familiar with these entities from the sandbox. When the user installs your application, they will have to consent to your usage based on these permissions. If you do not have the correct permissions on an entity basis, your app will receive a 403 error.
                              </div>
                            </Component>
                            <Component>
                              <div
                                className="columns is-multiline "
                                data-test=""
                              />
                            </Component>
                          </div>
                        </Component>
                      </PermissionSection>
                      <Component>
                        <div
                          className="form-section mb-4 "
                        >
                          <Component>
                            <div
                              className="level-right "
                              data-test=""
                            >
                              <Component>
                                <div
                                  className="columns  "
                                  data-test=""
                                >
                                  <Component
                                    onClick={[Function]}
                                    type="button"
                                    variant="primary"
                                  >
                                    <button
                                      className="button  is-primary  "
                                      data-test=""
                                      disabled={false}
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Preview
                                    </button>
                                  </Component>
                                  <Component
                                    dataTest="submit-app-button"
                                    disabled={false}
                                    loading={false}
                                    type="submit"
                                    variant="primary"
                                  >
                                    <button
                                      className="button  is-primary  "
                                      data-test="submit-app-button"
                                      disabled={false}
                                      type="submit"
                                    >
                                      Submit App
                                    </button>
                                  </Component>
                                </div>
                              </Component>
                            </div>
                          </Component>
                        </div>
                      </Component>
                      <Component
                        dataTest="submit-app-developer-id"
                        id="developerId"
                        labelText="Developer ID"
                        name="developerId"
                        type="hidden"
                      >
                        <Field
                          name="developerId"
                          validate={null}
                        >
                          <div
                            className="field pb-4"
                          >
                            <div
                              className="control "
                            >
                              <input
                                className="input is-primary"
                                data-test="submit-app-developer-id"
                                disabled={false}
                                id="developerId"
                                name="developerId"
                                onBlur={[Function]}
                                onChange={[Function]}
                                placeholder=""
                                type="hidden"
                                value=""
                              />
                            </div>
                          </div>
                        </Field>
                      </Component>
                    </form>
                  </Form>
                </Formik>
              </div>
            </Component>
          </div>
        </Component>
        <Component
          onContinueClick={[Function]}
          onViewDocClick={[Function]}
          visible={true}
        >
          <Component
            footerItems={
              <React.Fragment>
                <Unknown
                  onClick={[Function]}
                  type="button"
                  variant="primary"
                >
                  YES, CONTINUE
                </Unknown>
                <Unknown
                  onClick={[Function]}
                  type="button"
                  variant="primary"
                >
                  NO, VIEW DOCS
                </Unknown>
              </React.Fragment>
            }
            tapOutsideToDissmiss={false}
            title="Important"
            visible={true}
          />
        </Component>
      </Component>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`DeveloperSubmitApp should match a snapshot when pendingRevisions = true 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "what",
          "pathname": "/register",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "REPLACE",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/developer/apps/undefined",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/developer/apps/undefined",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Component>
        <Redirect
          to="/developer/apps/undefined"
        >
          <Lifecycle
            onMount={[Function]}
            onUpdate={[Function]}
            to="/developer/apps/undefined"
          />
        </Redirect>
      </Component>
    </Router>
  </MemoryRouter>
</Provider>
`;
