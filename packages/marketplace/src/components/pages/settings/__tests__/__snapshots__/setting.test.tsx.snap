// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Settings should match snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "clientSettingsRoute",
          "pathname": "/settings",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "clientSettingsRoute",
              "pathname": "/settings",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "clientSettingsRoute",
            "pathname": "/settings",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Settings>
        <FlexContainerResponsive
          flexColumn={true}
        >
          <div
            className="container is-column"
          >
            <Section>
              <section
                className="section has-padding has-margin has-background"
                data-test=""
              >
                <Section
                  className="justify-between items-center"
                  hasPadding={false}
                  isFlex={true}
                >
                  <section
                    className="section is-flex has-margin has-background justify-between items-center"
                    data-test=""
                  >
                    <H3
                      className="mb-0"
                    >
                      <h3
                        className="title is-3 mb-0"
                        id=""
                      >
                        Settings
                      </h3>
                    </H3>
                    <Button
                      dataTest="logout-btn"
                      onClick={[Function]}
                      type="button"
                      variant="primary"
                    >
                      <button
                        className="button   is-primary "
                        data-test="logout-btn"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        Logout
                      </button>
                    </Button>
                  </section>
                </Section>
                <Section
                  hasPadding={false}
                >
                  <section
                    className="section has-margin has-background"
                    data-test=""
                  >
                    <Grid>
                      <div
                        className="columns"
                        data-test=""
                      >
                        <GridItem>
                          <div
                            className="column"
                            data-test=""
                          >
                            <Grid>
                              <div
                                className="columns"
                                data-test=""
                              >
                                <GridItem>
                                  <div
                                    className="column"
                                    data-test=""
                                  >
                                    <SubTitleH6>
                                      <h6
                                        className="subtitle is-6"
                                        id=""
                                      >
                                        NAME:
                                      </h6>
                                    </SubTitleH6>
                                  </div>
                                </GridItem>
                                <GridItem>
                                  <div
                                    className="column"
                                    data-test=""
                                  >
                                    <p />
                                  </div>
                                </GridItem>
                              </div>
                            </Grid>
                          </div>
                        </GridItem>
                        <GridItem>
                          <div
                            className="column"
                            data-test=""
                          >
                            <Grid>
                              <div
                                className="columns"
                                data-test=""
                              >
                                <GridItem>
                                  <div
                                    className="column"
                                    data-test=""
                                  >
                                    <SubTitleH6>
                                      <h6
                                        className="subtitle is-6"
                                        id=""
                                      >
                                        EMAIL ADDRESS:
                                      </h6>
                                    </SubTitleH6>
                                  </div>
                                </GridItem>
                                <GridItem>
                                  <div
                                    className="column"
                                    data-test=""
                                  >
                                    <p />
                                  </div>
                                </GridItem>
                              </div>
                            </Grid>
                          </div>
                        </GridItem>
                      </div>
                    </Grid>
                    <Grid>
                      <div
                        className="columns"
                        data-test=""
                      >
                        <GridItem>
                          <div
                            className="column"
                            data-test=""
                          >
                            <Grid>
                              <div
                                className="columns"
                                data-test=""
                              >
                                <GridItem>
                                  <div
                                    className="column"
                                    data-test=""
                                  >
                                    <SubTitleH6>
                                      <h6
                                        className="subtitle is-6"
                                        id=""
                                      >
                                        COMPANY:
                                      </h6>
                                    </SubTitleH6>
                                  </div>
                                </GridItem>
                                <GridItem>
                                  <div
                                    className="column"
                                    data-test=""
                                  >
                                    <p />
                                  </div>
                                </GridItem>
                              </div>
                            </Grid>
                          </div>
                        </GridItem>
                        <GridItem>
                          <div
                            className="column"
                            data-test=""
                          >
                            <Grid>
                              <div
                                className="columns"
                                data-test=""
                              >
                                <GridItem>
                                  <div
                                    className="column"
                                    data-test=""
                                  >
                                    <SubTitleH6>
                                      <h6
                                        className="subtitle is-6"
                                        id=""
                                      >
                                        CUSTOMER ID:
                                      </h6>
                                    </SubTitleH6>
                                  </div>
                                </GridItem>
                                <GridItem>
                                  <div
                                    className="column"
                                    data-test=""
                                  >
                                    <p>
                                      SBOX
                                    </p>
                                  </div>
                                </GridItem>
                              </div>
                            </Grid>
                          </div>
                        </GridItem>
                      </div>
                    </Grid>
                    <Grid>
                      <div
                        className="columns"
                        data-test=""
                      >
                        <GridItem>
                          <div
                            className="column"
                            data-test=""
                          >
                            <Grid>
                              <div
                                className="columns"
                                data-test=""
                              >
                                <GridItem>
                                  <div
                                    className="column"
                                    data-test=""
                                  >
                                    <SubTitleH6>
                                      <h6
                                        className="subtitle is-6"
                                        id=""
                                      >
                                        ROLE:
                                      </h6>
                                    </SubTitleH6>
                                  </div>
                                </GridItem>
                                <GridItem>
                                  <div
                                    className="column"
                                    data-test=""
                                  />
                                </GridItem>
                              </div>
                            </Grid>
                          </div>
                        </GridItem>
                        <GridItem>
                          <div
                            className="column"
                            data-test=""
                          />
                        </GridItem>
                      </div>
                    </Grid>
                  </section>
                </Section>
                <ChangePasswordForm
                  changePassword={[Function]}
                  loading={false}
                >
                  <FormSection>
                    <div
                      className="form-section"
                    >
                      <Formik
                        initialValues={
                          Object {
                            "confirmPassword": "",
                            "currentPassword": "",
                            "password": "",
                          }
                        }
                        onSubmit={[Function]}
                        validationSchema={
                          ObjectSchema {
                            "_blacklist": ReferenceSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_blacklistError": undefined,
                            "_excludedEdges": Array [],
                            "_nodes": Array [
                              "confirmPassword",
                              "password",
                              "currentPassword",
                            ],
                            "_sortErrors": [Function],
                            "_typeError": [Function],
                            "_whitelist": ReferenceSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_whitelistError": undefined,
                            "conditions": Array [],
                            "deps": Array [],
                            "exclusiveTests": Object {},
                            "fields": Object {
                              "confirmPassword": StringSchema {
                                "_blacklist": ReferenceSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_blacklistError": undefined,
                                "_typeError": [Function],
                                "_whitelist": ReferenceSet {
                                  "list": Set {
                                    "",
                                  },
                                  "refs": Map {
                                    "password" => Reference {
                                      "getter": [Function],
                                      "isContext": false,
                                      "isSibling": true,
                                      "isValue": false,
                                      "key": "password",
                                      "map": undefined,
                                      "path": "password",
                                    },
                                  },
                                },
                                "_whitelistError": [Function],
                                "conditions": Array [],
                                "deps": Array [],
                                "exclusiveTests": Object {
                                  "required": true,
                                  "trim": false,
                                },
                                "spec": Object {
                                  "abortEarly": true,
                                  "nullable": false,
                                  "presence": "required",
                                  "recursive": true,
                                  "strict": false,
                                  "strip": false,
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                                "type": "string",
                              },
                              "currentPassword": StringSchema {
                                "_blacklist": ReferenceSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_blacklistError": undefined,
                                "_mutate": undefined,
                                "_typeError": [Function],
                                "_whitelist": ReferenceSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_whitelistError": undefined,
                                "conditions": Array [],
                                "deps": Array [],
                                "exclusiveTests": Object {
                                  "required": true,
                                  "trim": false,
                                },
                                "spec": Object {
                                  "abortEarly": true,
                                  "nullable": false,
                                  "presence": "required",
                                  "recursive": true,
                                  "strict": false,
                                  "strip": false,
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                                "type": "string",
                              },
                              "password": StringSchema {
                                "_blacklist": ReferenceSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_blacklistError": undefined,
                                "_typeError": [Function],
                                "_whitelist": ReferenceSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_whitelistError": undefined,
                                "conditions": Array [],
                                "deps": Array [],
                                "exclusiveTests": Object {
                                  "matches": false,
                                  "required": true,
                                  "trim": false,
                                },
                                "spec": Object {
                                  "abortEarly": true,
                                  "nullable": false,
                                  "presence": "required",
                                  "recursive": true,
                                  "strict": false,
                                  "strip": false,
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                                "type": "string",
                              },
                            },
                            "spec": Object {
                              "abortEarly": true,
                              "nullable": false,
                              "presence": "optional",
                              "recursive": true,
                              "strict": false,
                              "strip": false,
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                            "type": "object",
                          }
                        }
                      >
                        <Form>
                          <form
                            action="#"
                            onReset={[Function]}
                            onSubmit={[Function]}
                          >
                            <FormHeading>
                              <div
                                className="form-heading"
                              >
                                Change password
                              </div>
                            </FormHeading>
                            <FormSubHeading>
                              <div
                                className="form-subheading"
                              >
                                Please complete the following fields to change your password. You will be automatically logged out for the changes to be applied
                              </div>
                            </FormSubHeading>
                            <Grid>
                              <div
                                className="columns"
                                data-test=""
                              >
                                <GridItem>
                                  <div
                                    className="column"
                                    data-test=""
                                  >
                                    <Input
                                      dataTest="current-password"
                                      id="currentPassword"
                                      labelText="Current Password"
                                      name="currentPassword"
                                      type="password"
                                    >
                                      <Field
                                        name="currentPassword"
                                        validate={[Function]}
                                      >
                                        <div
                                          className="field"
                                        >
                                          <div
                                            className="control "
                                          >
                                            <label
                                              className="label inline-block "
                                              htmlFor="currentPassword"
                                            >
                                              Current Password
                                            </label>
                                            <input
                                              className="input is-primary"
                                              data-test="current-password"
                                              disabled={false}
                                              id="currentPassword"
                                              name="currentPassword"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder=""
                                              type="password"
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </Field>
                                    </Input>
                                  </div>
                                </GridItem>
                                <GridItem>
                                  <div
                                    className="column"
                                    data-test=""
                                  >
                                    <Input
                                      dataTest="password"
                                      id="password"
                                      labelText="Password"
                                      name="password"
                                      type="password"
                                    >
                                      <Field
                                        name="password"
                                        validate={[Function]}
                                      >
                                        <div
                                          className="field"
                                        >
                                          <div
                                            className="control "
                                          >
                                            <label
                                              className="label inline-block "
                                              htmlFor="password"
                                            >
                                              Password
                                            </label>
                                            <input
                                              className="input is-primary"
                                              data-test="password"
                                              disabled={false}
                                              id="password"
                                              name="password"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder=""
                                              type="password"
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </Field>
                                    </Input>
                                  </div>
                                </GridItem>
                              </div>
                            </Grid>
                            <Grid>
                              <div
                                className="columns"
                                data-test=""
                              >
                                <GridItem
                                  className="is-half"
                                >
                                  <div
                                    className="column is-half"
                                    data-test=""
                                  >
                                    <Input
                                      dataTest="confirmPassword"
                                      id="confirmPassword"
                                      labelText="Confirm Password"
                                      name="confirmPassword"
                                      type="password"
                                    >
                                      <Field
                                        name="confirmPassword"
                                        validate={[Function]}
                                      >
                                        <div
                                          className="field"
                                        >
                                          <div
                                            className="control "
                                          >
                                            <label
                                              className="label inline-block "
                                              htmlFor="confirmPassword"
                                            >
                                              Confirm Password
                                            </label>
                                            <input
                                              className="input is-primary"
                                              data-test="confirmPassword"
                                              disabled={false}
                                              id="confirmPassword"
                                              name="confirmPassword"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder=""
                                              type="password"
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </Field>
                                    </Input>
                                  </div>
                                </GridItem>
                              </div>
                            </Grid>
                            <LevelRight>
                              <div
                                className="level-right"
                                data-test=""
                              >
                                <Button
                                  dataTest="button-change-password"
                                  disabled={true}
                                  loading={false}
                                  type="submit"
                                  variant="primary"
                                >
                                  <button
                                    className="button   is-primary "
                                    data-test="button-change-password"
                                    disabled={true}
                                    type="submit"
                                  >
                                    Change Password
                                  </button>
                                </Button>
                              </div>
                            </LevelRight>
                          </form>
                        </Form>
                      </Formik>
                    </div>
                  </FormSection>
                </ChangePasswordForm>
              </section>
            </Section>
          </div>
        </FlexContainerResponsive>
      </Settings>
    </Router>
  </MemoryRouter>
</Provider>
`;
