// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DeveloperAppDetail renderAppHeaderButtonGroup should match snapshot 1`] = `
<div>
  <DeveloperAppDetailButtonGroup
    appDetailState={
      Object {
        "data": null,
        "error": null,
        "isAppDetailLoading": false,
      }
    }
    setIsAppRevisionComparisionModalOpen={[MockFunction]}
    setIsDeleteModalOpen={[MockFunction]}
    setIsInstallationsModalOpen={[MockFunction]}
  />
</div>
`;

exports[`DeveloperAppDetail should match a snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "developerAppDetailRoute",
          "pathname": "/developer/apps/:appid",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "developerAppDetailRoute",
              "pathname": "/developer/apps/:appid",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "developerAppDetailRoute",
            "pathname": "/developer/apps/:appid",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <DeveloperAppDetail>
        <div>
          <AppHeader
            appDetailData={Object {}}
            buttonGroup={
              <React.Fragment>
                
              </React.Fragment>
            }
          >
            <Component
              className="is-vcentered "
            >
              <div
                className="columns  is-vcentered "
              >
                <Component
                  className="is-4"
                >
                  <div
                    className="column  is-4"
                  >
                    <div>
                      <img
                        className="image"
                        src="https://bulma.io/images/placeholders/48x48.png"
                      />
                    </div>
                  </div>
                </Component>
                <Component
                  className="is-8"
                >
                  <div
                    className="column  is-8"
                  >
                    <Component>
                      <h3
                        className="title is-3  "
                        id=""
                      />
                    </Component>
                  </div>
                </Component>
              </div>
            </Component>
          </AppHeader>
          <AppContent
            appDetailData={Object {}}
            loginType="DEVELOPER"
          >
            <Component>
              <div
                className="columns  "
              >
                <Component
                  className="is-4"
                >
                  <div
                    className="column  is-4"
                  >
                    <div
                      key="app-developer"
                    >
                      <p>
                        Developer:
                      </p>
                      <p />
                    </div>
                    <div
                      key="app-id"
                    >
                      <p>
                        Client ID:
                      </p>
                      <p />
                    </div>
                    <div
                      key="app-listed"
                    >
                      <p>
                        Status:
                      </p>
                      <p>
                        Not listed
                      </p>
                      <FaTimes>
                        <IconBase
                          attr={
                            Object {
                              "viewBox": "0 0 352 512",
                            }
                          }
                        >
                          <svg
                            fill="currentColor"
                            height="1em"
                            stroke="currentColor"
                            strokeWidth="0"
                            style={
                              Object {
                                "color": undefined,
                              }
                            }
                            viewBox="0 0 352 512"
                            width="1em"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                              key="0"
                            />
                          </svg>
                        </IconBase>
                      </FaTimes>
                    </div>
                  </div>
                </Component>
                <Component
                  className="is-8"
                >
                  <div
                    className="column  is-8"
                  >
                    <Component
                      html=""
                    >
                      <Component
                        className="html-render"
                      >
                        <div
                          className="content html-render"
                        />
                      </Component>
                    </Component>
                    <br />
                    <br />
                    <Component
                      isMultiLine={true}
                    >
                      <div
                        className="columns is-multiline "
                      />
                    </Component>
                  </div>
                </Component>
              </div>
            </Component>
          </AppContent>
        </div>
      </DeveloperAppDetail>
    </Router>
  </MemoryRouter>
</Provider>
`;
