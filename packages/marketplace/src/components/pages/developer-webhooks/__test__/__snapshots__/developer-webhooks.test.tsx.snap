// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DeveloperWebHooks should match a snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Component>
    <Component
      hasPadding={true}
    >
      <div
        className=" container-flex    has-padding  "
      >
        <Component
          flexColumn={true}
          hasBackground={true}
          hasPadding={true}
        >
          <div
            className="container is-column  has-background has-padding  "
          >
            <Component>
              <h3
                className="title is-3  "
                id=""
              >
                Manage Webhook Subscriptions
              </h3>
            </Component>
            <Component>
              <div
                className="form-section mb-4 "
              >
                <p
                  className="is-italic mb-4"
                >
                  Our webhooks system allows your application to directly subscribe to events happening in our customers data. Rather than needing to make API calls to poll for new information, a webhook subscription can be created to allow Reapit Foundations to send a HTTP request directly to your endpoints that you configure here.
                </p>
                <p
                  className="is-italic mb-4"
                >
                  This system is designed to flexibly work with how your application is built and deployed. If you wish, you can set up a single endpoint to catch all topics for all customers. Alternatively, you may wish to set up a different webhook subscription per topic or per customer. For more information about Webhooks, please see our
                   
                  <a
                    className={[Function]}
                    href="/developer/api-docs/api/webhooks"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    webhooks documentation
                  </a>
                </p>
                <Formik
                  enableReinitialize={true}
                  initialValues={
                    Object {
                      "applicationId": "",
                    }
                  }
                  onSubmit={[Function]}
                >
                  <Form>
                    <form
                      action="#"
                      onReset={[Function]}
                      onSubmit={[Function]}
                    >
                      <Component
                        className="pt-2 pb-2"
                        helpText="Please select an App from the list below to view the associated Webhooks:"
                        id="subscription"
                        labelText="App"
                        name="applicationId"
                        options={Array []}
                      >
                        <Field
                          name="applicationId"
                          validate={null}
                        >
                          <div
                            className="field pb-2"
                          >
                            <div
                              className="control"
                            >
                              <label
                                className="label "
                                htmlFor="subscription"
                              >
                                App
                              </label>
                              <i>
                                Please select an App from the list below to view the associated Webhooks:
                              </i>
                              <select
                                className="input is-primary pt-2 pb-2"
                                data-test=""
                                name="applicationId"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <option
                                  disabled={true}
                                  hidden={true}
                                  value=""
                                >
                                  Please select
                                </option>
                              </select>
                            </div>
                          </div>
                        </Field>
                      </Component>
                      <FormikConnect(Function)
                        onSave={[Function]}
                      >
                        <Component
                          formik={
                            Object {
                              "dirty": false,
                              "errors": Object {},
                              "getFieldHelpers": [Function],
                              "getFieldMeta": [Function],
                              "getFieldProps": [Function],
                              "handleBlur": [Function],
                              "handleChange": [Function],
                              "handleReset": [Function],
                              "handleSubmit": [Function],
                              "initialErrors": Object {},
                              "initialStatus": undefined,
                              "initialTouched": Object {},
                              "initialValues": Object {
                                "applicationId": "",
                              },
                              "isSubmitting": false,
                              "isValid": true,
                              "isValidating": false,
                              "registerField": [Function],
                              "resetForm": [Function],
                              "setErrors": [Function],
                              "setFieldError": [Function],
                              "setFieldTouched": [Function],
                              "setFieldValue": [Function],
                              "setFormikState": [Function],
                              "setStatus": [Function],
                              "setSubmitting": [Function],
                              "setTouched": [Function],
                              "setValues": [Function],
                              "status": undefined,
                              "submitCount": 0,
                              "submitForm": [Function],
                              "touched": Object {},
                              "unregisterField": [Function],
                              "validateField": [Function],
                              "validateForm": [Function],
                              "validateOnBlur": true,
                              "validateOnChange": true,
                              "validateOnMount": false,
                              "values": Object {
                                "applicationId": "",
                              },
                            }
                          }
                          onSave={[Function]}
                        />
                      </FormikConnect(Function)>
                    </form>
                  </Form>
                </Formik>
                <Component>
                  <div
                    className="section "
                    data-test=""
                  >
                    <Component>
                      <div
                        className="level-right "
                        data-test=""
                      />
                    </Component>
                  </div>
                </Component>
                <Component>
                  <div
                    className="loader-spinner body"
                    data-test=""
                  >
                    <div />
                    <div />
                    <div />
                    <div />
                  </div>
                </Component>
              </div>
            </Component>
          </div>
        </Component>
      </div>
    </Component>
  </Component>
</Provider>
`;
