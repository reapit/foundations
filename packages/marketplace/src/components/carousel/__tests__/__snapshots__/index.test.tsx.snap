// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Carousel should match a snapshot with options 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <mock-styled.div>
        <mock-styled.mock-styled.a
          classname="el-fade-in"
        >
          <span
            class="el-intent-primary el-icon-new el-icon"
            style="font-size: 0.75em;"
          >
            <svg
              fill="none"
              height="1em"
              role="img"
              style="font-size: 0.75em;"
              title="Icon image with name chevronRight"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M8.505 20.004a1 1 0 0 1-1.005-1 1 1 0 0 1 .295-.71l6.292-6.29-6.292-6.29a1.005 1.005 0 0 1 0-1.42 1 1 0 0 1 1.419 0l6.99 7a1 1 0 0 1 0 1.42l-6.99 7a1 1 0 0 1-.71.29"
                fill="currentColor"
              />
            </svg>
          </span>
        </mock-styled.mock-styled.a>
        <mock-styled.div
          numbercols="1"
          numberitems="3"
          percentagewidth="100.000"
        >
          <mock-styled.div>
            <div>
              Carousel Item 1
            </div>
          </mock-styled.div>
          <mock-styled.div>
            <div>
              Carousel Item 2
            </div>
          </mock-styled.div>
          <mock-styled.div>
            <div>
              Carousel Item 3
            </div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <mock-styled.div>
      <mock-styled.mock-styled.a
        classname="el-fade-in"
      >
        <span
          class="el-intent-primary el-icon-new el-icon"
          style="font-size: 0.75em;"
        >
          <svg
            fill="none"
            height="1em"
            role="img"
            style="font-size: 0.75em;"
            title="Icon image with name chevronRight"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.505 20.004a1 1 0 0 1-1.005-1 1 1 0 0 1 .295-.71l6.292-6.29-6.292-6.29a1.005 1.005 0 0 1 0-1.42 1 1 0 0 1 1.419 0l6.99 7a1 1 0 0 1 0 1.42l-6.99 7a1 1 0 0 1-.71.29"
              fill="currentColor"
            />
          </svg>
        </span>
      </mock-styled.mock-styled.a>
      <mock-styled.div
        numbercols="1"
        numberitems="3"
        percentagewidth="100.000"
      >
        <mock-styled.div>
          <div>
            Carousel Item 1
          </div>
        </mock-styled.div>
        <mock-styled.div>
          <div>
            Carousel Item 2
          </div>
        </mock-styled.div>
        <mock-styled.div>
          <div>
            Carousel Item 3
          </div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
