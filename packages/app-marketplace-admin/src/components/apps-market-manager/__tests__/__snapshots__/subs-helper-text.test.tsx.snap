// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SubsHelperText should match a snapshot for appsFilters 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        App Filters are tiles that on the user clicking, set a pre-defined set of filters is applied to the page which will then render the filtered results as a related collection.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        You can have any number of Filter Collections live however, 6 is advised in line with the design.
      </p>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      App Filters are tiles that on the user clicking, set a pre-defined set of filters is applied to the page which will then render the filtered results as a related collection.
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      You can have any number of Filter Collections live however, 6 is advised in line with the design.
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SubsHelperText should match a snapshot for appsFilters 2`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        App Filters are tiles that on the user clicking, set a pre-defined set of filters is applied to the page which will then render the filtered results as a related collection.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        You can have any number of Filter Collections live however, 6 is advised in line with the design.
      </p>
    </div>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        App Filters should be configured to include;
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - A set of filters eg categories, or named apps that you want to return when the tile is clicked on. The simplest way to do this is to specify exactly the apps you want in the collection by name.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - A title that describes the collection
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - A marketing strapline
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - A suitable icon from the dropdown list
      </p>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      App Filters should be configured to include;
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - A set of filters eg categories, or named apps that you want to return when the tile is clicked on. The simplest way to do this is to specify exactly the apps you want in the collection by name.
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - A title that describes the collection
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - A marketing strapline
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - A suitable icon from the dropdown list
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SubsHelperText should match a snapshot for featuredApps 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        Featured apps are lists of apps, grouped as a collection that sit below the filter collections typically. They have slightly larger tiles and slightly greater prominence than Simple Apps.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        You can add as many to a collection as you like however, the list will be paginatied by the UI at some resolutions in line with the design. All apps selected will be returned when hitting the See All link.
      </p>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      Featured apps are lists of apps, grouped as a collection that sit below the filter collections typically. They have slightly larger tiles and slightly greater prominence than Simple Apps.
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      You can add as many to a collection as you like however, the list will be paginatied by the UI at some resolutions in line with the design. All apps selected will be returned when hitting the See All link.
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SubsHelperText should match a snapshot for featuredApps 2`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        Featured apps are lists of apps, grouped as a collection that sit below the filter collections typically. They have slightly larger tiles and slightly greater prominence than Simple Apps.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        You can add as many to a collection as you like however, the list will be paginatied by the UI at some resolutions in line with the design. All apps selected will be returned when hitting the See All link.
      </p>
    </div>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        Featured and simple apps should be configured to include;
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - A set of filters eg categories, or named apps that you want to return when the See All link is clicked on. The simplest way to do this is to specify exactly the apps you want in the collection by name.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - A title that describes the collection
      </p>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      Featured and simple apps should be configured to include;
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - A set of filters eg categories, or named apps that you want to return when the See All link is clicked on. The simplest way to do this is to specify exactly the apps you want in the collection by name.
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - A title that describes the collection
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SubsHelperText should match a snapshot for featuredHeroApps 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        Featured Hero apps are the first thing you will see in on the browse apps page and therefore the most prominant and important. There should be only 1 Featured Hero set to live at any given time.
      </p>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      Featured Hero apps are the first thing you will see in on the browse apps page and therefore the most prominant and important. There should be only 1 Featured Hero set to live at any given time.
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SubsHelperText should match a snapshot for featuredHeroApps 2`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        Featured Hero apps are the first thing you will see in on the browse apps page and therefore the most prominant and important. There should be only 1 Featured Hero set to live at any given time.
      </p>
    </div>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        Featured Hero and Hero apps, should be confgured to include;
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - A title, to sit above the Hero Item
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - An app specified from the apps search and select box
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - A brand colour as a hex colour selected in the colour picker
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - A marketing strapline to sit below the icon of the App
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - An image uploaded that looks good at all resolutions. You should test this by re-sizing the browser from mobile to widescreen
      </p>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      Featured Hero and Hero apps, should be confgured to include;
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - A title, to sit above the Hero Item
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - An app specified from the apps search and select box
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - A brand colour as a hex colour selected in the colour picker
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - A marketing strapline to sit below the icon of the App
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - An image uploaded that looks good at all resolutions. You should test this by re-sizing the browser from mobile to widescreen
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SubsHelperText should match a snapshot for heroApps 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        Hero apps are of secondary prominance to the Featured Hero. There should only be 2 Heros set to live at any given time
      </p>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      Hero apps are of secondary prominance to the Featured Hero. There should only be 2 Heros set to live at any given time
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SubsHelperText should match a snapshot for heroApps 2`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        Hero apps are of secondary prominance to the Featured Hero. There should only be 2 Heros set to live at any given time
      </p>
    </div>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        Featured Hero and Hero apps, should be confgured to include;
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - A title, to sit above the Hero Item
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - An app specified from the apps search and select box
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - A brand colour as a hex colour selected in the colour picker
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - A marketing strapline to sit below the icon of the App
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - An image uploaded that looks good at all resolutions. You should test this by re-sizing the browser from mobile to widescreen
      </p>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      Featured Hero and Hero apps, should be confgured to include;
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - A title, to sit above the Hero Item
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - An app specified from the apps search and select box
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - A brand colour as a hex colour selected in the colour picker
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - A marketing strapline to sit below the icon of the App
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - An image uploaded that looks good at all resolutions. You should test this by re-sizing the browser from mobile to widescreen
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SubsHelperText should match a snapshot for simpleApps 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        Simple apps behave almost identically to featured apps however, they are of slightly less prominence on the page.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      />
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      Simple apps behave almost identically to featured apps however, they are of slightly less prominence on the page.
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SubsHelperText should match a snapshot for simpleApps 2`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        Simple apps behave almost identically to featured apps however, they are of slightly less prominence on the page.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      />
    </div>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        Featured and simple apps should be configured to include;
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - A set of filters eg categories, or named apps that you want to return when the See All link is clicked on. The simplest way to do this is to specify exactly the apps you want in the collection by name.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        - A title that describes the collection
      </p>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      Featured and simple apps should be configured to include;
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - A set of filters eg categories, or named apps that you want to return when the See All link is clicked on. The simplest way to do this is to specify exactly the apps you want in the collection by name.
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      - A title that describes the collection
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
