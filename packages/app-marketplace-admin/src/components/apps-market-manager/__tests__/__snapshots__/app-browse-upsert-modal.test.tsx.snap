// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppBrowseUpsertModal should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname="mock-css."
      />
      <mock-styled.div
        classname="mock-css.
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
  max-height: 90vh;
  overflow-y: auto;
  transform: inherit;
 mock-css."
      >
        <mock-styled.div>
          AppMarket Item
        </mock-styled.div>
        <mock-styled.div>
          <form>
            <mock-styled.h2
              classname=""
            >
              Filters
            </mock-styled.h2>
            <mock-styled.p
              classname="mock-css."
            >
              Featured and simple apps should be configured to include;
            </mock-styled.p>
            <mock-styled.p
              classname="mock-css."
            >
              - A set of filters eg categories, or named apps that you want to return when the See All link is clicked on. The simplest way to do this is to specify exactly the apps you want in the collection by name.
            </mock-styled.p>
            <mock-styled.p
              classname="mock-css."
            >
              - A title that describes the collection
            </mock-styled.p>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.div>
                <mock-styled.div
                  classname="mock-css.
  margin-bottom: 0.75rem;
"
                >
                  <mock-styled.input
                    classname=""
                    id="test-static-id"
                    placeholder="Search"
                  />
                  <mock-styled.span
                    classname=""
                    style="font-size: 1rem;"
                  >
                    <svg
                      style="font-size: 1rem;"
                    />
                  </mock-styled.span>
                  <mock-styled.label
                    htmlfor="test-static-id"
                  >
                    Search Apps
                  </mock-styled.label>
                </mock-styled.div>
                <mock-styled.div>
                  <mock-styled.input
                    id="select-multi-apps"
                  />
                  <mock-styled.div
                    classname="mock-css.
  margin-bottom: 0.75rem;
"
                  >
                    <mock-styled.span
                      classname="mock-css.
  margin-left: 0.375rem;
 mock-css. mock-css.
  font-size: 1.5rem;
"
                    >
                      <svg />
                    </mock-styled.span>
                    <p>
                      No apps selected
                    </p>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Categories
                  </mock-styled.label>
                  <mock-styled.div>
                    <mock-styled.input
                      id="filters.category"
                      name="filters.category"
                    />
                    <mock-styled.div
                      classname=""
                    >
                      <mock-styled.span
                        classname="mock-css.
  margin-left: 0.375rem;
 mock-css. mock-css.
  font-size: 1.5rem;
"
                      >
                        <svg />
                      </mock-styled.span>
                      <p>
                        Please select from the options below
                      </p>
                    </mock-styled.div>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Is Free
                  </mock-styled.label>
                  <mock-styled.div
                    classname="mock-css."
                  >
                    <mock-styled.input
                      id="not-applied-free"
                      name="filters.isFree"
                      type="radio"
                      value="notApplied"
                    />
                    <mock-styled.label
                      classname="mock-css."
                      htmlfor="not-applied-free"
                    >
                      <mock-styled.span>
                        Not Applied
                      </mock-styled.span>
                    </mock-styled.label>
                    <mock-styled.input
                      id="free"
                      name="filters.isFree"
                      type="radio"
                      value="free"
                    />
                    <mock-styled.label
                      classname="mock-css."
                      htmlfor="free"
                    >
                      <mock-styled.span>
                        Free
                      </mock-styled.span>
                    </mock-styled.label>
                    <mock-styled.input
                      id="paid"
                      name="filters.isFree"
                      type="radio"
                      value="paid"
                    />
                    <mock-styled.label
                      classname="mock-css."
                      htmlfor="paid"
                    >
                      <mock-styled.span>
                        Paid
                      </mock-styled.span>
                    </mock-styled.label>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Is Featured
                  </mock-styled.label>
                  <mock-styled.div
                    classname="mock-css."
                  >
                    <mock-styled.input
                      id="not-applied-featured"
                      name="filters.isFeatured"
                      type="radio"
                      value="notApplied"
                    />
                    <mock-styled.label
                      classname="mock-css."
                      htmlfor="not-applied-featured"
                    >
                      <mock-styled.span>
                        Not Applied
                      </mock-styled.span>
                    </mock-styled.label>
                    <mock-styled.input
                      id="is-featured"
                      name="filters.isFeatured"
                      type="radio"
                      value="isFeatured"
                    />
                    <mock-styled.label
                      classname="mock-css."
                      htmlfor="is-featured"
                    >
                      <mock-styled.span>
                        Is Featured
                      </mock-styled.span>
                    </mock-styled.label>
                    <mock-styled.input
                      id="not-featured"
                      name="filters.isFeatured"
                      type="radio"
                      value="notFeatured"
                    />
                    <mock-styled.label
                      classname="mock-css."
                      htmlfor="not-featured"
                    >
                      <mock-styled.span>
                        Not Featured
                      </mock-styled.span>
                    </mock-styled.label>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.h2
              classname=""
            >
              Advertising Content
            </mock-styled.h2>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Brand Colour
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Title
                  </mock-styled.label>
                  <mock-styled.input
                    classname=""
                    name="content.title"
                  />
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Strapline
                  </mock-styled.label>
                  <mock-styled.input
                    classname=""
                    name="content.strapline"
                  />
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Icon
                  </mock-styled.label>
                  <mock-styled.select
                    classname="mock-css.
  text-transform: capitalize;
"
                    name="content.iconName"
                  >
                    <option
                      value=""
                    >
                      None Selected
                    </option>
                  </mock-styled.select>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Icon Preview
                </mock-styled.label>
                <mock-styled.p
                  classname="mock-css."
                >
                  No Icon Selected
                </mock-styled.p>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.div>
                    <mock-styled.label>
                      Image
                    </mock-styled.label>
                    <mock-styled.div
                      classname="mock-css.
  align-items: center;
"
                    >
                      <mock-styled.button
                        classname="mock-css.
  margin-right: 0.625rem;
 mock-css."
                        type="button"
                      >
                        <mock-styled.div />
                        Upload
                      </mock-styled.button>
                      <mock-styled.input
                        data-testid="el-file-input"
                        type="file"
                      />
                      <mock-styled.input
                        id="test-static-id"
                        name="content.imageUrl"
                      />
                      <mock-styled.p
                        classname="mock-css. mock-css."
                      >
                        Upload Image
                      </mock-styled.p>
                    </mock-styled.div>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.h2
              classname=""
            >
              Live
            </mock-styled.h2>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Live From
                  </mock-styled.label>
                  <mock-styled.input
                    classname=""
                    name="live.timeFrom"
                    type="datetime-local"
                  />
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Live To
                  </mock-styled.label>
                  <mock-styled.input
                    classname=""
                    name="live.timeTo"
                    type="datetime-local"
                  />
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div
                  classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css. mock-css. mock-css. mock-css."
                >
                  <div
                    class="mock-css.
  padding-left: 0.75rem;
  display: flex;
  align-items: center;
  border-radius: var(--default-border-radius) 0 0 var(--default-border-radius);
  cursor: pointer;

  , {
    color: var(--color-white);
  }
"
                    data-testid="close-icon"
                  >
                    <mock-styled.span
                      classname="mock-css.
  font-size: 1.5rem;
"
                      style="font-size: 1.25rem;"
                    >
                      <svg
                        style="font-size: 1.25rem;"
                      />
                    </mock-styled.span>
                  </div>
                  <div
                    class="mock-css.
  padding: 0.75rem;
  transition: 0.5s;
  width: 100%;
  color: var(--color-black);
  font-size: var(--font-size-default);
"
                  >
                    If a ‘Live To’ or ‘Live From’ value is set, ‘Is Live’ will be ignored.
                  </div>
                </mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Is Live
                  </mock-styled.label>
                  <mock-styled.input
                    id="toggle-live"
                    name="live.isLive"
                    type="checkbox"
                  />
                  <mock-styled.label
                    classname="mock-css."
                    htmlfor="toggle-live"
                  >
                    <mock-styled.span>
                      Yes
                    </mock-styled.span>
                    <mock-styled.span>
                      No
                    </mock-styled.span>
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.button
                  classname="mock-css."
                  disabled="false"
                >
                  <mock-styled.div />
                  Save
                </mock-styled.button>
              </mock-styled.div>
            </mock-styled.div>
          </form>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname="mock-css."
    />
    <mock-styled.div
      classname="mock-css.
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
  max-height: 90vh;
  overflow-y: auto;
  transform: inherit;
 mock-css."
    >
      <mock-styled.div>
        AppMarket Item
      </mock-styled.div>
      <mock-styled.div>
        <form>
          <mock-styled.h2
            classname=""
          >
            Filters
          </mock-styled.h2>
          <mock-styled.p
            classname="mock-css."
          >
            Featured and simple apps should be configured to include;
          </mock-styled.p>
          <mock-styled.p
            classname="mock-css."
          >
            - A set of filters eg categories, or named apps that you want to return when the See All link is clicked on. The simplest way to do this is to specify exactly the apps you want in the collection by name.
          </mock-styled.p>
          <mock-styled.p
            classname="mock-css."
          >
            - A title that describes the collection
          </mock-styled.p>
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.div>
              <mock-styled.div
                classname="mock-css.
  margin-bottom: 0.75rem;
"
              >
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  placeholder="Search"
                />
                <mock-styled.span
                  classname=""
                  style="font-size: 1rem;"
                >
                  <svg
                    style="font-size: 1rem;"
                  />
                </mock-styled.span>
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Search Apps
                </mock-styled.label>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  id="select-multi-apps"
                />
                <mock-styled.div
                  classname="mock-css.
  margin-bottom: 0.75rem;
"
                >
                  <mock-styled.span
                    classname="mock-css.
  margin-left: 0.375rem;
 mock-css. mock-css.
  font-size: 1.5rem;
"
                  >
                    <svg />
                  </mock-styled.span>
                  <p>
                    No apps selected
                  </p>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Categories
                </mock-styled.label>
                <mock-styled.div>
                  <mock-styled.input
                    id="filters.category"
                    name="filters.category"
                  />
                  <mock-styled.div
                    classname=""
                  >
                    <mock-styled.span
                      classname="mock-css.
  margin-left: 0.375rem;
 mock-css. mock-css.
  font-size: 1.5rem;
"
                    >
                      <svg />
                    </mock-styled.span>
                    <p>
                      Please select from the options below
                    </p>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Is Free
                </mock-styled.label>
                <mock-styled.div
                  classname="mock-css."
                >
                  <mock-styled.input
                    id="not-applied-free"
                    name="filters.isFree"
                    type="radio"
                    value="notApplied"
                  />
                  <mock-styled.label
                    classname="mock-css."
                    htmlfor="not-applied-free"
                  >
                    <mock-styled.span>
                      Not Applied
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="free"
                    name="filters.isFree"
                    type="radio"
                    value="free"
                  />
                  <mock-styled.label
                    classname="mock-css."
                    htmlfor="free"
                  >
                    <mock-styled.span>
                      Free
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="paid"
                    name="filters.isFree"
                    type="radio"
                    value="paid"
                  />
                  <mock-styled.label
                    classname="mock-css."
                    htmlfor="paid"
                  >
                    <mock-styled.span>
                      Paid
                    </mock-styled.span>
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Is Featured
                </mock-styled.label>
                <mock-styled.div
                  classname="mock-css."
                >
                  <mock-styled.input
                    id="not-applied-featured"
                    name="filters.isFeatured"
                    type="radio"
                    value="notApplied"
                  />
                  <mock-styled.label
                    classname="mock-css."
                    htmlfor="not-applied-featured"
                  >
                    <mock-styled.span>
                      Not Applied
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="is-featured"
                    name="filters.isFeatured"
                    type="radio"
                    value="isFeatured"
                  />
                  <mock-styled.label
                    classname="mock-css."
                    htmlfor="is-featured"
                  >
                    <mock-styled.span>
                      Is Featured
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="not-featured"
                    name="filters.isFeatured"
                    type="radio"
                    value="notFeatured"
                  />
                  <mock-styled.label
                    classname="mock-css."
                    htmlfor="not-featured"
                  >
                    <mock-styled.span>
                      Not Featured
                    </mock-styled.span>
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.h2
            classname=""
          >
            Advertising Content
          </mock-styled.h2>
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Brand Colour
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Title
                </mock-styled.label>
                <mock-styled.input
                  classname=""
                  name="content.title"
                />
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Strapline
                </mock-styled.label>
                <mock-styled.input
                  classname=""
                  name="content.strapline"
                />
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Icon
                </mock-styled.label>
                <mock-styled.select
                  classname="mock-css.
  text-transform: capitalize;
"
                  name="content.iconName"
                >
                  <option
                    value=""
                  >
                    None Selected
                  </option>
                </mock-styled.select>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Icon Preview
              </mock-styled.label>
              <mock-styled.p
                classname="mock-css."
              >
                No Icon Selected
              </mock-styled.p>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Image
                  </mock-styled.label>
                  <mock-styled.div
                    classname="mock-css.
  align-items: center;
"
                  >
                    <mock-styled.button
                      classname="mock-css.
  margin-right: 0.625rem;
 mock-css."
                      type="button"
                    >
                      <mock-styled.div />
                      Upload
                    </mock-styled.button>
                    <mock-styled.input
                      data-testid="el-file-input"
                      type="file"
                    />
                    <mock-styled.input
                      id="test-static-id"
                      name="content.imageUrl"
                    />
                    <mock-styled.p
                      classname="mock-css. mock-css."
                    >
                      Upload Image
                    </mock-styled.p>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.h2
            classname=""
          >
            Live
          </mock-styled.h2>
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Live From
                </mock-styled.label>
                <mock-styled.input
                  classname=""
                  name="live.timeFrom"
                  type="datetime-local"
                />
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Live To
                </mock-styled.label>
                <mock-styled.input
                  classname=""
                  name="live.timeTo"
                  type="datetime-local"
                />
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div
                classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css. mock-css. mock-css. mock-css."
              >
                <div
                  class="mock-css.
  padding-left: 0.75rem;
  display: flex;
  align-items: center;
  border-radius: var(--default-border-radius) 0 0 var(--default-border-radius);
  cursor: pointer;

  , {
    color: var(--color-white);
  }
"
                  data-testid="close-icon"
                >
                  <mock-styled.span
                    classname="mock-css.
  font-size: 1.5rem;
"
                    style="font-size: 1.25rem;"
                  >
                    <svg
                      style="font-size: 1.25rem;"
                    />
                  </mock-styled.span>
                </div>
                <div
                  class="mock-css.
  padding: 0.75rem;
  transition: 0.5s;
  width: 100%;
  color: var(--color-black);
  font-size: var(--font-size-default);
"
                >
                  If a ‘Live To’ or ‘Live From’ value is set, ‘Is Live’ will be ignored.
                </div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Is Live
                </mock-styled.label>
                <mock-styled.input
                  id="toggle-live"
                  name="live.isLive"
                  type="checkbox"
                />
                <mock-styled.label
                  classname="mock-css."
                  htmlfor="toggle-live"
                >
                  <mock-styled.span>
                    Yes
                  </mock-styled.span>
                  <mock-styled.span>
                    No
                  </mock-styled.span>
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.button
                classname="mock-css."
                disabled="false"
              >
                <mock-styled.div />
                Save
              </mock-styled.button>
            </mock-styled.div>
          </mock-styled.div>
        </form>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
