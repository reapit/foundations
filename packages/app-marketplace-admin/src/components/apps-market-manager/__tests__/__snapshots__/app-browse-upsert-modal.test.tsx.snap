// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppBrowseUpsertModal should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname="el-is-active"
      />
      <mock-styled.div
        aria-describedby=":r0:"
        aria-modal="true"
        classname="mock-css.
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
  max-height: 90vh;
  overflow-y: auto;
  transform: inherit;
 el-is-active"
        role="dialog"
      >
        <mock-styled.div>
          AppMarket Item
        </mock-styled.div>
        <mock-styled.div
          id=":r0:"
        >
          <form>
            <mock-styled.h2
              classname="el-text-base"
            >
              Filters
            </mock-styled.h2>
            <mock-styled.p
              classname="el-text-base el-has-grey-text"
            >
              Featured and simple apps should be configured to include;
            </mock-styled.p>
            <mock-styled.p
              classname="el-text-base el-has-grey-text"
            >
              - A set of filters eg categories, or named apps that you want to return when the See All link is clicked on. The simplest way to do this is to specify exactly the apps you want in the collection by name.
            </mock-styled.p>
            <mock-styled.p
              classname="el-text-base el-has-grey-text"
            >
              - A title that describes the collection
            </mock-styled.p>
            <mock-styled.div
              classname="el-form-layout-has-margin"
            >
              <div
                class="mocked-styled-135 el-input-wrap-full"
              >
                <div
                  class="el-mb5 el-input-group"
                >
                  <input
                    aria-label="Input type undefined"
                    class="mocked-styled-38 el-input"
                    id="test-static-id"
                    placeholder="Search"
                  />
                  <span
                    class="mocked-styled-4 el-icon"
                    style="font-size: 1rem;"
                  >
                    <svg
                      fill="none"
                      height="1em"
                      role="img"
                      style="font-size: 1rem;"
                      title="Icon image with name searchSystem"
                      viewBox="0 0 20 20"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="m19.756 18.578-5.688-5.687a7.88 7.88 0 0 0 1.765-4.973C15.833 3.553 12.281 0 7.917 0S0 3.553 0 7.918s3.552 7.916 7.917 7.916a7.88 7.88 0 0 0 4.973-1.765l5.687 5.688a.83.83 0 0 0 1.179 0 .83.83 0 0 0 0-1.179m-11.84-4.41a6.256 6.256 0 0 1-6.25-6.25 6.256 6.256 0 0 1 6.25-6.25 6.256 6.256 0 0 1 6.25 6.25 6.256 6.256 0 0 1-6.25 6.25"
                        fill="currentColor"
                      />
                    </svg>
                  </span>
                  <label
                    class="mocked-styled-41 el-label"
                    for="test-static-id"
                  >
                    Search Apps
                  </label>
                </div>
                <div
                  class="mocked-styled-58 el-multi-select-input-wrapper"
                >
                  <input
                    class="mocked-styled-57 el-multi-select-input"
                    id="select-multi-apps"
                  />
                  <div
                    aria-label="Multi selected options"
                    class="el-mb5 el-multi-select-selected"
                    role="listbox"
                  >
                    <span
                      class="el-ml2 el-intent-default el-icon-new el-icon"
                    >
                      <svg
                        fill="none"
                        height="1em"
                        role="img"
                        title="Icon image with name task"
                        viewBox="0 0 24 24"
                        width="1em"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M4 11a1 1 0 1 0 0 2 1 1 0 0 0 0-2m0-4a1 1 0 1 0 0-2 1 1 0 0 0 0 2m0 10a1 1 0 1 0 0 2 1 1 0 0 0 0-2m16-6H8a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2M8 7h12a1 1 0 1 0 0-2H8a1 1 0 0 0 0 2m12 10H8a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2"
                          fill="currentColor"
                        />
                      </svg>
                    </span>
                    <p>
                      No apps selected
                    </p>
                  </div>
                </div>
              </div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Categories
                  </mock-styled.label>
                  <mock-styled.div
                    aria-controls=":r1:"
                    aria-haspopup="listbox"
                    role="combobox"
                  >
                    <mock-styled.input
                      id="filters.category"
                      name="filters.category"
                    />
                    <mock-styled.div
                      classname=""
                    >
                      <mock-styled.span
                        classname="el-ml2 el-intent-default el-icon-new"
                        role="img"
                      >
                        <svg
                          fill="none"
                          height="1em"
                          viewBox="0 0 24 24"
                          width="1em"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M4 11a1 1 0 1 0 0 2 1 1 0 0 0 0-2m0-4a1 1 0 1 0 0-2 1 1 0 0 0 0 2m0 10a1 1 0 1 0 0 2 1 1 0 0 0 0-2m16-6H8a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2M8 7h12a1 1 0 1 0 0-2H8a1 1 0 0 0 0 2m12 10H8a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2"
                            fill="currentColor"
                          />
                        </svg>
                      </mock-styled.span>
                      <p>
                        Please select from the options below
                      </p>
                    </mock-styled.div>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Is Free
                  </mock-styled.label>
                  <mock-styled.div
                    classname="el-has-grey-bg"
                  >
                    <mock-styled.input
                      id="not-applied-free"
                      name="filters.isFree"
                      type="radio"
                      value="notApplied"
                    />
                    <mock-styled.label
                      classname="el-has-grey-bg"
                      htmlfor="not-applied-free"
                    >
                      <mock-styled.span>
                        Not Applied
                      </mock-styled.span>
                    </mock-styled.label>
                    <mock-styled.input
                      id="free"
                      name="filters.isFree"
                      type="radio"
                      value="free"
                    />
                    <mock-styled.label
                      classname="el-has-grey-bg"
                      htmlfor="free"
                    >
                      <mock-styled.span>
                        Free
                      </mock-styled.span>
                    </mock-styled.label>
                    <mock-styled.input
                      id="paid"
                      name="filters.isFree"
                      type="radio"
                      value="paid"
                    />
                    <mock-styled.label
                      classname="el-has-grey-bg"
                      htmlfor="paid"
                    >
                      <mock-styled.span>
                        Paid
                      </mock-styled.span>
                    </mock-styled.label>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Is Featured
                  </mock-styled.label>
                  <mock-styled.div
                    classname="el-has-grey-bg"
                  >
                    <mock-styled.input
                      id="not-applied-featured"
                      name="filters.isFeatured"
                      type="radio"
                      value="notApplied"
                    />
                    <mock-styled.label
                      classname="el-has-grey-bg"
                      htmlfor="not-applied-featured"
                    >
                      <mock-styled.span>
                        Not Applied
                      </mock-styled.span>
                    </mock-styled.label>
                    <mock-styled.input
                      id="is-featured"
                      name="filters.isFeatured"
                      type="radio"
                      value="isFeatured"
                    />
                    <mock-styled.label
                      classname="el-has-grey-bg"
                      htmlfor="is-featured"
                    >
                      <mock-styled.span>
                        Is Featured
                      </mock-styled.span>
                    </mock-styled.label>
                    <mock-styled.input
                      id="not-featured"
                      name="filters.isFeatured"
                      type="radio"
                      value="notFeatured"
                    />
                    <mock-styled.label
                      classname="el-has-grey-bg"
                      htmlfor="not-featured"
                    >
                      <mock-styled.span>
                        Not Featured
                      </mock-styled.span>
                    </mock-styled.label>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.h2
              classname="el-text-base"
            >
              Advertising Content
            </mock-styled.h2>
            <mock-styled.div
              classname="el-form-layout-has-margin"
            >
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Brand Colour
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Title
                  </mock-styled.label>
                  <mock-styled.input
                    classname=""
                    name="content.title"
                  />
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Strapline
                  </mock-styled.label>
                  <mock-styled.input
                    classname=""
                    name="content.strapline"
                  />
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Icon
                  </mock-styled.label>
                  <mock-styled.select
                    classname="mock-css.
  text-transform: capitalize;
"
                    name="content.iconName"
                  >
                    <option
                      value=""
                    >
                      None Selected
                    </option>
                  </mock-styled.select>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Icon Preview
                </mock-styled.label>
                <mock-styled.p
                  classname="el-text-base el-has-grey-text"
                >
                  No Icon Selected
                </mock-styled.p>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.div>
                    <mock-styled.label>
                      Image
                    </mock-styled.label>
                    <div
                      class="el-flex-container el-flex-align-center"
                    >
                      <mock-styled.button
                        classname="el-mr4 el-intent-neutral"
                        type="button"
                      >
                        <mock-styled.div />
                        Upload
                      </mock-styled.button>
                      <mock-styled.input
                        data-testid="el-file-input"
                        type="file"
                      />
                      <mock-styled.input
                        aria-hidden="true"
                        id="test-static-id"
                        name="content.imageUrl"
                      />
                      <mock-styled.p
                        classname="el-text-base el-has-grey-text el-has-no-margin"
                      >
                        Upload Image
                      </mock-styled.p>
                    </div>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.h2
              classname="el-text-base"
            >
              Live
            </mock-styled.h2>
            <mock-styled.div
              classname="el-form-layout-has-margin"
            >
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Live From
                  </mock-styled.label>
                  <mock-styled.input
                    classname=""
                    name="live.timeFrom"
                    type="datetime-local"
                  />
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Live To
                  </mock-styled.label>
                  <mock-styled.input
                    classname=""
                    name="live.timeTo"
                    type="datetime-local"
                  />
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div
                  classname="el-mb5 el-intent-primary el-is-active el-pn-is-full-width el-pn-is-inline"
                  role="alertdialog"
                >
                  <div
                    class="el-pn-icon"
                    data-testid="close-icon"
                  >
                    <mock-styled.span
                      classname="el-icon-new"
                      role="img"
                      style="font-size: 1.25rem;"
                    >
                      <svg
                        fill="none"
                        height="1em"
                        style="font-size: 1.25rem;"
                        viewBox="0 0 24 24"
                        width="1em"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10A10 10 0 0 0 12 2m1.143 15.714h-2.286v-6h2.286zm-1.143-8a1.714 1.714 0 1 1 0-3.428 1.714 1.714 0 0 1 0 3.428"
                          fill="currentColor"
                        />
                      </svg>
                    </mock-styled.span>
                  </div>
                  <div
                    class="el-pn-content"
                  >
                    If a ‘Live To’ or ‘Live From’ value is set, ‘Is Live’ will be ignored.
                  </div>
                </mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Is Live
                  </mock-styled.label>
                  <mock-styled.input
                    id="toggle-live"
                    name="live.isLive"
                    type="checkbox"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="toggle-live"
                  >
                    <mock-styled.span>
                      Yes
                    </mock-styled.span>
                    <mock-styled.span>
                      No
                    </mock-styled.span>
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.button
                  classname="el-intent-primary"
                  disabled="false"
                >
                  <mock-styled.div />
                  Save
                </mock-styled.button>
              </mock-styled.div>
            </mock-styled.div>
          </form>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname="el-is-active"
    />
    <mock-styled.div
      aria-describedby=":r0:"
      aria-modal="true"
      classname="mock-css.
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
  max-height: 90vh;
  overflow-y: auto;
  transform: inherit;
 el-is-active"
      role="dialog"
    >
      <mock-styled.div>
        AppMarket Item
      </mock-styled.div>
      <mock-styled.div
        id=":r0:"
      >
        <form>
          <mock-styled.h2
            classname="el-text-base"
          >
            Filters
          </mock-styled.h2>
          <mock-styled.p
            classname="el-text-base el-has-grey-text"
          >
            Featured and simple apps should be configured to include;
          </mock-styled.p>
          <mock-styled.p
            classname="el-text-base el-has-grey-text"
          >
            - A set of filters eg categories, or named apps that you want to return when the See All link is clicked on. The simplest way to do this is to specify exactly the apps you want in the collection by name.
          </mock-styled.p>
          <mock-styled.p
            classname="el-text-base el-has-grey-text"
          >
            - A title that describes the collection
          </mock-styled.p>
          <mock-styled.div
            classname="el-form-layout-has-margin"
          >
            <div
              class="mocked-styled-135 el-input-wrap-full"
            >
              <div
                class="el-mb5 el-input-group"
              >
                <input
                  aria-label="Input type undefined"
                  class="mocked-styled-38 el-input"
                  id="test-static-id"
                  placeholder="Search"
                />
                <span
                  class="mocked-styled-4 el-icon"
                  style="font-size: 1rem;"
                >
                  <svg
                    fill="none"
                    height="1em"
                    role="img"
                    style="font-size: 1rem;"
                    title="Icon image with name searchSystem"
                    viewBox="0 0 20 20"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="m19.756 18.578-5.688-5.687a7.88 7.88 0 0 0 1.765-4.973C15.833 3.553 12.281 0 7.917 0S0 3.553 0 7.918s3.552 7.916 7.917 7.916a7.88 7.88 0 0 0 4.973-1.765l5.687 5.688a.83.83 0 0 0 1.179 0 .83.83 0 0 0 0-1.179m-11.84-4.41a6.256 6.256 0 0 1-6.25-6.25 6.256 6.256 0 0 1 6.25-6.25 6.256 6.256 0 0 1 6.25 6.25 6.256 6.256 0 0 1-6.25 6.25"
                      fill="currentColor"
                    />
                  </svg>
                </span>
                <label
                  class="mocked-styled-41 el-label"
                  for="test-static-id"
                >
                  Search Apps
                </label>
              </div>
              <div
                class="mocked-styled-58 el-multi-select-input-wrapper"
              >
                <input
                  class="mocked-styled-57 el-multi-select-input"
                  id="select-multi-apps"
                />
                <div
                  aria-label="Multi selected options"
                  class="el-mb5 el-multi-select-selected"
                  role="listbox"
                >
                  <span
                    class="el-ml2 el-intent-default el-icon-new el-icon"
                  >
                    <svg
                      fill="none"
                      height="1em"
                      role="img"
                      title="Icon image with name task"
                      viewBox="0 0 24 24"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M4 11a1 1 0 1 0 0 2 1 1 0 0 0 0-2m0-4a1 1 0 1 0 0-2 1 1 0 0 0 0 2m0 10a1 1 0 1 0 0 2 1 1 0 0 0 0-2m16-6H8a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2M8 7h12a1 1 0 1 0 0-2H8a1 1 0 0 0 0 2m12 10H8a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2"
                        fill="currentColor"
                      />
                    </svg>
                  </span>
                  <p>
                    No apps selected
                  </p>
                </div>
              </div>
            </div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Categories
                </mock-styled.label>
                <mock-styled.div
                  aria-controls=":r1:"
                  aria-haspopup="listbox"
                  role="combobox"
                >
                  <mock-styled.input
                    id="filters.category"
                    name="filters.category"
                  />
                  <mock-styled.div
                    classname=""
                  >
                    <mock-styled.span
                      classname="el-ml2 el-intent-default el-icon-new"
                      role="img"
                    >
                      <svg
                        fill="none"
                        height="1em"
                        viewBox="0 0 24 24"
                        width="1em"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M4 11a1 1 0 1 0 0 2 1 1 0 0 0 0-2m0-4a1 1 0 1 0 0-2 1 1 0 0 0 0 2m0 10a1 1 0 1 0 0 2 1 1 0 0 0 0-2m16-6H8a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2M8 7h12a1 1 0 1 0 0-2H8a1 1 0 0 0 0 2m12 10H8a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2"
                          fill="currentColor"
                        />
                      </svg>
                    </mock-styled.span>
                    <p>
                      Please select from the options below
                    </p>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Is Free
                </mock-styled.label>
                <mock-styled.div
                  classname="el-has-grey-bg"
                >
                  <mock-styled.input
                    id="not-applied-free"
                    name="filters.isFree"
                    type="radio"
                    value="notApplied"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="not-applied-free"
                  >
                    <mock-styled.span>
                      Not Applied
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="free"
                    name="filters.isFree"
                    type="radio"
                    value="free"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="free"
                  >
                    <mock-styled.span>
                      Free
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="paid"
                    name="filters.isFree"
                    type="radio"
                    value="paid"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="paid"
                  >
                    <mock-styled.span>
                      Paid
                    </mock-styled.span>
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Is Featured
                </mock-styled.label>
                <mock-styled.div
                  classname="el-has-grey-bg"
                >
                  <mock-styled.input
                    id="not-applied-featured"
                    name="filters.isFeatured"
                    type="radio"
                    value="notApplied"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="not-applied-featured"
                  >
                    <mock-styled.span>
                      Not Applied
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="is-featured"
                    name="filters.isFeatured"
                    type="radio"
                    value="isFeatured"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="is-featured"
                  >
                    <mock-styled.span>
                      Is Featured
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="not-featured"
                    name="filters.isFeatured"
                    type="radio"
                    value="notFeatured"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="not-featured"
                  >
                    <mock-styled.span>
                      Not Featured
                    </mock-styled.span>
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.h2
            classname="el-text-base"
          >
            Advertising Content
          </mock-styled.h2>
          <mock-styled.div
            classname="el-form-layout-has-margin"
          >
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Brand Colour
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Title
                </mock-styled.label>
                <mock-styled.input
                  classname=""
                  name="content.title"
                />
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Strapline
                </mock-styled.label>
                <mock-styled.input
                  classname=""
                  name="content.strapline"
                />
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Icon
                </mock-styled.label>
                <mock-styled.select
                  classname="mock-css.
  text-transform: capitalize;
"
                  name="content.iconName"
                >
                  <option
                    value=""
                  >
                    None Selected
                  </option>
                </mock-styled.select>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Icon Preview
              </mock-styled.label>
              <mock-styled.p
                classname="el-text-base el-has-grey-text"
              >
                No Icon Selected
              </mock-styled.p>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.label>
                    Image
                  </mock-styled.label>
                  <div
                    class="el-flex-container el-flex-align-center"
                  >
                    <mock-styled.button
                      classname="el-mr4 el-intent-neutral"
                      type="button"
                    >
                      <mock-styled.div />
                      Upload
                    </mock-styled.button>
                    <mock-styled.input
                      data-testid="el-file-input"
                      type="file"
                    />
                    <mock-styled.input
                      aria-hidden="true"
                      id="test-static-id"
                      name="content.imageUrl"
                    />
                    <mock-styled.p
                      classname="el-text-base el-has-grey-text el-has-no-margin"
                    >
                      Upload Image
                    </mock-styled.p>
                  </div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.h2
            classname="el-text-base"
          >
            Live
          </mock-styled.h2>
          <mock-styled.div
            classname="el-form-layout-has-margin"
          >
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Live From
                </mock-styled.label>
                <mock-styled.input
                  classname=""
                  name="live.timeFrom"
                  type="datetime-local"
                />
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Live To
                </mock-styled.label>
                <mock-styled.input
                  classname=""
                  name="live.timeTo"
                  type="datetime-local"
                />
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div
                classname="el-mb5 el-intent-primary el-is-active el-pn-is-full-width el-pn-is-inline"
                role="alertdialog"
              >
                <div
                  class="el-pn-icon"
                  data-testid="close-icon"
                >
                  <mock-styled.span
                    classname="el-icon-new"
                    role="img"
                    style="font-size: 1.25rem;"
                  >
                    <svg
                      fill="none"
                      height="1em"
                      style="font-size: 1.25rem;"
                      viewBox="0 0 24 24"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10A10 10 0 0 0 12 2m1.143 15.714h-2.286v-6h2.286zm-1.143-8a1.714 1.714 0 1 1 0-3.428 1.714 1.714 0 0 1 0 3.428"
                        fill="currentColor"
                      />
                    </svg>
                  </mock-styled.span>
                </div>
                <div
                  class="el-pn-content"
                >
                  If a ‘Live To’ or ‘Live From’ value is set, ‘Is Live’ will be ignored.
                </div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Is Live
                </mock-styled.label>
                <mock-styled.input
                  id="toggle-live"
                  name="live.isLive"
                  type="checkbox"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="toggle-live"
                >
                  <mock-styled.span>
                    Yes
                  </mock-styled.span>
                  <mock-styled.span>
                    No
                  </mock-styled.span>
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.button
                classname="el-intent-primary"
                disabled="false"
              >
                <mock-styled.div />
                Save
              </mock-styled.button>
            </mock-styled.div>
          </mock-styled.div>
        </form>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
