{"version":3,"file":"index-DvheUM2F.js","sources":["../../src/components/docs/__styles__/index.ts","../../src/components/docs/index.tsx"],"sourcesContent":["import { css } from '@linaria/core'\n\nexport const iframeWrapper = css`\n  height: 88.5vh;\n  width: 100%;\n`\n","import React, { FC } from 'react'\nimport { useNavigate, useLocation } from 'react-router'\nimport ErrorBoundary from '../../core/error-boundary'\nimport Routes from '../../constants/routes'\nimport { IFRAME_URLS } from '../../constants/iframe-urls'\nimport {\n  SmallText,\n  Button,\n  elHFull,\n  elMb5,\n  elMb9,\n  FlexContainer,\n  Icon,\n  PageContainer,\n  SecondaryNav,\n  SecondaryNavContainer,\n  SecondaryNavItem,\n  BodyText,\n  Title,\n} from '@reapit/elements'\nimport { iframeWrapper } from './__styles__/index'\nimport { openNewPage, ExternalPages, navigateRoute } from '../../utils/navigation'\n\nexport const parseIframeUrl = (pathname: string, hash: string): string => {\n  const documentPagePath = pathname.split(Routes.API_DOCS)[1]\n  return `${documentPagePath}${hash}`\n}\n\nconst DocsPage: FC = () => {\n  const location = useLocation()\n  const navigate = useNavigate()\n  const { pathname } = location\n  const isDevEnv = process.env.appEnv !== 'production' // Feature flagging until prod is ready\n  const isDocsPage = pathname.includes(Routes.API_DOCS)\n  const isSchemaPage = pathname.includes(Routes.ANALYTICS_SCHEMA_DOCS)\n  const iframeUri = isDocsPage\n    ? `${IFRAME_URLS.documentation}${parseIframeUrl(location.pathname, location.hash)}`\n    : process.env.analyticsSchemaDocsUrl\n\n  return (\n    <ErrorBoundary>\n      <FlexContainer isFlexAuto>\n        <SecondaryNavContainer>\n          <SecondaryNav className={elMb9}>\n            <SecondaryNavItem onClick={navigateRoute(navigate, Routes.API_DOCS)} active={isDocsPage}>\n              APIs\n            </SecondaryNavItem>\n            <SecondaryNavItem onClick={navigateRoute(navigate, Routes.ANALYTICS_SCHEMA_DOCS)} active={isSchemaPage}>\n              Warehouse\n            </SecondaryNavItem>\n          </SecondaryNav>\n          <Icon className={elMb5} icon=\"apiDocsInfographic\" iconSize=\"large\" />\n          <BodyText>Welcome</BodyText>\n          <SmallText hasGreyText>\n            We have provided comprehensive documentation for all of our APIs, services, tooling and open source packages\n            accross these pages.\n          </SmallText>\n          <SmallText hasGreyText>\n            You can also visit us on Github where you can raise and track issues, look at code examples and view our\n            milestones.\n          </SmallText>\n          <Button className={elMb5} intent=\"default\" onClick={openNewPage(ExternalPages.github)}>\n            Go to Github\n          </Button>\n          {isDocsPage && (\n            <Button className={elMb5} intent=\"primary\" onClick={openNewPage(ExternalPages.baseDocs)}>\n              Open Docs\n            </Button>\n          )}\n          {isSchemaPage && isDevEnv && (\n            <Button className={elMb5} intent=\"primary\" onClick={openNewPage(process.env.analyticsSchemaDocsUrl)}>\n              Open Schema\n            </Button>\n          )}\n        </SecondaryNavContainer>\n        <PageContainer className={elHFull}>\n          <Title>{isDocsPage ? 'API Docs' : 'Analytics Schema Docs'}</Title>\n          <iframe className={iframeWrapper} frameBorder=\"0\" src={iframeUri} />\n        </PageContainer>\n      </FlexContainer>\n    </ErrorBoundary>\n  )\n}\n\nexport default DocsPage\n"],"names":["iframeWrapper","define_process_env_default"],"mappings":"2QAEO,MAAMA,EAAgB,0BCyCnB,IAAAC,EAAA,CAAA,OAAA,cAAA,UAAA,GAAA,gBAAA,4BAAA,gBAAA,wCAAA,kBAAA,sBAAA,aAAA,uCAAA,eAAA,iDAAA,eAAA,yCAAA,4BAAA,kDAAA,gBAAA,uFAAA,kBAAA,CAAA,sCAAA,EAAA,YAAA,mEAAA,WAAA,gDAAA,uBAAA,wDAAA,WAAA,iFAAA,wBAAA,6CAAA,WAAA,uBAAA,WAAA,sFAAA,kBAAA,CAAA,sCAAA,EAAA,iBAAA,CAAA,sCAAA"}