// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login should match a snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "developerHomeRoute",
          "pathname": "/apps",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "developerHomeRoute",
              "pathname": "/apps",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "developerHomeRoute",
            "pathname": "/apps",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Apps>
        <Connect(ErrorBoundary)>
          <ErrorBoundary
            componentError={null}
            errorThrownComponent={[Function]}
          >
            <Section
              className="justify-between items-center"
              isFlex={true}
            >
              <section
                className="section is-flex has-padding has-margin has-background justify-between items-center"
                data-test=""
              >
                <H3
                  className="mb-0"
                >
                  <h3
                    className="title is-3 mb-0"
                    id=""
                  >
                    My Apps
                  </h3>
                </H3>
                <Button
                  onClick={[Function]}
                  type="button"
                  variant="primary"
                >
                  <button
                    className="button  is-primary  "
                    data-test=""
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    Create new app
                  </button>
                </Button>
                <SubmitAppWizardModal
                  onClose={[Function]}
                  visible={false}
                >
                  <SubmitAppWizard
                    onClose={[Function]}
                    visible={false}
                  >
                    <ModalV2
                      isPadding={false}
                      onClose={[Function]}
                      title="Before you start"
                      visible={false}
                    >
                      <Dialog
                        className="m1s2ncsn-modal-container"
                        closeIcon={
                          <span
                            aria-label="close"
                            className="delete"
                          />
                        }
                        destroyOnClose={true}
                        onClose={[Function]}
                        title={
                          <ModalHeaderV2>
                            Before you start
                          </ModalHeaderV2>
                        }
                        visible={false}
                        wrapClassName="m1y19rn5-modal-no-padding"
                      />
                    </ModalV2>
                  </SubmitAppWizard>
                </SubmitAppWizardModal>
              </section>
            </Section>
            <AppList
              infoType="DEVELOPER_APPS_EMPTY"
              list={Array []}
              loading={false}
              onCardClick={[Function]}
            >
              <div
                className="mb-4"
              >
                <Helper
                  variant="info"
                >
                  <div
                    className="notification helper-wrap helper-info"
                  >
                    It looks like you haven’t submitted an App yet. When you’re ready, click on ‘Create New App’ to get started.
                  </div>
                </Helper>
              </div>
            </AppList>
            <Pagination
              onChange={[Function]}
              pageNumber={1}
            />
            <SandboxPopUp
              loading={false}
            >
              <div
                className="w1hg8kxc-wrap-popup"
              >
                <ToastMessage
                  message="This is a sandbox environment, with anonymised test data and isolated from production"
                  onCloseToast={[Function]}
                  variant="info"
                  visible={false}
                >
                  <div
                    className="toast"
                    data-test="toast-wrapper"
                    onClick={[Function]}
                  >
                    <Button
                      fullWidth={true}
                      type="reset"
                      variant="info"
                    >
                      <button
                        className="button  is-info is-fullwidth "
                        data-test=""
                        disabled={false}
                        type="reset"
                      >
                        This is a sandbox environment, with anonymised test data and isolated from production
                      </button>
                    </Button>
                  </div>
                </ToastMessage>
              </div>
            </SandboxPopUp>
          </ErrorBoundary>
        </Connect(ErrorBoundary)>
      </Apps>
    </Router>
  </MemoryRouter>
</Provider>
`;
