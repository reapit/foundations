// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContactInformationForm should match snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Component>
    <Formik
      initialValues={
        Object {
          "jobTitle": "",
          "name": "mockConstructor",
        }
      }
      onSubmit={[Function]}
      validationSchema={
        ObjectSchema {
          "_blacklist": RefSet {
            "list": Set {},
            "refs": Map {},
          },
          "_conditions": Array [],
          "_defaultDefault": [Function],
          "_deps": Array [],
          "_excludedEdges": Array [],
          "_exclusive": Object {},
          "_mutate": undefined,
          "_nodes": Array [
            "jobTitle",
            "name",
          ],
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "object",
          "_typeError": [Function],
          "_whitelist": RefSet {
            "list": Set {},
            "refs": Map {},
          },
          "fields": Object {
            "jobTitle": StringSchema {
              "_blacklist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "_conditions": Array [],
              "_deps": Array [],
              "_exclusive": Object {
                "matches": false,
                "max": true,
                "required": true,
                "trim": false,
              },
              "_mutate": undefined,
              "_options": Object {
                "abortEarly": true,
                "recursive": true,
              },
              "_type": "string",
              "_typeError": [Function],
              "_whitelist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "tests": Array [
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "transforms": Array [
                [Function],
                [Function],
              ],
              "type": "string",
            },
            "name": StringSchema {
              "_blacklist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "_conditions": Array [],
              "_deps": Array [],
              "_exclusive": Object {
                "matches": false,
                "max": true,
                "required": true,
                "trim": false,
              },
              "_mutate": undefined,
              "_options": Object {
                "abortEarly": true,
                "recursive": true,
              },
              "_type": "string",
              "_typeError": [Function],
              "_whitelist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "tests": Array [
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "transforms": Array [
                [Function],
                [Function],
              ],
              "type": "string",
            },
          },
          "tests": Array [],
          "transforms": Array [
            [Function],
          ],
          "type": "object",
        }
      }
    >
      <Component>
        <div
          className=""
        >
          <Form>
            <form
              action="#"
              onReset={[Function]}
              onSubmit={[Function]}
            >
              <mock-styled.div>
                <Component>
                  <div
                    className=""
                  >
                    Contact Information
                  </div>
                </Component>
                <Component>
                  <div
                    className=""
                  >
                    Please use the fields below to edit your contact information
                  </div>
                </Component>
                <Component>
                  <div
                    className=""
                    data-test=""
                  >
                    <Component>
                      <div
                        className=""
                        data-test=""
                      >
                        <Component
                          dataTest="name"
                          disabled={[MockFunction]}
                          id="name"
                          labelText="Full Name"
                          name="name"
                          type="text"
                        >
                          <Field
                            name="name"
                            validate={null}
                          >
                            <div
                              className=""
                            >
                              <div
                                className="control "
                              >
                                <label
                                  className="label inline-block "
                                  htmlFor="name"
                                >
                                  Full Name
                                </label>
                                <input
                                  className=""
                                  data-test="name"
                                  disabled={[MockFunction]}
                                  id="name"
                                  name="name"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  placeholder=""
                                  type="text"
                                  value="mockConstructor"
                                />
                              </div>
                            </div>
                          </Field>
                        </Component>
                      </div>
                    </Component>
                    <Component>
                      <div
                        className=""
                        data-test=""
                      >
                        <Component
                          dataTest="job-title"
                          disabled={[MockFunction]}
                          id="jobTitle"
                          labelText="Job Title"
                          name="jobTitle"
                          type="text"
                        >
                          <Field
                            name="jobTitle"
                            validate={null}
                          >
                            <div
                              className=""
                            >
                              <div
                                className="control "
                              >
                                <label
                                  className="label inline-block "
                                  htmlFor="jobTitle"
                                >
                                  Job Title
                                </label>
                                <input
                                  className=""
                                  data-test="job-title"
                                  disabled={[MockFunction]}
                                  id="jobTitle"
                                  name="jobTitle"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  placeholder=""
                                  type="text"
                                  value=""
                                />
                              </div>
                            </div>
                          </Field>
                        </Component>
                      </div>
                    </Component>
                  </div>
                </Component>
                <Component>
                  <div
                    className=""
                    data-test=""
                  >
                    <Component
                      dataTest="save-changes"
                      disabled={false}
                      loading={[MockFunction]}
                      type="submit"
                      variant="primary"
                    >
                      <button
                        className="button  is-primary  is-loading"
                        data-test="save-changes"
                        disabled={false}
                        type="submit"
                      >
                        Save Changes
                      </button>
                    </Component>
                  </div>
                </Component>
              </mock-styled.div>
            </form>
          </Form>
        </div>
      </Component>
    </Formik>
  </Component>
</Provider>
`;
