// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Config-modal-inner should WebComponentConfigModalFooter match a snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Component
    closeModal={[MockFunction]}
    formikProps={Object {}}
  >
    <Component
      className="mr-2"
      fullWidth={true}
      onClick={[MockFunction]}
      type="button"
      variant="danger"
    >
      <button
        className="button mr-2 is-danger is-fullwidth "
        data-test=""
        disabled={false}
        onClick={[MockFunction]}
        type="button"
      >
        CANCEL
      </button>
    </Component>
    <Component
      fullWidth={true}
      type="submit"
      variant="primary"
    >
      <button
        className="button  is-primary is-fullwidth "
        data-test=""
        disabled={false}
        type="submit"
      >
        SAVE CHANGES
      </button>
    </Component>
  </Component>
</Provider>
`;

exports[`Config-modal-inner should WebComponentConfigModalInner match a snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Component
    closeModal={[MockFunction]}
  >
    <Formik
      initialValues={
        Object {
          "appointmentLength": 30,
          "appointmentTimeGap": 30,
          "daysOfWeek": Array [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
          ],
        }
      }
      onSubmit={[Function]}
    >
      <Component
        title="undefined Configuration"
      >
        <header
          className="modal-card-head"
        >
          <h4
            className="modal-card-title is-4"
          >
            undefined Configuration
          </h4>
        </header>
      </Component>
      <Component
        body={
          <Unknown
            formikProps={
              Object {
                "dirty": false,
                "errors": Object {},
                "getFieldHelpers": [Function],
                "getFieldMeta": [Function],
                "getFieldProps": [Function],
                "handleBlur": [Function],
                "handleChange": [Function],
                "handleReset": [Function],
                "handleSubmit": [Function],
                "initialErrors": Object {},
                "initialStatus": undefined,
                "initialTouched": Object {},
                "initialValues": Object {
                  "appointmentLength": 30,
                  "appointmentTimeGap": 30,
                  "daysOfWeek": Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                  ],
                },
                "isSubmitting": false,
                "isValid": true,
                "isValidating": false,
                "registerField": [Function],
                "resetForm": [Function],
                "setErrors": [Function],
                "setFieldError": [Function],
                "setFieldTouched": [Function],
                "setFieldValue": [Function],
                "setFormikState": [Function],
                "setStatus": [Function],
                "setSubmitting": [Function],
                "setTouched": [Function],
                "setValues": [Function],
                "status": undefined,
                "submitCount": 0,
                "submitForm": [Function],
                "touched": Object {},
                "unregisterField": [Function],
                "validateField": [Function],
                "validateForm": [Function],
                "validateOnBlur": true,
                "validateOnChange": true,
                "validateOnMount": false,
                "values": Object {
                  "appointmentLength": 30,
                  "appointmentTimeGap": 30,
                  "daysOfWeek": Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                  ],
                },
              }
            }
            subtext="Please use the following form to configure your diary settings for your 
                    ‘undefined’ widget on your website"
          />
        }
      >
        <section
          className="modal-card-body"
        >
          <Component
            formikProps={
              Object {
                "dirty": false,
                "errors": Object {},
                "getFieldHelpers": [Function],
                "getFieldMeta": [Function],
                "getFieldProps": [Function],
                "handleBlur": [Function],
                "handleChange": [Function],
                "handleReset": [Function],
                "handleSubmit": [Function],
                "initialErrors": Object {},
                "initialStatus": undefined,
                "initialTouched": Object {},
                "initialValues": Object {
                  "appointmentLength": 30,
                  "appointmentTimeGap": 30,
                  "daysOfWeek": Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                  ],
                },
                "isSubmitting": false,
                "isValid": true,
                "isValidating": false,
                "registerField": [Function],
                "resetForm": [Function],
                "setErrors": [Function],
                "setFieldError": [Function],
                "setFieldTouched": [Function],
                "setFieldValue": [Function],
                "setFormikState": [Function],
                "setStatus": [Function],
                "setSubmitting": [Function],
                "setTouched": [Function],
                "setValues": [Function],
                "status": undefined,
                "submitCount": 0,
                "submitForm": [Function],
                "touched": Object {},
                "unregisterField": [Function],
                "validateField": [Function],
                "validateForm": [Function],
                "validateOnBlur": true,
                "validateOnChange": true,
                "validateOnMount": false,
                "values": Object {
                  "appointmentLength": 30,
                  "appointmentTimeGap": 30,
                  "daysOfWeek": Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                  ],
                },
              }
            }
            subtext="Please use the following form to configure your diary settings for your 
                    ‘undefined’ widget on your website"
          >
            <p>
              Please use the following form to configure your diary settings for your 
                    ‘undefined’ widget on your website
            </p>
            <Component
              className="checkbox-inline mt-5"
              id="appointmentTimeGap"
              isHorizontal={true}
              labelText="Time between appointments"
              name="appointmentTimeGap"
              options={
                Array [
                  Object {
                    "label": "15 mins",
                    "value": 15,
                  },
                  Object {
                    "label": "30 mins",
                    "value": 30,
                  },
                  Object {
                    "label": "1hr",
                    "value": 60,
                  },
                  Object {
                    "label": "1hr 30mins",
                    "value": 90,
                  },
                ]
              }
              setFieldValue={[Function]}
              state={30}
              subText="Select a time between each appointment"
            >
              <Field
                name="appointmentTimeGap"
                type="radio"
              >
                <div
                  className="field pb-2 checkbox-inline mt-5"
                >
                  <div
                    className="control"
                  >
                    <label
                      className="label"
                      htmlFor="appointmentTimeGap"
                    >
                      Time between appointments
                    </label>
                    <label
                      className="subtext mb-2"
                    >
                      Select a time between each appointment
                    </label>
                    <Component
                      className=""
                      isMultiLine={true}
                    >
                      <div
                        className=""
                        data-test=""
                      >
                        <Component
                          className=""
                          key="0"
                        >
                          <div
                            className=""
                            data-test=""
                          >
                            <div
                              className="radio-wrap"
                            >
                              <input
                                checked={false}
                                className="checkbox "
                                disabled={false}
                                id="appointmentTimeGap15 mins"
                                key="15"
                                name="appointmentTimeGap"
                                onChange={[Function]}
                                type="radio"
                                value={15}
                              />
                              <label
                                htmlFor="appointmentTimeGap15 mins"
                              >
                                15 mins
                              </label>
                            </div>
                          </div>
                        </Component>
                        <Component
                          className=""
                          key="1"
                        >
                          <div
                            className=""
                            data-test=""
                          >
                            <div
                              className="radio-wrap"
                            >
                              <input
                                checked={true}
                                className="checkbox "
                                disabled={false}
                                id="appointmentTimeGap30 mins"
                                key="30"
                                name="appointmentTimeGap"
                                onChange={[Function]}
                                type="radio"
                                value={30}
                              />
                              <label
                                htmlFor="appointmentTimeGap30 mins"
                              >
                                30 mins
                              </label>
                            </div>
                          </div>
                        </Component>
                        <Component
                          className=""
                          key="2"
                        >
                          <div
                            className=""
                            data-test=""
                          >
                            <div
                              className="radio-wrap"
                            >
                              <input
                                checked={false}
                                className="checkbox "
                                disabled={false}
                                id="appointmentTimeGap1hr"
                                key="60"
                                name="appointmentTimeGap"
                                onChange={[Function]}
                                type="radio"
                                value={60}
                              />
                              <label
                                htmlFor="appointmentTimeGap1hr"
                              >
                                1hr
                              </label>
                            </div>
                          </div>
                        </Component>
                        <Component
                          className=""
                          key="3"
                        >
                          <div
                            className=""
                            data-test=""
                          >
                            <div
                              className="radio-wrap"
                            >
                              <input
                                checked={false}
                                className="checkbox "
                                disabled={false}
                                id="appointmentTimeGap1hr 30mins"
                                key="90"
                                name="appointmentTimeGap"
                                onChange={[Function]}
                                type="radio"
                                value={90}
                              />
                              <label
                                htmlFor="appointmentTimeGap1hr 30mins"
                              >
                                1hr 30mins
                              </label>
                            </div>
                          </div>
                        </Component>
                      </div>
                    </Component>
                  </div>
                </div>
              </Field>
            </Component>
            <Component
              className="checkbox-inline mt-5"
              id="appointmentLength"
              isHorizontal={true}
              labelText="Length of Appointments"
              name="appointmentLength"
              options={
                Array [
                  Object {
                    "label": "15 mins",
                    "value": 15,
                  },
                  Object {
                    "label": "30 mins",
                    "value": 30,
                  },
                  Object {
                    "label": "1hr",
                    "value": 60,
                  },
                  Object {
                    "label": "1hr 30mins",
                    "value": 90,
                  },
                ]
              }
              setFieldValue={[Function]}
              state={30}
              subText="Select a length of appointments"
            >
              <Field
                name="appointmentLength"
                type="radio"
              >
                <div
                  className="field pb-2 checkbox-inline mt-5"
                >
                  <div
                    className="control"
                  >
                    <label
                      className="label"
                      htmlFor="appointmentLength"
                    >
                      Length of Appointments
                    </label>
                    <label
                      className="subtext mb-2"
                    >
                      Select a length of appointments
                    </label>
                    <Component
                      className=""
                      isMultiLine={true}
                    >
                      <div
                        className=""
                        data-test=""
                      >
                        <Component
                          className=""
                          key="0"
                        >
                          <div
                            className=""
                            data-test=""
                          >
                            <div
                              className="radio-wrap"
                            >
                              <input
                                checked={false}
                                className="checkbox "
                                disabled={false}
                                id="appointmentLength15 mins"
                                key="15"
                                name="appointmentLength"
                                onChange={[Function]}
                                type="radio"
                                value={15}
                              />
                              <label
                                htmlFor="appointmentLength15 mins"
                              >
                                15 mins
                              </label>
                            </div>
                          </div>
                        </Component>
                        <Component
                          className=""
                          key="1"
                        >
                          <div
                            className=""
                            data-test=""
                          >
                            <div
                              className="radio-wrap"
                            >
                              <input
                                checked={true}
                                className="checkbox "
                                disabled={false}
                                id="appointmentLength30 mins"
                                key="30"
                                name="appointmentLength"
                                onChange={[Function]}
                                type="radio"
                                value={30}
                              />
                              <label
                                htmlFor="appointmentLength30 mins"
                              >
                                30 mins
                              </label>
                            </div>
                          </div>
                        </Component>
                        <Component
                          className=""
                          key="2"
                        >
                          <div
                            className=""
                            data-test=""
                          >
                            <div
                              className="radio-wrap"
                            >
                              <input
                                checked={false}
                                className="checkbox "
                                disabled={false}
                                id="appointmentLength1hr"
                                key="60"
                                name="appointmentLength"
                                onChange={[Function]}
                                type="radio"
                                value={60}
                              />
                              <label
                                htmlFor="appointmentLength1hr"
                              >
                                1hr
                              </label>
                            </div>
                          </div>
                        </Component>
                        <Component
                          className=""
                          key="3"
                        >
                          <div
                            className=""
                            data-test=""
                          >
                            <div
                              className="radio-wrap"
                            >
                              <input
                                checked={false}
                                className="checkbox "
                                disabled={false}
                                id="appointmentLength1hr 30mins"
                                key="90"
                                name="appointmentLength"
                                onChange={[Function]}
                                type="radio"
                                value={90}
                              />
                              <label
                                htmlFor="appointmentLength1hr 30mins"
                              >
                                1hr 30mins
                              </label>
                            </div>
                          </div>
                        </Component>
                      </div>
                    </Component>
                  </div>
                </div>
              </Field>
            </Component>
            <div
              className="field mt-5"
            >
              <div
                className="control"
              >
                <label
                  className="label"
                >
                  Days of the week
                </label>
                <label
                  className="subtext mb-5"
                >
                  Select which days of the week you would like to display
                </label>
                <div
                  className="container-flex flex-wrap"
                >
                  <Component
                    className="mr-5"
                    id="Monday"
                    labelText="Monday"
                    name="daysOfWeek"
                    value="1"
                  >
                    <div
                      className="field mr-5"
                    >
                      <div
                        className="control"
                      >
                        <Field
                          name="daysOfWeek"
                          type="checkbox"
                        >
                          <div
                            className="field field-checkbox"
                          >
                            <input
                              checked={true}
                              className="checkbox"
                              data-test=""
                              id="Monday"
                              onChange={[Function]}
                              type="checkbox"
                              value="1"
                            />
                            <label
                              className="label"
                              htmlFor="Monday"
                            >
                              Monday
                            </label>
                          </div>
                        </Field>
                      </div>
                    </div>
                  </Component>
                  <Component
                    className="mr-5"
                    id="Tuesday"
                    labelText="Tuesday"
                    name="daysOfWeek"
                    value="2"
                  >
                    <div
                      className="field mr-5"
                    >
                      <div
                        className="control"
                      >
                        <Field
                          name="daysOfWeek"
                          type="checkbox"
                        >
                          <div
                            className="field field-checkbox"
                          >
                            <input
                              checked={true}
                              className="checkbox"
                              data-test=""
                              id="Tuesday"
                              onChange={[Function]}
                              type="checkbox"
                              value="2"
                            />
                            <label
                              className="label"
                              htmlFor="Tuesday"
                            >
                              Tuesday
                            </label>
                          </div>
                        </Field>
                      </div>
                    </div>
                  </Component>
                  <Component
                    className="mr-5"
                    id="Wednesday"
                    labelText="Wednesday"
                    name="daysOfWeek"
                    value="3"
                  >
                    <div
                      className="field mr-5"
                    >
                      <div
                        className="control"
                      >
                        <Field
                          name="daysOfWeek"
                          type="checkbox"
                        >
                          <div
                            className="field field-checkbox"
                          >
                            <input
                              checked={true}
                              className="checkbox"
                              data-test=""
                              id="Wednesday"
                              onChange={[Function]}
                              type="checkbox"
                              value="3"
                            />
                            <label
                              className="label"
                              htmlFor="Wednesday"
                            >
                              Wednesday
                            </label>
                          </div>
                        </Field>
                      </div>
                    </div>
                  </Component>
                  <Component
                    className="mr-5"
                    id="Thursday"
                    labelText="Thursday"
                    name="daysOfWeek"
                    value="4"
                  >
                    <div
                      className="field mr-5"
                    >
                      <div
                        className="control"
                      >
                        <Field
                          name="daysOfWeek"
                          type="checkbox"
                        >
                          <div
                            className="field field-checkbox"
                          >
                            <input
                              checked={true}
                              className="checkbox"
                              data-test=""
                              id="Thursday"
                              onChange={[Function]}
                              type="checkbox"
                              value="4"
                            />
                            <label
                              className="label"
                              htmlFor="Thursday"
                            >
                              Thursday
                            </label>
                          </div>
                        </Field>
                      </div>
                    </div>
                  </Component>
                  <Component
                    className="mr-5"
                    id="Friday"
                    labelText="Friday"
                    name="daysOfWeek"
                    value="5"
                  >
                    <div
                      className="field mr-5"
                    >
                      <div
                        className="control"
                      >
                        <Field
                          name="daysOfWeek"
                          type="checkbox"
                        >
                          <div
                            className="field field-checkbox"
                          >
                            <input
                              checked={true}
                              className="checkbox"
                              data-test=""
                              id="Friday"
                              onChange={[Function]}
                              type="checkbox"
                              value="5"
                            />
                            <label
                              className="label"
                              htmlFor="Friday"
                            >
                              Friday
                            </label>
                          </div>
                        </Field>
                      </div>
                    </div>
                  </Component>
                  <Component
                    className="mr-5"
                    id="Saturday"
                    labelText="Saturday"
                    name="daysOfWeek"
                    value="6"
                  >
                    <div
                      className="field mr-5"
                    >
                      <div
                        className="control"
                      >
                        <Field
                          name="daysOfWeek"
                          type="checkbox"
                        >
                          <div
                            className="field field-checkbox"
                          >
                            <input
                              checked={true}
                              className="checkbox"
                              data-test=""
                              id="Saturday"
                              onChange={[Function]}
                              type="checkbox"
                              value="6"
                            />
                            <label
                              className="label"
                              htmlFor="Saturday"
                            >
                              Saturday
                            </label>
                          </div>
                        </Field>
                      </div>
                    </div>
                  </Component>
                  <Component
                    id="Sunday"
                    labelText="Sunday"
                    name="daysOfWeek"
                    value="0"
                  >
                    <div
                      className="field "
                    >
                      <div
                        className="control"
                      >
                        <Field
                          name="daysOfWeek"
                          type="checkbox"
                        >
                          <div
                            className="field field-checkbox"
                          >
                            <input
                              checked={false}
                              className="checkbox"
                              data-test=""
                              id="Sunday"
                              onChange={[Function]}
                              type="checkbox"
                              value="0"
                            />
                            <label
                              className="label"
                              htmlFor="Sunday"
                            >
                              Sunday
                            </label>
                          </div>
                        </Field>
                      </div>
                    </div>
                  </Component>
                </div>
              </div>
            </div>
            <Component
              dropdownStyle={
                Object {
                  "zIndex": 41,
                }
              }
              id="negotiatorIds"
              labelText="Negotiators"
              name="negotiatorIds"
              options={Array []}
              subText="Select which negotiators will be avaiable to attend appointments"
            >
              <div
                className="field"
              >
                <div
                  className="control"
                >
                  <Field
                    name="negotiatorIds"
                    validate={null}
                  >
                    <div
                      className="field field-dropdown-select"
                    >
                      <label
                        className="label "
                      >
                        Negotiators
                      </label>
                      <label
                        className="subtext mb-2"
                      >
                        Select which negotiators will be avaiable to attend appointments
                      </label>
                      <Select
                        className="is-primary input"
                        dropdownStyle={
                          Object {
                            "zIndex": 41,
                          }
                        }
                        id="negotiatorIds"
                        mode="tags"
                        onBlur={[Function]}
                        onChange={[Function]}
                        tagRender={[Function]}
                        value={Array []}
                      >
                        <ForwardRef(Select)
                          className="is-primary input"
                          dropdownStyle={
                            Object {
                              "zIndex": 41,
                            }
                          }
                          id="negotiatorIds"
                          mode="tags"
                          onBlur={[Function]}
                          onChange={[Function]}
                          tagRender={[Function]}
                          value={Array []}
                        >
                          <div
                            className="rc-select is-primary input rc-select-multiple rc-select-show-search"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                          >
                            <SelectTrigger
                              containerWidth={null}
                              dropdownStyle={
                                Object {
                                  "zIndex": 41,
                                }
                              }
                              empty={true}
                              getTriggerDOMNode={[Function]}
                              popupElement={
                                <OptionList
                                  childrenAsData={true}
                                  defaultActiveFirstOption={true}
                                  flattenOptions={Array []}
                                  height={200}
                                  id="negotiatorIds"
                                  itemHeight={20}
                                  multiple={true}
                                  notFoundContent="Not Found"
                                  onActiveValue={[Function]}
                                  onSelect={[Function]}
                                  onToggleOpen={[Function]}
                                  options={Array []}
                                  prefixCls="rc-select"
                                  searchValue=""
                                  values={Set {}}
                                  virtual={true}
                                />
                              }
                              prefixCls="rc-select"
                            >
                              <Trigger
                                action={Array []}
                                afterPopupVisibleChange={[Function]}
                                autoDestroy={false}
                                blurDelay={0.15}
                                builtinPlacements={
                                  Object {
                                    "bottomLeft": Object {
                                      "offset": Array [
                                        0,
                                        4,
                                      ],
                                      "overflow": Object {
                                        "adjustX": 0,
                                        "adjustY": 1,
                                      },
                                      "points": Array [
                                        "tl",
                                        "bl",
                                      ],
                                    },
                                    "bottomRight": Object {
                                      "offset": Array [
                                        0,
                                        4,
                                      ],
                                      "overflow": Object {
                                        "adjustX": 0,
                                        "adjustY": 1,
                                      },
                                      "points": Array [
                                        "tr",
                                        "br",
                                      ],
                                    },
                                    "topLeft": Object {
                                      "offset": Array [
                                        0,
                                        -4,
                                      ],
                                      "overflow": Object {
                                        "adjustX": 0,
                                        "adjustY": 1,
                                      },
                                      "points": Array [
                                        "bl",
                                        "tl",
                                      ],
                                    },
                                    "topRight": Object {
                                      "offset": Array [
                                        0,
                                        -4,
                                      ],
                                      "overflow": Object {
                                        "adjustX": 0,
                                        "adjustY": 1,
                                      },
                                      "points": Array [
                                        "br",
                                        "tr",
                                      ],
                                    },
                                  }
                                }
                                defaultPopupVisible={false}
                                destroyPopupOnHide={false}
                                focusDelay={0}
                                getDocument={[Function]}
                                getPopupClassNameFromAlign={[Function]}
                                getTriggerDOMNode={[Function]}
                                hideAction={Array []}
                                mask={false}
                                maskClosable={true}
                                mouseEnterDelay={0}
                                mouseLeaveDelay={0.1}
                                onPopupAlign={[Function]}
                                onPopupVisibleChange={[Function]}
                                popup={
                                  <div>
                                    <OptionList
                                      childrenAsData={true}
                                      defaultActiveFirstOption={true}
                                      flattenOptions={Array []}
                                      height={200}
                                      id="negotiatorIds"
                                      itemHeight={20}
                                      multiple={true}
                                      notFoundContent="Not Found"
                                      onActiveValue={[Function]}
                                      onSelect={[Function]}
                                      onToggleOpen={[Function]}
                                      options={Array []}
                                      prefixCls="rc-select"
                                      searchValue=""
                                      values={Set {}}
                                      virtual={true}
                                    />
                                  </div>
                                }
                                popupAlign={Object {}}
                                popupClassName="rc-select-dropdown-empty"
                                popupPlacement="bottomLeft"
                                popupStyle={
                                  Object {
                                    "minWidth": null,
                                    "width": null,
                                    "zIndex": 41,
                                  }
                                }
                                prefixCls="rc-select-dropdown"
                                showAction={Array []}
                              >
                                <Selector
                                  accessibilityIndex={0}
                                  activeValue={null}
                                  className="is-primary input"
                                  domRef={
                                    Object {
                                      "current": <div
                                        class="rc-select-selector"
                                      >
                                        <span
                                          class="rc-select-selection-search"
                                          style="width: 0px;"
                                        >
                                          <input
                                            aria-activedescendant="negotiatorIds_list_0"
                                            aria-autocomplete="list"
                                            aria-controls="negotiatorIds_list"
                                            aria-haspopup="listbox"
                                            aria-owns="negotiatorIds_list"
                                            autocomplete="off"
                                            class="rc-select-selection-search-input"
                                            id="negotiatorIds"
                                            role="combobox"
                                            value=""
                                          />
                                          <span
                                            aria-hidden="true"
                                            class="rc-select-selection-search-mirror"
                                          >
                                            
                                             
                                          </span>
                                        </span>
                                        <span
                                          class="rc-select-selection-placeholder"
                                        />
                                      </div>,
                                    }
                                  }
                                  dropdownStyle={
                                    Object {
                                      "zIndex": 41,
                                    }
                                  }
                                  id="negotiatorIds"
                                  inputElement={null}
                                  key="trigger"
                                  mode="tags"
                                  multiple={true}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onSearch={[Function]}
                                  onSelect={[Function]}
                                  onToggleOpen={[Function]}
                                  prefixCls="rc-select"
                                  searchValue=""
                                  showSearch={true}
                                  tagRender={[Function]}
                                  value={Array []}
                                  values={Array []}
                                >
                                  <div
                                    className="rc-select-selector"
                                    onClick={[Function]}
                                    onMouseDown={[Function]}
                                  >
                                    <SelectSelector
                                      accessibilityIndex={0}
                                      activeValue={null}
                                      className="is-primary input"
                                      domRef={
                                        Object {
                                          "current": <div
                                            class="rc-select-selector"
                                          >
                                            <span
                                              class="rc-select-selection-search"
                                              style="width: 0px;"
                                            >
                                              <input
                                                aria-activedescendant="negotiatorIds_list_0"
                                                aria-autocomplete="list"
                                                aria-controls="negotiatorIds_list"
                                                aria-haspopup="listbox"
                                                aria-owns="negotiatorIds_list"
                                                autocomplete="off"
                                                class="rc-select-selection-search-input"
                                                id="negotiatorIds"
                                                role="combobox"
                                                value=""
                                              />
                                              <span
                                                aria-hidden="true"
                                                class="rc-select-selection-search-mirror"
                                              >
                                                
                                                 
                                              </span>
                                            </span>
                                            <span
                                              class="rc-select-selection-placeholder"
                                            />
                                          </div>,
                                        }
                                      }
                                      dropdownStyle={
                                        Object {
                                          "zIndex": 41,
                                        }
                                      }
                                      id="negotiatorIds"
                                      inputElement={null}
                                      inputRef={
                                        Object {
                                          "current": <input
                                            aria-activedescendant="negotiatorIds_list_0"
                                            aria-autocomplete="list"
                                            aria-controls="negotiatorIds_list"
                                            aria-haspopup="listbox"
                                            aria-owns="negotiatorIds_list"
                                            autocomplete="off"
                                            class="rc-select-selection-search-input"
                                            id="negotiatorIds"
                                            role="combobox"
                                            value=""
                                          />,
                                        }
                                      }
                                      mode="tags"
                                      multiple={true}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onInputChange={[Function]}
                                      onInputKeyDown={[Function]}
                                      onInputMouseDown={[Function]}
                                      onInputPaste={[Function]}
                                      onSearch={[Function]}
                                      onSelect={[Function]}
                                      onToggleOpen={[Function]}
                                      prefixCls="rc-select"
                                      searchValue=""
                                      showSearch={true}
                                      tagRender={[Function]}
                                      value={Array []}
                                      values={Array []}
                                    >
                                      <CSSMotionList
                                        component={false}
                                        keys={Array []}
                                        motionAppear={true}
                                      />
                                      <span
                                        className="rc-select-selection-search"
                                        style={
                                          Object {
                                            "width": 0,
                                          }
                                        }
                                      >
                                        <Input
                                          accessibilityIndex={0}
                                          attrs={Object {}}
                                          editable={true}
                                          id="negotiatorIds"
                                          inputElement={null}
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          onMouseDown={[Function]}
                                          onPaste={[Function]}
                                          prefixCls="rc-select"
                                          value=""
                                        >
                                          <input
                                            aria-activedescendant="negotiatorIds_list_0"
                                            aria-autocomplete="list"
                                            aria-controls="negotiatorIds_list"
                                            aria-haspopup="listbox"
                                            aria-owns="negotiatorIds_list"
                                            autoComplete="off"
                                            className="rc-select-selection-search-input"
                                            id="negotiatorIds"
                                            onChange={[Function]}
                                            onKeyDown={[Function]}
                                            onMouseDown={[Function]}
                                            onPaste={[Function]}
                                            readOnly={false}
                                            role="combobox"
                                            style={
                                              Object {
                                                "opacity": null,
                                              }
                                            }
                                            unselectable={null}
                                            value=""
                                          />
                                        </Input>
                                        <span
                                          aria-hidden={true}
                                          className="rc-select-selection-search-mirror"
                                        >
                                           
                                        </span>
                                      </span>
                                      <span
                                        className="rc-select-selection-placeholder"
                                      />
                                    </SelectSelector>
                                  </div>
                                </Selector>
                              </Trigger>
                            </SelectTrigger>
                          </div>
                        </ForwardRef(Select)>
                      </Select>
                    </div>
                  </Field>
                </div>
              </div>
              <div />
            </Component>
          </Component>
        </section>
      </Component>
      <Component
        footerItems={
          <Unknown
            closeModal={[MockFunction]}
            formikProps={
              Object {
                "dirty": false,
                "errors": Object {},
                "getFieldHelpers": [Function],
                "getFieldMeta": [Function],
                "getFieldProps": [Function],
                "handleBlur": [Function],
                "handleChange": [Function],
                "handleReset": [Function],
                "handleSubmit": [Function],
                "initialErrors": Object {},
                "initialStatus": undefined,
                "initialTouched": Object {},
                "initialValues": Object {
                  "appointmentLength": 30,
                  "appointmentTimeGap": 30,
                  "daysOfWeek": Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                  ],
                },
                "isSubmitting": false,
                "isValid": true,
                "isValidating": false,
                "registerField": [Function],
                "resetForm": [Function],
                "setErrors": [Function],
                "setFieldError": [Function],
                "setFieldTouched": [Function],
                "setFieldValue": [Function],
                "setFormikState": [Function],
                "setStatus": [Function],
                "setSubmitting": [Function],
                "setTouched": [Function],
                "setValues": [Function],
                "status": undefined,
                "submitCount": 0,
                "submitForm": [Function],
                "touched": Object {},
                "unregisterField": [Function],
                "validateField": [Function],
                "validateForm": [Function],
                "validateOnBlur": true,
                "validateOnChange": true,
                "validateOnMount": false,
                "values": Object {
                  "appointmentLength": 30,
                  "appointmentTimeGap": 30,
                  "daysOfWeek": Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                  ],
                },
              }
            }
          />
        }
      >
        <footer
          className="modal-card-foot"
        >
          <Component
            closeModal={[MockFunction]}
            formikProps={
              Object {
                "dirty": false,
                "errors": Object {},
                "getFieldHelpers": [Function],
                "getFieldMeta": [Function],
                "getFieldProps": [Function],
                "handleBlur": [Function],
                "handleChange": [Function],
                "handleReset": [Function],
                "handleSubmit": [Function],
                "initialErrors": Object {},
                "initialStatus": undefined,
                "initialTouched": Object {},
                "initialValues": Object {
                  "appointmentLength": 30,
                  "appointmentTimeGap": 30,
                  "daysOfWeek": Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                  ],
                },
                "isSubmitting": false,
                "isValid": true,
                "isValidating": false,
                "registerField": [Function],
                "resetForm": [Function],
                "setErrors": [Function],
                "setFieldError": [Function],
                "setFieldTouched": [Function],
                "setFieldValue": [Function],
                "setFormikState": [Function],
                "setStatus": [Function],
                "setSubmitting": [Function],
                "setTouched": [Function],
                "setValues": [Function],
                "status": undefined,
                "submitCount": 0,
                "submitForm": [Function],
                "touched": Object {},
                "unregisterField": [Function],
                "validateField": [Function],
                "validateForm": [Function],
                "validateOnBlur": true,
                "validateOnChange": true,
                "validateOnMount": false,
                "values": Object {
                  "appointmentLength": 30,
                  "appointmentTimeGap": 30,
                  "daysOfWeek": Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                  ],
                },
              }
            }
          >
            <Component
              className="mr-2"
              fullWidth={true}
              onClick={[MockFunction]}
              type="button"
              variant="danger"
            >
              <button
                className="button mr-2 is-danger is-fullwidth "
                data-test=""
                disabled={false}
                onClick={[MockFunction]}
                type="button"
              >
                CANCEL
              </button>
            </Component>
            <Component
              fullWidth={true}
              onClick={[Function]}
              type="submit"
              variant="primary"
            >
              <button
                className="button  is-primary is-fullwidth "
                data-test=""
                disabled={false}
                onClick={[Function]}
                type="submit"
              >
                SAVE CHANGES
              </button>
            </Component>
          </Component>
        </footer>
      </Component>
    </Formik>
  </Component>
</Provider>
`;
