// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SettingsSubscriptionsPage should match snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.h1
        classname=""
      >
        Subscriptions
      </mock-styled.h1>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 2.5rem;
"
        data-has-call-to-action="true"
        data-has-expandable-action="false"
        data-num-columns-excl-action-col="7"
      >
        <mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  grid-column-end: span 2;
"
          >
            Type
          </mock-styled.div>
          <mock-styled.div>
            Start Date
          </mock-styled.div>
          <mock-styled.div>
            Renewal Date
          </mock-styled.div>
          <mock-styled.div>
            Frequency
          </mock-styled.div>
          <mock-styled.div>
            Cost
          </mock-styled.div>
          <mock-styled.div>
            Status
          </mock-styled.div>
          <mock-styled.div>
            Cancel Subscription
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div
              classname="mock-css.
  grid-column-end: span 2;
 mock-css."
            >
              <mock-styled.div
                data-narrow-label="Type"
              >
                Developer edition license for test@example.com
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.span
                classname="mock-css."
              >
                <svg />
              </mock-styled.span>
              <mock-styled.div
                data-narrow-label="Start Date"
              >
                16 May 2021
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.span
                classname="mock-css."
              >
                <svg />
              </mock-styled.span>
              <mock-styled.div
                data-narrow-label="Renewal Date"
              >
                01 Mar 2022
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.div
                data-narrow-label="Frequency"
              >
                Monthly
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.span
                classname="mock-css."
              >
                <svg />
              </mock-styled.span>
              <mock-styled.div
                data-narrow-label="Cost"
              >
                £300
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Status"
              >
                <mock-styled.span
                  classname="mock-css."
                />
                 
                Cancelled
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.span
                  classname="mock-css."
                  style="font-size: 1.2rem;"
                >
                  <svg
                    style="font-size: 1.2rem;"
                  />
                </mock-styled.span>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.input
            value="1"
          />
           of 
          10
        </mock-styled.div>
        <mock-styled.button
          data-testid="back-button"
          type="button"
        >
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.button>
        <mock-styled.button
          data-testid="forward-button"
          type="button"
        >
          <mock-styled.span
            classname="mock-css.
  cursor: pointer;
  svg {
    color: var(--intent-primary);
  }
"
          >
            <svg />
          </mock-styled.span>
        </mock-styled.button>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      />
      <mock-styled.div
        classname=""
      >
        <mock-styled.button
          classname="mock-css. mock-css."
        >
          <mock-styled.div />
          <mock-styled.span
            classname="mock-css.
  font-size: var(--font-size-subheading);
"
          >
            <svg />
          </mock-styled.span>
        </mock-styled.button>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.h1
      classname=""
    >
      Subscriptions
    </mock-styled.h1>
    <mock-styled.div
      classname=""
    >
      <mock-styled.div>
        <mock-styled.div />
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div
      classname="mock-css.
  margin-bottom: 2.5rem;
"
      data-has-call-to-action="true"
      data-has-expandable-action="false"
      data-num-columns-excl-action-col="7"
    >
      <mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  grid-column-end: span 2;
"
        >
          Type
        </mock-styled.div>
        <mock-styled.div>
          Start Date
        </mock-styled.div>
        <mock-styled.div>
          Renewal Date
        </mock-styled.div>
        <mock-styled.div>
          Frequency
        </mock-styled.div>
        <mock-styled.div>
          Cost
        </mock-styled.div>
        <mock-styled.div>
          Status
        </mock-styled.div>
        <mock-styled.div>
          Cancel Subscription
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  grid-column-end: span 2;
 mock-css."
          >
            <mock-styled.div
              data-narrow-label="Type"
            >
              Developer edition license for test@example.com
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.span
              classname="mock-css."
            >
              <svg />
            </mock-styled.span>
            <mock-styled.div
              data-narrow-label="Start Date"
            >
              16 May 2021
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.span
              classname="mock-css."
            >
              <svg />
            </mock-styled.span>
            <mock-styled.div
              data-narrow-label="Renewal Date"
            >
              01 Mar 2022
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.div
              data-narrow-label="Frequency"
            >
              Monthly
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.span
              classname="mock-css."
            >
              <svg />
            </mock-styled.span>
            <mock-styled.div
              data-narrow-label="Cost"
            >
              £300
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              data-narrow-label="Status"
            >
              <mock-styled.span
                classname="mock-css."
              />
               
              Cancelled
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname="mock-css."
                style="font-size: 1.2rem;"
              >
                <svg
                  style="font-size: 1.2rem;"
                />
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div>
      <mock-styled.div>
        <mock-styled.input
          value="1"
        />
         of 
        10
      </mock-styled.div>
      <mock-styled.button
        data-testid="back-button"
        type="button"
      >
        <mock-styled.span
          classname=""
        >
          <svg />
        </mock-styled.span>
      </mock-styled.button>
      <mock-styled.button
        data-testid="forward-button"
        type="button"
      >
        <mock-styled.span
          classname="mock-css.
  cursor: pointer;
  svg {
    color: var(--intent-primary);
  }
"
        >
          <svg />
        </mock-styled.span>
      </mock-styled.button>
    </mock-styled.div>
    <mock-styled.div
      classname=""
    />
    <mock-styled.div
      classname=""
    >
      <mock-styled.button
        classname="mock-css. mock-css."
      >
        <mock-styled.div />
        <mock-styled.span
          classname="mock-css.
  font-size: var(--font-size-subheading);
"
        >
          <svg />
        </mock-styled.span>
      </mock-styled.button>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SettingsSubscriptionsPage should match snapshot for mobile view 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="root"
    >
      <div />
    </div>
    <div>
      <mock-styled.div />
      <mock-styled.h1
        classname=""
      >
        Subscriptions
      </mock-styled.h1>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 2.5rem;
"
        data-has-call-to-action="true"
        data-has-expandable-action="false"
        data-num-columns-excl-action-col="7"
      >
        <mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  grid-column-end: span 2;
"
          >
            Type
          </mock-styled.div>
          <mock-styled.div>
            Start Date
          </mock-styled.div>
          <mock-styled.div>
            Renewal Date
          </mock-styled.div>
          <mock-styled.div>
            Frequency
          </mock-styled.div>
          <mock-styled.div>
            Cost
          </mock-styled.div>
          <mock-styled.div>
            Status
          </mock-styled.div>
          <mock-styled.div>
            Cancel Subscription
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div
              classname="mock-css.
  grid-column-end: span 2;
 mock-css."
            >
              <mock-styled.div
                data-narrow-label="Type"
              >
                Developer edition license for test@example.com
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.span
                classname="mock-css."
              >
                <svg />
              </mock-styled.span>
              <mock-styled.div
                data-narrow-label="Start Date"
              >
                16 May 2021
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.span
                classname="mock-css."
              >
                <svg />
              </mock-styled.span>
              <mock-styled.div
                data-narrow-label="Renewal Date"
              >
                01 Mar 2022
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.div
                data-narrow-label="Frequency"
              >
                Monthly
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.span
                classname="mock-css."
              >
                <svg />
              </mock-styled.span>
              <mock-styled.div
                data-narrow-label="Cost"
              >
                £300
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Status"
              >
                <mock-styled.span
                  classname="mock-css."
                />
                 
                Cancelled
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.span
                  classname="mock-css."
                  style="font-size: 1.2rem;"
                >
                  <svg
                    style="font-size: 1.2rem;"
                  />
                </mock-styled.span>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.input
            value="1"
          />
           of 
          10
        </mock-styled.div>
        <mock-styled.button
          data-testid="back-button"
          type="button"
        >
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.button>
        <mock-styled.button
          data-testid="forward-button"
          type="button"
        >
          <mock-styled.span
            classname="mock-css.
  cursor: pointer;
  svg {
    color: var(--intent-primary);
  }
"
          >
            <svg />
          </mock-styled.span>
        </mock-styled.button>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      />
      <mock-styled.div
        classname=""
      >
        <mock-styled.button
          classname="mock-css. mock-css."
        >
          <mock-styled.div />
          <mock-styled.span
            classname="mock-css.
  font-size: var(--font-size-subheading);
"
          >
            <svg />
          </mock-styled.span>
        </mock-styled.button>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.h1
      classname=""
    >
      Subscriptions
    </mock-styled.h1>
    <mock-styled.div
      classname=""
    >
      <mock-styled.div>
        <mock-styled.div />
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div
      classname="mock-css.
  margin-bottom: 2.5rem;
"
      data-has-call-to-action="true"
      data-has-expandable-action="false"
      data-num-columns-excl-action-col="7"
    >
      <mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  grid-column-end: span 2;
"
        >
          Type
        </mock-styled.div>
        <mock-styled.div>
          Start Date
        </mock-styled.div>
        <mock-styled.div>
          Renewal Date
        </mock-styled.div>
        <mock-styled.div>
          Frequency
        </mock-styled.div>
        <mock-styled.div>
          Cost
        </mock-styled.div>
        <mock-styled.div>
          Status
        </mock-styled.div>
        <mock-styled.div>
          Cancel Subscription
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  grid-column-end: span 2;
 mock-css."
          >
            <mock-styled.div
              data-narrow-label="Type"
            >
              Developer edition license for test@example.com
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.span
              classname="mock-css."
            >
              <svg />
            </mock-styled.span>
            <mock-styled.div
              data-narrow-label="Start Date"
            >
              16 May 2021
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.span
              classname="mock-css."
            >
              <svg />
            </mock-styled.span>
            <mock-styled.div
              data-narrow-label="Renewal Date"
            >
              01 Mar 2022
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.div
              data-narrow-label="Frequency"
            >
              Monthly
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.span
              classname="mock-css."
            >
              <svg />
            </mock-styled.span>
            <mock-styled.div
              data-narrow-label="Cost"
            >
              £300
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              data-narrow-label="Status"
            >
              <mock-styled.span
                classname="mock-css."
              />
               
              Cancelled
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname="mock-css."
                style="font-size: 1.2rem;"
              >
                <svg
                  style="font-size: 1.2rem;"
                />
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div>
      <mock-styled.div>
        <mock-styled.input
          value="1"
        />
         of 
        10
      </mock-styled.div>
      <mock-styled.button
        data-testid="back-button"
        type="button"
      >
        <mock-styled.span
          classname=""
        >
          <svg />
        </mock-styled.span>
      </mock-styled.button>
      <mock-styled.button
        data-testid="forward-button"
        type="button"
      >
        <mock-styled.span
          classname="mock-css.
  cursor: pointer;
  svg {
    color: var(--intent-primary);
  }
"
        >
          <svg />
        </mock-styled.span>
      </mock-styled.button>
    </mock-styled.div>
    <mock-styled.div
      classname=""
    />
    <mock-styled.div
      classname=""
    >
      <mock-styled.button
        classname="mock-css. mock-css."
      >
        <mock-styled.div />
        <mock-styled.span
          classname="mock-css.
  font-size: var(--font-size-subheading);
"
        >
          <svg />
        </mock-styled.span>
      </mock-styled.button>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
