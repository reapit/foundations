// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProfileForm should match snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <form>
        <div
          class="el-mb11"
        >
          <div
            class="mocked-styled-130 el-form-layout"
          >
            <div
              class="mocked-styled-133 el-input-wrap"
            >
              <div
                class="mocked-styled-40 el-input-group"
              >
                <input
                  aria-label="Input type undefined"
                  class="mocked-styled-38 el-input"
                  id="test-static-id"
                  name="name"
                  placeholder="Your full name here"
                />
                <label
                  class="mocked-styled-41 el-label"
                  for="test-static-id"
                >
                  Name
                </label>
              </div>
            </div>
            <div
              class="mocked-styled-133 el-input-wrap"
            >
              <div
                class="mocked-styled-40 el-input-group"
              >
                <input
                  aria-label="Input type undefined"
                  class="mocked-styled-38 el-input"
                  id="test-static-id"
                  name="jobTitle"
                  placeholder="What role do you have at your company"
                />
                <label
                  class="mocked-styled-41 el-label"
                  for="test-static-id"
                >
                  Job Title
                </label>
              </div>
            </div>
          </div>
        </div>
        <div
          class="el-mb11"
        >
          <div
            class="mocked-styled-130 el-form-layout"
          >
            <div
              class="mocked-styled-133 el-input-wrap"
            >
              <h2
                class="el-text-base el-subtitle el-has-no-margin"
              >
                Company Name
              </h2>
              <p
                class="el-text-base el-body-text el-has-grey-text el-has-no-margin"
              >
                MOCK_COMPANY
              </p>
            </div>
            <div
              class="mocked-styled-133 el-input-wrap"
            >
              <h2
                class="el-text-base el-subtitle el-has-no-margin"
              >
                Email Address
              </h2>
              <p
                class="el-text-base el-body-text el-has-grey-text el-has-no-margin"
              >
                example@email.com
              </p>
            </div>
            <div
              class="mocked-styled-133 el-input-wrap"
            >
              <h2
                class="el-text-base el-subtitle el-has-no-margin"
              >
                Profile Settings
              </h2>
              <p
                class="el-text-base el-body-text el-has-grey-text el-has-no-margin"
              >
                MOCK_CLIENT_ID
              </p>
            </div>
          </div>
        </div>
        <div
          class="mocked-styled-2 el-button-group"
        >
          <div
            class="mocked-styled-3 el-button-group-inner"
          >
            <button
              class="el-intent-primary el-button"
              type="submit"
            >
              <div
                class="mocked-styled-0 el-button-loader"
              />
              Save Changes
            </button>
          </div>
        </div>
      </form>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <form>
      <div
        class="el-mb11"
      >
        <div
          class="mocked-styled-130 el-form-layout"
        >
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                id="test-static-id"
                name="name"
                placeholder="Your full name here"
              />
              <label
                class="mocked-styled-41 el-label"
                for="test-static-id"
              >
                Name
              </label>
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                id="test-static-id"
                name="jobTitle"
                placeholder="What role do you have at your company"
              />
              <label
                class="mocked-styled-41 el-label"
                for="test-static-id"
              >
                Job Title
              </label>
            </div>
          </div>
        </div>
      </div>
      <div
        class="el-mb11"
      >
        <div
          class="mocked-styled-130 el-form-layout"
        >
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <h2
              class="el-text-base el-subtitle el-has-no-margin"
            >
              Company Name
            </h2>
            <p
              class="el-text-base el-body-text el-has-grey-text el-has-no-margin"
            >
              MOCK_COMPANY
            </p>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <h2
              class="el-text-base el-subtitle el-has-no-margin"
            >
              Email Address
            </h2>
            <p
              class="el-text-base el-body-text el-has-grey-text el-has-no-margin"
            >
              example@email.com
            </p>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <h2
              class="el-text-base el-subtitle el-has-no-margin"
            >
              Profile Settings
            </h2>
            <p
              class="el-text-base el-body-text el-has-grey-text el-has-no-margin"
            >
              MOCK_CLIENT_ID
            </p>
          </div>
        </div>
      </div>
      <div
        class="mocked-styled-2 el-button-group"
      >
        <div
          class="mocked-styled-3 el-button-group-inner"
        >
          <button
            class="el-intent-primary el-button"
            type="submit"
          >
            <div
              class="mocked-styled-0 el-button-loader"
            />
            Save Changes
          </button>
        </div>
      </div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
