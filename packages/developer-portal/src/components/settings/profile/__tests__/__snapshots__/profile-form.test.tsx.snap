// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProfileForm should match snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <form>
        <div
          class="mock-css.
  margin-bottom: 2.5rem;
"
        >
          <mock-styled.div
            classname=""
          >
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="name"
                  placeholder="Your full name here"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Name
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="jobTitle"
                  placeholder="What role do you have at your company"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Job Title
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="gitHubUsername"
                  placeholder="Github handles help us tracking issues"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  GitHub Username
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </div>
        <div
          class="mock-css.
  margin-bottom: 2.5rem;
"
        >
          <mock-styled.div
            classname=""
          >
            <mock-styled.div>
              <mock-styled.h2
                classname="mock-css."
              >
                Company Name
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css. mock-css."
              >
                MOCK_COMPANY
              </mock-styled.p>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.h2
                classname="mock-css."
              >
                Email Address
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css. mock-css."
              >
                example@email.com
              </mock-styled.p>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.h2
                classname="mock-css."
              >
                Profile Settings
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css. mock-css."
              >
                MOCK_CLIENT_ID
              </mock-styled.p>
            </mock-styled.div>
          </mock-styled.div>
        </div>
        <mock-styled.h2
          classname="mock-css."
        >
          Customer Data
        </mock-styled.h2>
        <mock-styled.p
          classname="mock-css."
        >
          As your account is associated with both the Sandbox Data (SBOX) and Customer Data, you can choose to toggle between which data you want to see available in the Developer Portal.
        </mock-styled.p>
        <mock-styled.p
          classname="mock-css."
        >
          You can choose which sandbox you wish to view based on your Reapit Product. This is specific and only associated to your developer profile.
        </mock-styled.p>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 1rem;
"
        >
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Use 
                MOCK_ORG_NAME
                 Customer or Sandbox data
              </mock-styled.label>
              <mock-styled.input
                id="useCustomerData"
                name="useCustomerData"
                type="checkbox"
              />
              <mock-styled.label
                classname="mock-css."
                htmlfor="useCustomerData"
              >
                <mock-styled.span>
                  Customer
                </mock-styled.span>
                <mock-styled.span>
                  Sandbox
                </mock-styled.span>
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.div
                classname="mock-css."
              >
                <mock-styled.input
                  id="AUS"
                  name="sandboxId"
                  type="radio"
                  value="AUS"
                />
                <mock-styled.label
                  classname="mock-css."
                  htmlfor="AUS"
                >
                  <mock-styled.span>
                    Australia Sandbox
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="GBR"
                  name="sandboxId"
                  type="radio"
                  value="GBR"
                />
                <mock-styled.label
                  classname="mock-css."
                  htmlfor="GBR"
                >
                  <mock-styled.span>
                    UK Sandbox
                  </mock-styled.span>
                </mock-styled.label>
              </mock-styled.div>
              <mock-styled.label>
                Choose Sandbox
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 2.5rem;
 mock-css. mock-css. mock-css. mock-css."
        >
          <div
            class="mock-css.
  padding: 0 1rem;
  display: flex;
  align-items: center;
  border-radius: var(--default-border-radius) 0 0 var(--default-border-radius);
  cursor: pointer;

  , {
    color: var(--color-white);
  }
"
            data-testid="close-icon"
          >
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </div>
          <div
            class="mock-css.
  padding: 1rem;
  opacity: 0;
  transition: 0.5s;
  width: 100%;
"
          >
            Please note, you will need to log out and log back in again to see this change take effect
          </div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.button
              classname="mock-css."
              type="submit"
            >
              <mock-styled.div />
              Save Changes
            </mock-styled.button>
          </mock-styled.div>
        </mock-styled.div>
      </form>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <form>
      <div
        class="mock-css.
  margin-bottom: 2.5rem;
"
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="name"
                placeholder="Your full name here"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Name
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="jobTitle"
                placeholder="What role do you have at your company"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Job Title
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="gitHubUsername"
                placeholder="Github handles help us tracking issues"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                GitHub Username
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </div>
      <div
        class="mock-css.
  margin-bottom: 2.5rem;
"
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.h2
              classname="mock-css."
            >
              Company Name
            </mock-styled.h2>
            <mock-styled.p
              classname="mock-css. mock-css."
            >
              MOCK_COMPANY
            </mock-styled.p>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.h2
              classname="mock-css."
            >
              Email Address
            </mock-styled.h2>
            <mock-styled.p
              classname="mock-css. mock-css."
            >
              example@email.com
            </mock-styled.p>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.h2
              classname="mock-css."
            >
              Profile Settings
            </mock-styled.h2>
            <mock-styled.p
              classname="mock-css. mock-css."
            >
              MOCK_CLIENT_ID
            </mock-styled.p>
          </mock-styled.div>
        </mock-styled.div>
      </div>
      <mock-styled.h2
        classname="mock-css."
      >
        Customer Data
      </mock-styled.h2>
      <mock-styled.p
        classname="mock-css."
      >
        As your account is associated with both the Sandbox Data (SBOX) and Customer Data, you can choose to toggle between which data you want to see available in the Developer Portal.
      </mock-styled.p>
      <mock-styled.p
        classname="mock-css."
      >
        You can choose which sandbox you wish to view based on your Reapit Product. This is specific and only associated to your developer profile.
      </mock-styled.p>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 1rem;
"
      >
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.label>
              Use 
              MOCK_ORG_NAME
               Customer or Sandbox data
            </mock-styled.label>
            <mock-styled.input
              id="useCustomerData"
              name="useCustomerData"
              type="checkbox"
            />
            <mock-styled.label
              classname="mock-css."
              htmlfor="useCustomerData"
            >
              <mock-styled.span>
                Customer
              </mock-styled.span>
              <mock-styled.span>
                Sandbox
              </mock-styled.span>
            </mock-styled.label>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.input
                id="AUS"
                name="sandboxId"
                type="radio"
                value="AUS"
              />
              <mock-styled.label
                classname="mock-css."
                htmlfor="AUS"
              >
                <mock-styled.span>
                  Australia Sandbox
                </mock-styled.span>
              </mock-styled.label>
              <mock-styled.input
                id="GBR"
                name="sandboxId"
                type="radio"
                value="GBR"
              />
              <mock-styled.label
                classname="mock-css."
                htmlfor="GBR"
              >
                <mock-styled.span>
                  UK Sandbox
                </mock-styled.span>
              </mock-styled.label>
            </mock-styled.div>
            <mock-styled.label>
              Choose Sandbox
            </mock-styled.label>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 2.5rem;
 mock-css. mock-css. mock-css. mock-css."
      >
        <div
          class="mock-css.
  padding: 0 1rem;
  display: flex;
  align-items: center;
  border-radius: var(--default-border-radius) 0 0 var(--default-border-radius);
  cursor: pointer;

  , {
    color: var(--color-white);
  }
"
          data-testid="close-icon"
        >
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </div>
        <div
          class="mock-css.
  padding: 1rem;
  opacity: 0;
  transition: 0.5s;
  width: 100%;
"
        >
          Please note, you will need to log out and log back in again to see this change take effect
        </div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.button
            classname="mock-css."
            type="submit"
          >
            <mock-styled.div />
            Save Changes
          </mock-styled.button>
        </mock-styled.div>
      </mock-styled.div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
