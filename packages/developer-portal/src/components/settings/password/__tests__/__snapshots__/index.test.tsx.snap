// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SettingsPasswordPage should match snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <h1
        class="el-text-base el-title"
      >
        Password
<<<<<<< HEAD
      </mock-styled.h1>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
=======
      </h1>
      <form>
        <div
          class="el-form-layout-has-margin el-form-layout"
        >
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <input
                aria-label="Input type password"
                class="mocked-styled-38 el-input"
                id="test-static-id"
                name="password"
                placeholder="Current Password"
                type="password"
              />
              <label
                class="mocked-styled-41 el-label"
                for="test-static-id"
              >
                Current Password
              </label>
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <input
                aria-label="Input type password"
                class="mocked-styled-38 el-input"
                id="test-static-id"
                name="newPassword"
                placeholder="New Password"
                type="password"
              />
              <label
                class="mocked-styled-41 el-label"
                for="test-static-id"
              >
                New Password
              </label>
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <input
                aria-label="Input type password"
                class="mocked-styled-38 el-input"
                id="test-static-id"
                name="confirmPassword"
                placeholder="Confirm New Password"
                type="password"
              />
              <label
                class="mocked-styled-41 el-label"
                for="test-static-id"
              >
                Confirm New Password
              </label>
            </div>
          </div>
        </div>
        <div
          class="mocked-styled-2 el-button-group"
        >
          <div
            class="mocked-styled-3 el-button-group-inner"
          >
            <button
              class="el-intent-primary el-button"
              type="submit"
            >
              <div
                class="mocked-styled-0 el-button-loader"
              />
              Save Changes
            </button>
          </div>
        </div>
      </form>
      <div
>>>>>>> e83ceb437 (fix: RPLT-399 some housekeeping)
        aria-hidden="true"
        class="mocked-styled-146 el-mobile-controls-bg"
      />
      <div
        class="mocked-styled-147 el-mobile-controls"
        id=":r0:"
      >
        <button
          aria-controls=":r0:"
          class="el-floating-button el-intent-primary el-button"
        >
          <div
            class="mocked-styled-0 el-button-loader"
          />
          <span
            class="el-icon-new el-icon"
          >
            <svg
              fill="none"
              height="1em"
              role="img"
              title="Icon image with name menu"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M20 11H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2M4 7h16a1 1 0 1 0 0-2H4a1 1 0 0 0 0 2m16 10H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2"
                fill="currentColor"
              />
            </svg>
          </span>
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <h1
      class="el-text-base el-title"
    >
      Password
<<<<<<< HEAD
    </mock-styled.h1>
    <mock-styled.div
      classname=""
    >
      <mock-styled.div>
        <mock-styled.div />
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div
=======
    </h1>
    <form>
      <div
        class="el-form-layout-has-margin el-form-layout"
      >
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <input
              aria-label="Input type password"
              class="mocked-styled-38 el-input"
              id="test-static-id"
              name="password"
              placeholder="Current Password"
              type="password"
            />
            <label
              class="mocked-styled-41 el-label"
              for="test-static-id"
            >
              Current Password
            </label>
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <input
              aria-label="Input type password"
              class="mocked-styled-38 el-input"
              id="test-static-id"
              name="newPassword"
              placeholder="New Password"
              type="password"
            />
            <label
              class="mocked-styled-41 el-label"
              for="test-static-id"
            >
              New Password
            </label>
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <input
              aria-label="Input type password"
              class="mocked-styled-38 el-input"
              id="test-static-id"
              name="confirmPassword"
              placeholder="Confirm New Password"
              type="password"
            />
            <label
              class="mocked-styled-41 el-label"
              for="test-static-id"
            >
              Confirm New Password
            </label>
          </div>
        </div>
      </div>
      <div
        class="mocked-styled-2 el-button-group"
      >
        <div
          class="mocked-styled-3 el-button-group-inner"
        >
          <button
            class="el-intent-primary el-button"
            type="submit"
          >
            <div
              class="mocked-styled-0 el-button-loader"
            />
            Save Changes
          </button>
        </div>
      </div>
    </form>
    <div
>>>>>>> e83ceb437 (fix: RPLT-399 some housekeeping)
      aria-hidden="true"
      class="mocked-styled-146 el-mobile-controls-bg"
    />
    <div
      class="mocked-styled-147 el-mobile-controls"
      id=":r0:"
    >
      <button
        aria-controls=":r0:"
        class="el-floating-button el-intent-primary el-button"
      >
        <div
          class="mocked-styled-0 el-button-loader"
        />
        <span
          class="el-icon-new el-icon"
        >
          <svg
            fill="none"
            height="1em"
            role="img"
            title="Icon image with name menu"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M20 11H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2M4 7h16a1 1 0 1 0 0-2H4a1 1 0 0 0 0 2m16 10H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2"
              fill="currentColor"
            />
          </svg>
        </span>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SettingsPasswordPage should match snapshot for mobile view 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="root"
    >
      <div />
    </div>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <h1
        class="el-text-base el-title"
      >
        Password
<<<<<<< HEAD
      </mock-styled.h1>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
=======
      </h1>
      <form>
        <div
          class="el-form-layout-has-margin el-form-layout"
        >
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <input
                aria-label="Input type password"
                class="mocked-styled-38 el-input"
                id="test-static-id"
                name="password"
                placeholder="Current Password"
                type="password"
              />
              <label
                class="mocked-styled-41 el-label"
                for="test-static-id"
              >
                Current Password
              </label>
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <input
                aria-label="Input type password"
                class="mocked-styled-38 el-input"
                id="test-static-id"
                name="newPassword"
                placeholder="New Password"
                type="password"
              />
              <label
                class="mocked-styled-41 el-label"
                for="test-static-id"
              >
                New Password
              </label>
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <input
                aria-label="Input type password"
                class="mocked-styled-38 el-input"
                id="test-static-id"
                name="confirmPassword"
                placeholder="Confirm New Password"
                type="password"
              />
              <label
                class="mocked-styled-41 el-label"
                for="test-static-id"
              >
                Confirm New Password
              </label>
            </div>
          </div>
        </div>
        <div
          class="mocked-styled-2 el-button-group"
        >
          <div
            class="mocked-styled-3 el-button-group-inner"
          >
            <button
              class="el-intent-primary el-button"
              type="submit"
            >
              <div
                class="mocked-styled-0 el-button-loader"
              />
              Save Changes
            </button>
          </div>
        </div>
      </form>
      <div
>>>>>>> e83ceb437 (fix: RPLT-399 some housekeeping)
        aria-hidden="true"
        class="mocked-styled-146 el-mobile-controls-bg"
      />
      <div
        class="mocked-styled-147 el-mobile-controls"
        id=":r2:"
      >
        <button
          aria-controls=":r2:"
          class="el-floating-button el-intent-primary el-button"
        >
          <div
            class="mocked-styled-0 el-button-loader"
          />
          <span
            class="el-icon-new el-icon"
          >
            <svg
              fill="none"
              height="1em"
              role="img"
              title="Icon image with name menu"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M20 11H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2M4 7h16a1 1 0 1 0 0-2H4a1 1 0 0 0 0 2m16 10H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2"
                fill="currentColor"
              />
            </svg>
          </span>
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <h1
      class="el-text-base el-title"
    >
      Password
<<<<<<< HEAD
    </mock-styled.h1>
    <mock-styled.div
      classname=""
    >
      <mock-styled.div>
        <mock-styled.div />
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div
=======
    </h1>
    <form>
      <div
        class="el-form-layout-has-margin el-form-layout"
      >
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <input
              aria-label="Input type password"
              class="mocked-styled-38 el-input"
              id="test-static-id"
              name="password"
              placeholder="Current Password"
              type="password"
            />
            <label
              class="mocked-styled-41 el-label"
              for="test-static-id"
            >
              Current Password
            </label>
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <input
              aria-label="Input type password"
              class="mocked-styled-38 el-input"
              id="test-static-id"
              name="newPassword"
              placeholder="New Password"
              type="password"
            />
            <label
              class="mocked-styled-41 el-label"
              for="test-static-id"
            >
              New Password
            </label>
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <input
              aria-label="Input type password"
              class="mocked-styled-38 el-input"
              id="test-static-id"
              name="confirmPassword"
              placeholder="Confirm New Password"
              type="password"
            />
            <label
              class="mocked-styled-41 el-label"
              for="test-static-id"
            >
              Confirm New Password
            </label>
          </div>
        </div>
      </div>
      <div
        class="mocked-styled-2 el-button-group"
      >
        <div
          class="mocked-styled-3 el-button-group-inner"
        >
          <button
            class="el-intent-primary el-button"
            type="submit"
          >
            <div
              class="mocked-styled-0 el-button-loader"
            />
            Save Changes
          </button>
        </div>
      </div>
    </form>
    <div
>>>>>>> e83ceb437 (fix: RPLT-399 some housekeeping)
      aria-hidden="true"
      class="mocked-styled-146 el-mobile-controls-bg"
    />
    <div
      class="mocked-styled-147 el-mobile-controls"
      id=":r2:"
    >
      <button
        aria-controls=":r2:"
        class="el-floating-button el-intent-primary el-button"
      >
        <div
          class="mocked-styled-0 el-button-loader"
        />
        <span
          class="el-icon-new el-icon"
        >
          <svg
            fill="none"
            height="1em"
            role="img"
            title="Icon image with name menu"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M20 11H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2M4 7h16a1 1 0 1 0 0-2H4a1 1 0 0 0 0 2m16 10H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2"
              fill="currentColor"
            />
          </svg>
        </span>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
