// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Controls should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.span
        classname="mock-css.
  font-size: 5rem;
"
      >
        <svg />
      </mock-styled.span>
      <mock-styled.h2
        classname=""
      >
        Settings
      </mock-styled.h2>
      <mock-styled.p
        classname="mock-css."
      >
        You can manage the information we hold about you and change your password in these pages.
      </mock-styled.p>
      <mock-styled.p
        classname="mock-css."
      >
        Additionally, as an admin, you can manage your developer organisation, members and subscriptions.
      </mock-styled.p>
      <mock-styled.button
        classname="mock-css. mock-css.
  background-size: 100%;
  background-position-x: -0.5rem;
  padding-right: ,rem;

  &., {
    background-size: 100%;
    background-position-x: center;

    padding-left: ,rem;
    padding-right: ,rem;

    &::after {
      right: -1rem;
    }

    &::before {
      left: -1rem;
    }
  }

  , {
    padding-right: 1.25rem;
  }

  &::after {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    right: 0;
    background-image: url(',');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: right;
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }
"
      >
        Logout
        <mock-styled.div />
      </mock-styled.button>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.span
      classname="mock-css.
  font-size: 5rem;
"
    >
      <svg />
    </mock-styled.span>
    <mock-styled.h2
      classname=""
    >
      Settings
    </mock-styled.h2>
    <mock-styled.p
      classname="mock-css."
    >
      You can manage the information we hold about you and change your password in these pages.
    </mock-styled.p>
    <mock-styled.p
      classname="mock-css."
    >
      Additionally, as an admin, you can manage your developer organisation, members and subscriptions.
    </mock-styled.p>
    <mock-styled.button
      classname="mock-css. mock-css.
  background-size: 100%;
  background-position-x: -0.5rem;
  padding-right: ,rem;

  &., {
    background-size: 100%;
    background-position-x: center;

    padding-left: ,rem;
    padding-right: ,rem;

    &::after {
      right: -1rem;
    }

    &::before {
      left: -1rem;
    }
  }

  , {
    padding-right: 1.25rem;
  }

  &::after {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    right: 0;
    background-image: url(',');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: right;
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }
"
    >
      Logout
      <mock-styled.div />
    </mock-styled.button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Controls should match a snapshot for the members page 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.span
        classname="mock-css.
  font-size: 5rem;
"
      >
        <svg />
      </mock-styled.span>
      <mock-styled.h2
        classname=""
      >
        Settings
      </mock-styled.h2>
      <mock-styled.p
        classname="mock-css."
      >
        You can manage the information we hold about you and change your password in these pages.
      </mock-styled.p>
      <mock-styled.p
        classname="mock-css."
      >
        Additionally, as an admin, you can manage your developer organisation, members and subscriptions.
      </mock-styled.p>
      <mock-styled.button
        classname="mock-css. mock-css.
  background-size: 100%;
  background-position-x: -0.5rem;
  padding-right: ,rem;

  &., {
    background-size: 100%;
    background-position-x: center;

    padding-left: ,rem;
    padding-right: ,rem;

    &::after {
      right: -1rem;
    }

    &::before {
      left: -1rem;
    }
  }

  , {
    padding-right: 1.25rem;
  }

  &::after {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    right: 0;
    background-image: url(',');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: right;
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }
"
      >
        Logout
        <mock-styled.div />
      </mock-styled.button>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.span
      classname="mock-css.
  font-size: 5rem;
"
    >
      <svg />
    </mock-styled.span>
    <mock-styled.h2
      classname=""
    >
      Settings
    </mock-styled.h2>
    <mock-styled.p
      classname="mock-css."
    >
      You can manage the information we hold about you and change your password in these pages.
    </mock-styled.p>
    <mock-styled.p
      classname="mock-css."
    >
      Additionally, as an admin, you can manage your developer organisation, members and subscriptions.
    </mock-styled.p>
    <mock-styled.button
      classname="mock-css. mock-css.
  background-size: 100%;
  background-position-x: -0.5rem;
  padding-right: ,rem;

  &., {
    background-size: 100%;
    background-position-x: center;

    padding-left: ,rem;
    padding-right: ,rem;

    &::after {
      right: -1rem;
    }

    &::before {
      left: -1rem;
    }
  }

  , {
    padding-right: 1.25rem;
  }

  &::after {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    right: 0;
    background-image: url(',');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: right;
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }

  &., {
    &::after {
      background-image: url(',');
    }
  }
"
    >
      Logout
      <mock-styled.div />
    </mock-styled.button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
