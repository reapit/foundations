// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PipelineRow should match snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div
            classname="el-table-cell-has-dark-text"
          >
            <mock-styled.div />
          </mock-styled.div>
          <mock-styled.div
            classname="el-table-cell-has-dark-text"
          >
            <mock-styled.div>
              <mock-styled.span
                classname="el-intent-neutral"
              />
              In Progress
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="el-table-cell-has-dark-text"
          >
            <mock-styled.div>
              <a
                rel="noreferrer"
                target="_blank"
              />
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.span
              classname="el-intent-default el-icon-new"
              role="img"
            >
              <svg
                fill="none"
                height="1em"
                viewBox="0 0 24 24"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M7 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4M19 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4"
                  fill="currentColor"
                />
              </svg>
            </mock-styled.span>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <div
              class="el-flex-container el-flex-justify-center el-flex-align-center"
            >
              <mock-styled.div>
                <mock-styled.div
                  classname=""
                >
                  <mock-styled.button
                    classname="el-intent-primary"
                  >
                    <mock-styled.div />
                    Configure
                  </mock-styled.button>
                  <mock-styled.button
                    classname="el-intent-primary"
                  >
                    <mock-styled.div />
                    Deployments
                  </mock-styled.button>
                  <mock-styled.button
                    classname="el-intent-neutral"
                  >
                    <mock-styled.div />
                    View App
                  </mock-styled.button>
                </mock-styled.div>
              </mock-styled.div>
            </div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname=""
    >
      <mock-styled.div>
        <mock-styled.div
          classname="el-table-cell-has-dark-text"
        >
          <mock-styled.div />
        </mock-styled.div>
        <mock-styled.div
          classname="el-table-cell-has-dark-text"
        >
          <mock-styled.div>
            <mock-styled.span
              classname="el-intent-neutral"
            />
            In Progress
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname="el-table-cell-has-dark-text"
        >
          <mock-styled.div>
            <a
              rel="noreferrer"
              target="_blank"
            />
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.span
            classname="el-intent-default el-icon-new"
            role="img"
          >
            <svg
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M7 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4M19 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <div
            class="el-flex-container el-flex-justify-center el-flex-align-center"
          >
            <mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.button
                  classname="el-intent-primary"
                >
                  <mock-styled.div />
                  Configure
                </mock-styled.button>
                <mock-styled.button
                  classname="el-intent-primary"
                >
                  <mock-styled.div />
                  Deployments
                </mock-styled.button>
                <mock-styled.button
                  classname="el-intent-neutral"
                >
                  <mock-styled.div />
                  View App
                </mock-styled.button>
              </mock-styled.div>
            </mock-styled.div>
          </div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
