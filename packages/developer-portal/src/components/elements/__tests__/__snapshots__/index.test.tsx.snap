// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ElementsPage should match a snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="ecbqyq6-el-snack-holder"
      />
      <div
        class="eoxpwv-el-flex-auto e2kmzjs-el-flex-container"
      >
        <aside
          class="e93m1fg-el-secondary-nav-container"
        >
          <h1
            class="e1byern-el-title"
          >
            UI
          </h1>
          <span
            class="ehvkknk-el-mb5 e143qafr-el-icon-size-large ej9yrfo-el-icon"
          >
            <svg />
          </span>
          <h2
            class="e15ggth7-el-subtitle"
          >
            Reapit Elements
          </h2>
          <p
            class="e11jaxfn-el-has-grey-text elle7d2-el-small-text"
          >
            Elements is a UI toolkit built in React JS, exporting a library of CSS classes to help you build clean, interactive user interfaces for the Reapit Foundations ecosystem. It is based on the Reapit Foundations Design System, our in house styleguide.
          </p>
          <button
            class="ehvkknk-el-mb5 e1fle5tm-el-intent-neutral e1tqqdf9-el-button"
          >
            View Docs
            <div
              class="e1q1vabn-el-button-loader"
            />
          </button>
          <button
            class="ehvkknk-el-mb5 e1iow709-el-intent-critical e1tqqdf9-el-button"
          >
            Storybook
            <div
              class="e1q1vabn-el-button-loader"
            />
          </button>
        </aside>
        <section
          class="e12d7zo5-el-hfull eukst9x-el-page-container"
        >
          <h1
            class="e1byern-el-title"
          >
            Elements
          </h1>
          <iframe
            allow="clipboard-write"
            class="i10jkiq5-iframe-wrapper"
            frameborder="0"
          />
        </section>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="ecbqyq6-el-snack-holder"
    />
    <div
      class="eoxpwv-el-flex-auto e2kmzjs-el-flex-container"
    >
      <aside
        class="e93m1fg-el-secondary-nav-container"
      >
        <h1
          class="e1byern-el-title"
        >
          UI
        </h1>
        <span
          class="ehvkknk-el-mb5 e143qafr-el-icon-size-large ej9yrfo-el-icon"
        >
          <svg />
        </span>
        <h2
          class="e15ggth7-el-subtitle"
        >
          Reapit Elements
        </h2>
        <p
          class="e11jaxfn-el-has-grey-text elle7d2-el-small-text"
        >
          Elements is a UI toolkit built in React JS, exporting a library of CSS classes to help you build clean, interactive user interfaces for the Reapit Foundations ecosystem. It is based on the Reapit Foundations Design System, our in house styleguide.
        </p>
        <button
          class="ehvkknk-el-mb5 e1fle5tm-el-intent-neutral e1tqqdf9-el-button"
        >
          View Docs
          <div
            class="e1q1vabn-el-button-loader"
          />
        </button>
        <button
          class="ehvkknk-el-mb5 e1iow709-el-intent-critical e1tqqdf9-el-button"
        >
          Storybook
          <div
            class="e1q1vabn-el-button-loader"
          />
        </button>
      </aside>
      <section
        class="e12d7zo5-el-hfull eukst9x-el-page-container"
      >
        <h1
          class="e1byern-el-title"
        >
          Elements
        </h1>
        <iframe
          allow="clipboard-write"
          class="i10jkiq5-iframe-wrapper"
          frameborder="0"
        />
      </section>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
