// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OfficesTable should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <div
        class="el-mt5"
      >
        <h2
          class="el-text-base el-subtitle"
        >
          Total Offices
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          1
        </p>
        <div
          class="el-mb11 el-table"
          data-has-expandable-action="false"
          data-num-columns-excl-action-col="2"
        >
          <div
            class="mocked-styled-101 el-table-headers-row"
          >
            <div
              class="mocked-styled-102 el-table-header"
            >
              Office Name
            </div>
            <div
              class="mocked-styled-102 el-table-header"
            >
              Office ID
            </div>
            <div
              class="mocked-styled-102 el-table-header"
            />
          </div>
          <div
            class="mocked-styled-110 el-table-row-container"
          >
            <div
              class="mocked-styled-103 el-table-row"
            >
              <div
                class="el-table-cell-has-dark-text el-table-cell"
              >
                <div
                  class="mocked-styled-111 el-table-cell-content"
                >
                  BAR
                </div>
              </div>
              <div
                class="el-table-cell-has-dark-text el-table-cell"
              >
                <div
                  class="mocked-styled-111 el-table-cell-content"
                >
                  FOO
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <div
      class="el-mt5"
    >
      <h2
        class="el-text-base el-subtitle"
      >
        Total Offices
      </h2>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        1
      </p>
      <div
        class="el-mb11 el-table"
        data-has-expandable-action="false"
        data-num-columns-excl-action-col="2"
      >
        <div
          class="mocked-styled-101 el-table-headers-row"
        >
          <div
            class="mocked-styled-102 el-table-header"
          >
            Office Name
          </div>
          <div
            class="mocked-styled-102 el-table-header"
          >
            Office ID
          </div>
          <div
            class="mocked-styled-102 el-table-header"
          />
        </div>
        <div
          class="mocked-styled-110 el-table-row-container"
        >
          <div
            class="mocked-styled-103 el-table-row"
          >
            <div
              class="el-table-cell-has-dark-text el-table-cell"
            >
              <div
                class="mocked-styled-111 el-table-cell-content"
              >
                BAR
              </div>
            </div>
            <div
              class="el-table-cell-has-dark-text el-table-cell"
            >
              <div
                class="mocked-styled-111 el-table-cell-content"
              >
                FOO
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
