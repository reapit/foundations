// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OfficesTable should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <div
        class="mock-css.
  margin-top: 0.75rem;
"
      >
        <mock-styled.h2
          classname=""
        >
          Total Offices
        </mock-styled.h2>
        <mock-styled.p
          classname="mock-css."
        >
          1
        </mock-styled.p>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 2.5rem;
"
          data-has-expandable-action="false"
          data-num-columns-excl-action-col="2"
        >
          <mock-styled.div>
            <mock-styled.div>
              Office Name
            </mock-styled.div>
            <mock-styled.div>
              Office ID
            </mock-styled.div>
            <mock-styled.div />
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div>
              <mock-styled.div
                classname="mock-css."
              >
                <mock-styled.div>
                  BAR
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="mock-css."
              >
                <mock-styled.div>
                  FOO
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <div
      class="mock-css.
  margin-top: 0.75rem;
"
    >
      <mock-styled.h2
        classname=""
      >
        Total Offices
      </mock-styled.h2>
      <mock-styled.p
        classname="mock-css."
      >
        1
      </mock-styled.p>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 2.5rem;
"
        data-has-expandable-action="false"
        data-num-columns-excl-action-col="2"
      >
        <mock-styled.div>
          <mock-styled.div>
            Office Name
          </mock-styled.div>
          <mock-styled.div>
            Office ID
          </mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.div>
                BAR
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.div>
                FOO
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
