// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DNS Configuration Will show configuration page when dns info is returned 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <div
        class="el-mb6 el-form-layout"
      >
        <div
          class="mocked-styled-135 el-input-wrap-full"
        >
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            We have successfully created the custom domain certificate? As you are using a 'reapit.cloud' domain, we have automatically provided the details to verify/register the certificate to DevOps. Once they have completed the setup, the certificate status will be updated and your domain will be live.
          </p>
        </div>
        <div
          class="mocked-styled-135 el-input-wrap-full"
        >
          <h2
            class="el-text-base el-subtitle"
          >
            Certificate Status
          </h2>
          <div
            class="el-flex-container el-flex-row el-flex-align-center"
          >
            <span
              class="el-intent-default el-status-indicator"
            />
            <p
              style="text-transform: capitalize;"
            >
              pending
            </p>
          </div>
        </div>
        <div
          class="mocked-styled-136 el-input-wrap-half"
        >
          <h2
            class="el-text-base el-subtitle"
          >
            Type
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            CNAME
          </p>
        </div>
        <div
          class="mocked-styled-136 el-input-wrap-half"
        >
          <h2
            class="el-text-base el-subtitle"
          >
            Name
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            https://custom-domain.reapit.cloud
          </p>
        </div>
        <div
          class="mocked-styled-136 el-input-wrap-half"
        >
          <h2
            class="el-text-base el-subtitle"
          >
            Value
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            dfgdfgdfg.cloudfront.com
          </p>
        </div>
      </div>
      <div
        class="el-mb6 el-form-layout"
      >
        <div
          class="mocked-styled-136 el-input-wrap-half"
        >
          <h2
            class="el-text-base el-subtitle"
          >
            Type
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            CNAME
          </p>
        </div>
        <div
          class="mocked-styled-136 el-input-wrap-half"
        >
          <h2
            class="el-text-base el-subtitle"
          >
            Name
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            dns record name
          </p>
        </div>
        <div
          class="mocked-styled-136 el-input-wrap-half"
        >
          <h2
            class="el-text-base el-subtitle"
          >
             Value
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            dns record value
          </p>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <div
      class="el-mb6 el-form-layout"
    >
      <div
        class="mocked-styled-135 el-input-wrap-full"
      >
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          We have successfully created the custom domain certificate? As you are using a 'reapit.cloud' domain, we have automatically provided the details to verify/register the certificate to DevOps. Once they have completed the setup, the certificate status will be updated and your domain will be live.
        </p>
      </div>
      <div
        class="mocked-styled-135 el-input-wrap-full"
      >
        <h2
          class="el-text-base el-subtitle"
        >
          Certificate Status
        </h2>
        <div
          class="el-flex-container el-flex-row el-flex-align-center"
        >
          <span
            class="el-intent-default el-status-indicator"
          />
          <p
            style="text-transform: capitalize;"
          >
            pending
          </p>
        </div>
      </div>
      <div
        class="mocked-styled-136 el-input-wrap-half"
      >
        <h2
          class="el-text-base el-subtitle"
        >
          Type
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          CNAME
        </p>
      </div>
      <div
        class="mocked-styled-136 el-input-wrap-half"
      >
        <h2
          class="el-text-base el-subtitle"
        >
          Name
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          https://custom-domain.reapit.cloud
        </p>
      </div>
      <div
        class="mocked-styled-136 el-input-wrap-half"
      >
        <h2
          class="el-text-base el-subtitle"
        >
          Value
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          dfgdfgdfg.cloudfront.com
        </p>
      </div>
    </div>
    <div
      class="el-mb6 el-form-layout"
    >
      <div
        class="mocked-styled-136 el-input-wrap-half"
      >
        <h2
          class="el-text-base el-subtitle"
        >
          Type
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          CNAME
        </p>
      </div>
      <div
        class="mocked-styled-136 el-input-wrap-half"
      >
        <h2
          class="el-text-base el-subtitle"
        >
          Name
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          dns record name
        </p>
      </div>
      <div
        class="mocked-styled-136 el-input-wrap-half"
      >
        <h2
          class="el-text-base el-subtitle"
        >
           Value
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          dns record value
        </p>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`DNS Configuration Will show setup domain model component 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <div
        class="el-mb6"
      >
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          To use a custom domain, you'll need to start this process by using the button below. Once you've created, you'll need to inform dev ops to configure your DNS with the details provided by the IaaS platform.
        </p>
      </div>
      <button
        class="el-intent-primary el-button"
      >
        <div
          class="mocked-styled-0 el-button-loader"
        />
        Setup Custom DNS
      </button>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <div
      class="el-mb6"
    >
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        To use a custom domain, you'll need to start this process by using the button below. Once you've created, you'll need to inform dev ops to configure your DNS with the details provided by the IaaS platform.
      </p>
    </div>
    <button
      class="el-intent-primary el-button"
    >
      <div
        class="mocked-styled-0 el-button-loader"
      />
      Setup Custom DNS
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
