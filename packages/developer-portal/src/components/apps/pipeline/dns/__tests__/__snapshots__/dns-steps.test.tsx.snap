// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DNS Steps should match snapshot for route four 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <div
        class="el-flex-container el-mb6"
      >
        <div
          class="el-mr2 el-steps"
        >
          <div
            class="el-is-active el-step"
            data-testid="step-0"
            role="button"
            tabindex="0"
          >
            3
          </div>
        </div>
        <div
          class="el-flex-container el-flex-justify-center el-flex-align-center"
        >
          <h2
            class="el-text-base el-subtitle mock-css.
  margin-bottom: 0px !important;
"
          >
            CNAME Record
          </h2>
        </div>
      </div>
      <div
        class="el-mb6"
      >
        <p
          class="el-text-base el-body-text"
        >
          Copy the DNS record value to complete the setup. Once added this setup process is complete and your new domain will be active.
        </p>
      </div>
      <div
        class="mocked-styled-130 el-form-layout"
      >
        <div
          class="mocked-styled-136 el-input-wrap-half"
        >
          <h2
            class="el-text-base el-subtitle"
          >
            Domain
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            test
          </p>
        </div>
        <div
          class="mocked-styled-136 el-input-wrap-half"
        >
          <h2
            class="el-text-base el-subtitle"
          >
            Type
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            CNAME
          </p>
        </div>
        <div
          class="mocked-styled-136 el-input-wrap-half"
        >
          <h2
            class="el-text-base el-subtitle"
          >
            DNS Record Value
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          />
          <button
            class="el-intent-neutral el-button"
          >
            <div
              class="mocked-styled-0 el-button-loader"
            />
            Copy
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <div
      class="el-flex-container el-mb6"
    >
      <div
        class="el-mr2 el-steps"
      >
        <div
          class="el-is-active el-step"
          data-testid="step-0"
          role="button"
          tabindex="0"
        >
          3
        </div>
      </div>
      <div
        class="el-flex-container el-flex-justify-center el-flex-align-center"
      >
        <h2
          class="el-text-base el-subtitle mock-css.
  margin-bottom: 0px !important;
"
        >
          CNAME Record
        </h2>
      </div>
    </div>
    <div
      class="el-mb6"
    >
      <p
        class="el-text-base el-body-text"
      >
        Copy the DNS record value to complete the setup. Once added this setup process is complete and your new domain will be active.
      </p>
    </div>
    <div
      class="mocked-styled-130 el-form-layout"
    >
      <div
        class="mocked-styled-136 el-input-wrap-half"
      >
        <h2
          class="el-text-base el-subtitle"
        >
          Domain
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          test
        </p>
      </div>
      <div
        class="mocked-styled-136 el-input-wrap-half"
      >
        <h2
          class="el-text-base el-subtitle"
        >
          Type
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          CNAME
        </p>
      </div>
      <div
        class="mocked-styled-136 el-input-wrap-half"
      >
        <h2
          class="el-text-base el-subtitle"
        >
          DNS Record Value
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        />
        <button
          class="el-intent-neutral el-button"
        >
          <div
            class="mocked-styled-0 el-button-loader"
          />
          Copy
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`DNS Steps should match snapshot for route one 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <div
        class="el-mb6"
      >
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          To use a custom domain, you'll need to start this process by using the button below. In order to use a custom domain you'll need to complete the following steps
        </p>
      </div>
      <div
        class="el-mb6"
      >
        <p
          class="el-text-base el-body-text"
        >
          1. Verify the domain belongs to you by adding a text record to your DNS
        </p>
        <p
          class="el-text-base el-body-text"
        >
          2. Once verified, we'll create a certificate which will provide you with CNAME record to apply to your DNS
        </p>
        <p
          class="el-text-base el-body-text"
        >
          3. Once the certificate CNAME records are verified. The domain will be applied to your application.
        </p>
      </div>
      <button
        class="el-intent-primary el-button"
      >
        <div
          class="mocked-styled-0 el-button-loader"
        />
        Setup Custom DNS
      </button>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <div
      class="el-mb6"
    >
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        To use a custom domain, you'll need to start this process by using the button below. In order to use a custom domain you'll need to complete the following steps
      </p>
    </div>
    <div
      class="el-mb6"
    >
      <p
        class="el-text-base el-body-text"
      >
        1. Verify the domain belongs to you by adding a text record to your DNS
      </p>
      <p
        class="el-text-base el-body-text"
      >
        2. Once verified, we'll create a certificate which will provide you with CNAME record to apply to your DNS
      </p>
      <p
        class="el-text-base el-body-text"
      >
        3. Once the certificate CNAME records are verified. The domain will be applied to your application.
      </p>
    </div>
    <button
      class="el-intent-primary el-button"
    >
      <div
        class="mocked-styled-0 el-button-loader"
      />
      Setup Custom DNS
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`DNS Steps should match snapshot for route three 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <div
        class="el-flex-container el-mb6"
      >
        <div
          class="el-mr2 el-steps"
        >
          <div
            class="el-is-active el-step"
            data-testid="step-0"
            role="button"
            tabindex="0"
          >
            2
          </div>
        </div>
        <div
          class="el-flex-container el-flex-justify-center el-flex-align-center"
        >
          <h2
            class="el-text-base el-subtitle mock-css.
  margin-bottom: 0px !important;
"
          >
            Certificate Records
          </h2>
        </div>
      </div>
      <div
        class="el-mb6"
      >
        <p
          class="el-text-base el-body-text"
        >
          Domain ownership has been verified.
        </p>
        <p
          class="el-text-base el-body-text"
        >
          Next step is to create a CNAME record by using the details below. Once the status has been updated, you'll be navigated to the next step.
        </p>
        <h2
          class="el-text-base el-subtitle"
        >
          Certificate Status
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          <span
            class="el-intent-default el-status-indicator"
          />
        </p>
      </div>
      <div
        class="el-intent-danger el-is-active el-pn-is-inline el-persistant-notification"
      >
        <div
          class="el-pn-icon"
          data-testid="close-icon"
        >
          <span
            class="el-icon-new el-icon"
          >
            <svg
              fill="none"
              height="1em"
              role="img"
              title="Icon image with name info"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10A10 10 0 0 0 12 2m1.143 15.714h-2.286v-6h2.286zm-1.143-8a1.714 1.714 0 1 1 0-3.428 1.714 1.714 0 0 1 0 3.428"
                fill="currentColor"
              />
            </svg>
          </span>
        </div>
        <div
          class="el-pn-content"
        >
          Unable to fetch certificate verification information
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <div
      class="el-flex-container el-mb6"
    >
      <div
        class="el-mr2 el-steps"
      >
        <div
          class="el-is-active el-step"
          data-testid="step-0"
          role="button"
          tabindex="0"
        >
          2
        </div>
      </div>
      <div
        class="el-flex-container el-flex-justify-center el-flex-align-center"
      >
        <h2
          class="el-text-base el-subtitle mock-css.
  margin-bottom: 0px !important;
"
        >
          Certificate Records
        </h2>
      </div>
    </div>
    <div
      class="el-mb6"
    >
      <p
        class="el-text-base el-body-text"
      >
        Domain ownership has been verified.
      </p>
      <p
        class="el-text-base el-body-text"
      >
        Next step is to create a CNAME record by using the details below. Once the status has been updated, you'll be navigated to the next step.
      </p>
      <h2
        class="el-text-base el-subtitle"
      >
        Certificate Status
      </h2>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        <span
          class="el-intent-default el-status-indicator"
        />
      </p>
    </div>
    <div
      class="el-intent-danger el-is-active el-pn-is-inline el-persistant-notification"
    >
      <div
        class="el-pn-icon"
        data-testid="close-icon"
      >
        <span
          class="el-icon-new el-icon"
        >
          <svg
            fill="none"
            height="1em"
            role="img"
            title="Icon image with name info"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10A10 10 0 0 0 12 2m1.143 15.714h-2.286v-6h2.286zm-1.143-8a1.714 1.714 0 1 1 0-3.428 1.714 1.714 0 0 1 0 3.428"
              fill="currentColor"
            />
          </svg>
        </span>
      </div>
      <div
        class="el-pn-content"
      >
        Unable to fetch certificate verification information
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`DNS Steps should match snapshot for route two 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <div
        class="el-flex-container el-flex-align-center el-mb6"
      >
        <div
          class="el-mr2 el-steps"
        >
          <div
            class="el-is-active el-step"
            data-testid="step-0"
            role="button"
            tabindex="0"
          >
            1
          </div>
        </div>
        <div
          class="el-flex-container el-flex-justify-center el-flex-align-center"
        >
          <h2
            class="el-text-base el-subtitle mock-css.
  margin-bottom: 0px !important;
"
          >
            Verify Domain Ownership
          </h2>
        </div>
      </div>
      <div
        class="el-mb6"
      >
        <p
          class="el-text-base el-body-text"
        >
          Add the below TXT record to your DNS to start the verification process.
        </p>
        <p
          class="el-text-base el-body-text"
        >
          Once you've added the TXT record. This page will periodically check to see if the record exists. Clicking the “Verify Record” button below will also run this validation process. This may take a few attempts as the TTL runs on your domain.
        </p>
      </div>
      <div
        class="el-mb6 el-form-layout"
      >
        <div
          class="mocked-styled-136 el-input-wrap-half"
        >
          <h2
            class="el-text-base el-subtitle"
          >
            Domain
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            test
            .
            test
          </p>
        </div>
        <div
          class="mocked-styled-136 el-input-wrap-half"
        >
          <h2
            class="el-text-base el-subtitle"
          >
            Type
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            TXT
          </p>
        </div>
        <div
          class="mocked-styled-136 el-input-wrap-half"
        >
          <h2
            class="el-text-base el-subtitle"
          >
            Value
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            test
          </p>
          <button
            class="el-intent-neutral el-button"
          >
            <div
              class="mocked-styled-0 el-button-loader"
            />
            Copy
          </button>
        </div>
      </div>
      <div
        class="mocked-styled-2 el-button-group"
      >
        <div
          class="mocked-styled-3 el-button-group-inner"
        >
          <button
            class="el-intent-primary el-button"
          >
            <div
              class="mocked-styled-0 el-button-loader"
            />
            Verify Record
          </button>
          <button
            class="el-intent-primary el-button"
          >
            <div
              class="mocked-styled-0 el-button-loader"
            />
            Edit Domain
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <div
      class="el-flex-container el-flex-align-center el-mb6"
    >
      <div
        class="el-mr2 el-steps"
      >
        <div
          class="el-is-active el-step"
          data-testid="step-0"
          role="button"
          tabindex="0"
        >
          1
        </div>
      </div>
      <div
        class="el-flex-container el-flex-justify-center el-flex-align-center"
      >
        <h2
          class="el-text-base el-subtitle mock-css.
  margin-bottom: 0px !important;
"
        >
          Verify Domain Ownership
        </h2>
      </div>
    </div>
    <div
      class="el-mb6"
    >
      <p
        class="el-text-base el-body-text"
      >
        Add the below TXT record to your DNS to start the verification process.
      </p>
      <p
        class="el-text-base el-body-text"
      >
        Once you've added the TXT record. This page will periodically check to see if the record exists. Clicking the “Verify Record” button below will also run this validation process. This may take a few attempts as the TTL runs on your domain.
      </p>
    </div>
    <div
      class="el-mb6 el-form-layout"
    >
      <div
        class="mocked-styled-136 el-input-wrap-half"
      >
        <h2
          class="el-text-base el-subtitle"
        >
          Domain
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          test
          .
          test
        </p>
      </div>
      <div
        class="mocked-styled-136 el-input-wrap-half"
      >
        <h2
          class="el-text-base el-subtitle"
        >
          Type
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          TXT
        </p>
      </div>
      <div
        class="mocked-styled-136 el-input-wrap-half"
      >
        <h2
          class="el-text-base el-subtitle"
        >
          Value
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          test
        </p>
        <button
          class="el-intent-neutral el-button"
        >
          <div
            class="mocked-styled-0 el-button-loader"
          />
          Copy
        </button>
      </div>
    </div>
    <div
      class="mocked-styled-2 el-button-group"
    >
      <div
        class="mocked-styled-3 el-button-group-inner"
      >
        <button
          class="el-intent-primary el-button"
        >
          <div
            class="mocked-styled-0 el-button-loader"
          />
          Verify Record
        </button>
        <button
          class="el-intent-primary el-button"
        >
          <div
            class="mocked-styled-0 el-button-loader"
          />
          Edit Domain
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
