// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pipelineinfo Should match snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname="mock-css.
  width: 100%;
  justify-content: space-evenly;
"
      >
        <mock-styled.div>
          <mock-styled.input
            id="deployments"
            name="pipeline-tabs"
            type="radio"
            value="deployments"
          />
          <mock-styled.label
            htmlfor="deployments"
          >
            <span
              class="mock-css.
  width: 100%;
  height: 100%;
  text-align: center;
  padding: 0.75rem 0;
  display: flex;
  justify-content: center;
  align-items: center;
  border-bottom: 2px solid var(--color-white);
  white-space: nowrap;
  font-size: var(--font-size-default);
  font-weight: var(--font-weight-medium);
  color: var(--color-grey-500);
"
            >
              Deployments
            </span>
          </mock-styled.label>
          <mock-styled.input
            id="configure"
            name="pipeline-tabs"
            type="radio"
            value="configure"
          />
          <mock-styled.label
            htmlfor="configure"
          >
            <span
              class="mock-css.
  width: 100%;
  height: 100%;
  text-align: center;
  padding: 0.75rem 0;
  display: flex;
  justify-content: center;
  align-items: center;
  border-bottom: 2px solid var(--color-white);
  white-space: nowrap;
  font-size: var(--font-size-default);
  font-weight: var(--font-weight-medium);
  color: var(--color-grey-500);
"
            >
              Configure
            </span>
          </mock-styled.label>
          <mock-styled.input
            id="environment"
            name="pipeline-tabs"
            type="radio"
            value="environment"
          />
          <mock-styled.label
            htmlfor="environment"
          >
            <span
              class="mock-css.
  width: 100%;
  height: 100%;
  text-align: center;
  padding: 0.75rem 0;
  display: flex;
  justify-content: center;
  align-items: center;
  border-bottom: 2px solid var(--color-white);
  white-space: nowrap;
  font-size: var(--font-size-default);
  font-weight: var(--font-weight-medium);
  color: var(--color-grey-500);
"
            >
              Environment Variables
            </span>
          </mock-styled.label>
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  width: 100%;
  justify-content: space-evenly;
"
        />
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 2.5rem;
"
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname="mock-css.
  align-items: center;
"
          >
            <mock-styled.span
              classname="mock-css.
  margin-right: 0.625rem;
 mock-css.
  font-size: 2.5rem;
"
            >
              <svg />
            </mock-styled.span>
            <div>
              <mock-styled.h2
                classname="mock-css."
              >
                Status
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css. mock-css."
              >
                <mock-styled.span
                  classname="mock-css."
                />
                 
                Failed
              </mock-styled.p>
            </div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname="mock-css.
  align-items: center;
"
          >
            <mock-styled.span
              classname="mock-css.
  margin-right: 0.625rem;
 mock-css.
  font-size: 2.5rem;
"
            >
              <svg />
            </mock-styled.span>
            <div>
              <mock-styled.h2
                classname="mock-css."
              >
                Repository
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css. mock-css."
              >
                <mock-styled.span
                  classname="mock-css."
                />
                 
                <a
                  href="https://github.com/bashleigh/reapit-react-test"
                  rel="noreferrer"
                  target="_blank"
                >
                  https://github.com/bashleigh/reapit-react-test
                </a>
              </mock-styled.p>
            </div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname="mock-css.
  align-items: center;
"
          >
            <mock-styled.span
              classname="mock-css.
  margin-right: 0.625rem;
 mock-css.
  font-size: 2.5rem;
"
            >
              <svg />
            </mock-styled.span>
            <div>
              <mock-styled.h2
                classname="mock-css."
              >
                Location
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css. mock-css."
              >
                <a
                  href="https://beautiful-land.iaas.paas.reapit.cloud"
                  rel="noreferrer"
                  target="_blank"
                >
                  https://beautiful-land.iaas.paas.reapit.cloud
                </a>
              </mock-styled.p>
            </div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname="mock-css.
  align-items: center;
"
          >
            <mock-styled.span
              classname="mock-css.
  margin-right: 0.625rem;
 mock-css.
  font-size: 2.5rem;
"
            >
              <svg />
            </mock-styled.span>
            <div>
              <mock-styled.h2
                classname="mock-css."
              >
                Github / Bitbucket App
              </mock-styled.h2>
              <mock-styled.div
                classname=""
              >
                <div
                  class="mock-css.
  margin-right: 0.375rem;
"
                >
                  <mock-styled.span
                    classname="mock-css."
                  />
                </div>
                <mock-styled.p
                  classname="mock-css. mock-css."
                >
                  To deploy from repos, configure either the Reapit
                   
                  <a
                    href="https://github.com/apps/reapit-dev"
                    rel="noreferrer"
                    target="_blank"
                  >
                    Github
                  </a>
                   
                  or
                   
                  <a
                    href="https://bitbucket.org/site/addons/authorize?addon_key=reapit-dev"
                    rel="noreferrer"
                    target="_blank"
                  >
                    Bitbucket
                  </a>
                   
                  app.
                </mock-styled.p>
              </mock-styled.div>
            </div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 2.5rem;
"
      />
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname="mock-css.
  width: 100%;
  justify-content: space-evenly;
"
    >
      <mock-styled.div>
        <mock-styled.input
          id="deployments"
          name="pipeline-tabs"
          type="radio"
          value="deployments"
        />
        <mock-styled.label
          htmlfor="deployments"
        >
          <span
            class="mock-css.
  width: 100%;
  height: 100%;
  text-align: center;
  padding: 0.75rem 0;
  display: flex;
  justify-content: center;
  align-items: center;
  border-bottom: 2px solid var(--color-white);
  white-space: nowrap;
  font-size: var(--font-size-default);
  font-weight: var(--font-weight-medium);
  color: var(--color-grey-500);
"
          >
            Deployments
          </span>
        </mock-styled.label>
        <mock-styled.input
          id="configure"
          name="pipeline-tabs"
          type="radio"
          value="configure"
        />
        <mock-styled.label
          htmlfor="configure"
        >
          <span
            class="mock-css.
  width: 100%;
  height: 100%;
  text-align: center;
  padding: 0.75rem 0;
  display: flex;
  justify-content: center;
  align-items: center;
  border-bottom: 2px solid var(--color-white);
  white-space: nowrap;
  font-size: var(--font-size-default);
  font-weight: var(--font-weight-medium);
  color: var(--color-grey-500);
"
          >
            Configure
          </span>
        </mock-styled.label>
        <mock-styled.input
          id="environment"
          name="pipeline-tabs"
          type="radio"
          value="environment"
        />
        <mock-styled.label
          htmlfor="environment"
        >
          <span
            class="mock-css.
  width: 100%;
  height: 100%;
  text-align: center;
  padding: 0.75rem 0;
  display: flex;
  justify-content: center;
  align-items: center;
  border-bottom: 2px solid var(--color-white);
  white-space: nowrap;
  font-size: var(--font-size-default);
  font-weight: var(--font-weight-medium);
  color: var(--color-grey-500);
"
          >
            Environment Variables
          </span>
        </mock-styled.label>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  width: 100%;
  justify-content: space-evenly;
"
      />
    </mock-styled.div>
    <mock-styled.div
      classname="mock-css.
  margin-bottom: 2.5rem;
"
    >
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname="mock-css.
  align-items: center;
"
        >
          <mock-styled.span
            classname="mock-css.
  margin-right: 0.625rem;
 mock-css.
  font-size: 2.5rem;
"
          >
            <svg />
          </mock-styled.span>
          <div>
            <mock-styled.h2
              classname="mock-css."
            >
              Status
            </mock-styled.h2>
            <mock-styled.p
              classname="mock-css. mock-css."
            >
              <mock-styled.span
                classname="mock-css."
              />
               
              Failed
            </mock-styled.p>
          </div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname="mock-css.
  align-items: center;
"
        >
          <mock-styled.span
            classname="mock-css.
  margin-right: 0.625rem;
 mock-css.
  font-size: 2.5rem;
"
          >
            <svg />
          </mock-styled.span>
          <div>
            <mock-styled.h2
              classname="mock-css."
            >
              Repository
            </mock-styled.h2>
            <mock-styled.p
              classname="mock-css. mock-css."
            >
              <mock-styled.span
                classname="mock-css."
              />
               
              <a
                href="https://github.com/bashleigh/reapit-react-test"
                rel="noreferrer"
                target="_blank"
              >
                https://github.com/bashleigh/reapit-react-test
              </a>
            </mock-styled.p>
          </div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname="mock-css.
  align-items: center;
"
        >
          <mock-styled.span
            classname="mock-css.
  margin-right: 0.625rem;
 mock-css.
  font-size: 2.5rem;
"
          >
            <svg />
          </mock-styled.span>
          <div>
            <mock-styled.h2
              classname="mock-css."
            >
              Location
            </mock-styled.h2>
            <mock-styled.p
              classname="mock-css. mock-css."
            >
              <a
                href="https://beautiful-land.iaas.paas.reapit.cloud"
                rel="noreferrer"
                target="_blank"
              >
                https://beautiful-land.iaas.paas.reapit.cloud
              </a>
            </mock-styled.p>
          </div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname="mock-css.
  align-items: center;
"
        >
          <mock-styled.span
            classname="mock-css.
  margin-right: 0.625rem;
 mock-css.
  font-size: 2.5rem;
"
          >
            <svg />
          </mock-styled.span>
          <div>
            <mock-styled.h2
              classname="mock-css."
            >
              Github / Bitbucket App
            </mock-styled.h2>
            <mock-styled.div
              classname=""
            >
              <div
                class="mock-css.
  margin-right: 0.375rem;
"
              >
                <mock-styled.span
                  classname="mock-css."
                />
              </div>
              <mock-styled.p
                classname="mock-css. mock-css."
              >
                To deploy from repos, configure either the Reapit
                 
                <a
                  href="https://github.com/apps/reapit-dev"
                  rel="noreferrer"
                  target="_blank"
                >
                  Github
                </a>
                 
                or
                 
                <a
                  href="https://bitbucket.org/site/addons/authorize?addon_key=reapit-dev"
                  rel="noreferrer"
                  target="_blank"
                >
                  Bitbucket
                </a>
                 
                app.
              </mock-styled.p>
            </mock-styled.div>
          </div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div
      classname="mock-css.
  margin-bottom: 2.5rem;
"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
