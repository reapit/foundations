// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PipelineDeploymentTable should match snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname="el-mb11"
        data-has-call-to-action="false"
        data-has-expandable-action="true"
        data-num-columns-excl-action-col="5"
        role="table"
      >
        <mock-styled.div
          role="row"
        >
          <mock-styled.div
            aria-label="Release Type"
            role="columnheader"
          >
            Release Type
          </mock-styled.div>
          <mock-styled.div
            aria-label="Created"
            role="columnheader"
          >
            Created
          </mock-styled.div>
          <mock-styled.div
            aria-label="Status"
            role="columnheader"
          >
            Status
          </mock-styled.div>
          <mock-styled.div
            aria-label="Version"
            role="columnheader"
          >
            Version
          </mock-styled.div>
          <mock-styled.div
            aria-label="Currently Deployed"
            role="columnheader"
          >
            Currently Deployed
          </mock-styled.div>
          <mock-styled.div
            role="columnheader"
          >
            <mock-styled.span
              classname="el-intent-default el-icon-new"
              role="img"
            >
              <svg
                fill="none"
                height="1em"
                viewBox="0 0 24 24"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M18.917 12.88c.08-.584.08-1.176 0-1.76l2.06-1.85a1 1 0 0 0 .25-1.27l-1.18-2a1 1 0 0 0-1.19-.45l-2.65.9a7.2 7.2 0 0 0-1.52-.89l-.55-2.76a1 1 0 0 0-1-.8h-2.34a1 1 0 0 0-1 .8l-.53 2.74a7.5 7.5 0 0 0-1.52.89l-2.65-.9a1 1 0 0 0-1.19.47l-1.18 2a1 1 0 0 0 .25 1.27l2.1 1.85a6.5 6.5 0 0 0 0 1.76l-2.1 1.85a1 1 0 0 0-.25 1.27l1.18 2a1 1 0 0 0 1.19.45l2.65-.9c.47.356.98.654 1.52.89l.55 2.74a1 1 0 0 0 1 .8h2.36a1 1 0 0 0 1-.8l.55-2.74a7.2 7.2 0 0 0 1.52-.89l2.65.9a1 1 0 0 0 1.15-.45l1.18-2a1 1 0 0 0-.25-1.27zM11.977 15a3 3 0 1 1 0-6 3 3 0 0 1 0 6"
                  fill="currentColor"
                />
              </svg>
            </mock-styled.span>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
          role="row"
        >
          <mock-styled.div>
            <mock-styled.div
              classname="el-table-cell-has-dark-text"
              role="cell"
            >
              <mock-styled.div
                data-narrow-label="Release Type"
              >
                Unknown
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="el-table-cell-has-dark-text"
              role="cell"
            >
              <mock-styled.div
                data-narrow-label="Created"
              >
                20 Apr 2022 02:30:26
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="el-table-cell-has-dark-text"
              role="cell"
            >
              <mock-styled.div
                data-narrow-label="Status"
              >
                <mock-styled.span
                  classname="el-intent-success"
                />
                Succeeded
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="el-table-cell-has-dark-text"
              role="cell"
            >
              <mock-styled.div
                data-narrow-label="Version"
              />
            </mock-styled.div>
            <mock-styled.div
              classname="el-table-cell-has-dark-text"
              role="cell"
            >
              <mock-styled.div
                data-narrow-label="Currently Deployed"
              >
                Deployed
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
              role="cell"
            >
              <mock-styled.span
                classname="el-intent-default el-icon-new"
                role="img"
              >
                <svg
                  fill="none"
                  height="1em"
                  viewBox="0 0 24 24"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M7 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4M19 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4"
                    fill="currentColor"
                  />
                </svg>
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            aria-hidden="false"
            classname=""
          >
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.div
                  classname="mock-css.
  grid-template-columns: repeat(4, 1fr);
"
                >
                  <mock-styled.div>
                    Task
                  </mock-styled.div>
                  <mock-styled.div>
                    Status
                  </mock-styled.div>
                  <mock-styled.div>
                    Started
                  </mock-styled.div>
                  <mock-styled.div>
                    Finished
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="mock-css.
  grid-template-columns: repeat(4, 1fr);
"
                >
                  <mock-styled.div
                    classname="el-table-cell-has-dark-text"
                  >
                    <mock-styled.div>
                      Download Source
                    </mock-styled.div>
                  </mock-styled.div>
                  <mock-styled.div
                    classname="el-table-cell-has-dark-text"
                  >
                    <mock-styled.div>
                      <mock-styled.span
                        classname="el-intent-success"
                      />
                      Succeeded
                    </mock-styled.div>
                  </mock-styled.div>
                  <mock-styled.div
                    classname="el-table-cell-has-dark-text"
                  >
                    <mock-styled.div>
                      -
                    </mock-styled.div>
                  </mock-styled.div>
                  <mock-styled.div
                    classname="el-table-cell-has-dark-text"
                  >
                    <mock-styled.div>
                      -
                    </mock-styled.div>
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="mock-css.
  grid-template-columns: repeat(4, 1fr);
"
                >
                  <mock-styled.div
                    classname="el-table-cell-has-dark-text"
                  >
                    <mock-styled.div>
                      Install
                    </mock-styled.div>
                  </mock-styled.div>
                  <mock-styled.div
                    classname="el-table-cell-has-dark-text"
                  >
                    <mock-styled.div>
                      <mock-styled.span
                        classname="el-intent-success"
                      />
                      Succeeded
                    </mock-styled.div>
                  </mock-styled.div>
                  <mock-styled.div
                    classname="el-table-cell-has-dark-text"
                  >
                    <mock-styled.div>
                      -
                    </mock-styled.div>
                  </mock-styled.div>
                  <mock-styled.div
                    classname="el-table-cell-has-dark-text"
                  >
                    <mock-styled.div>
                      -
                    </mock-styled.div>
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="mock-css.
  grid-template-columns: repeat(4, 1fr);
"
                >
                  <mock-styled.div
                    classname="el-table-cell-has-dark-text"
                  >
                    <mock-styled.div>
                      Build
                    </mock-styled.div>
                  </mock-styled.div>
                  <mock-styled.div
                    classname="el-table-cell-has-dark-text"
                  >
                    <mock-styled.div>
                      <mock-styled.span
                        classname="el-intent-success"
                      />
                      Succeeded
                    </mock-styled.div>
                  </mock-styled.div>
                  <mock-styled.div
                    classname="el-table-cell-has-dark-text"
                  >
                    <mock-styled.div>
                      -
                    </mock-styled.div>
                  </mock-styled.div>
                  <mock-styled.div
                    classname="el-table-cell-has-dark-text"
                  >
                    <mock-styled.div>
                      -
                    </mock-styled.div>
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="mock-css.
  grid-template-columns: repeat(4, 1fr);
"
                >
                  <mock-styled.div
                    classname="el-table-cell-has-dark-text"
                  >
                    <mock-styled.div>
                      Deploy
                    </mock-styled.div>
                  </mock-styled.div>
                  <mock-styled.div
                    classname="el-table-cell-has-dark-text"
                  >
                    <mock-styled.div>
                      <mock-styled.span
                        classname="el-intent-success"
                      />
                      Succeeded
                    </mock-styled.div>
                  </mock-styled.div>
                  <mock-styled.div
                    classname="el-table-cell-has-dark-text"
                  >
                    <mock-styled.div>
                      -
                    </mock-styled.div>
                  </mock-styled.div>
                  <mock-styled.div
                    classname="el-table-cell-has-dark-text"
                  >
                    <mock-styled.div>
                      -
                    </mock-styled.div>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
              <div
                class="el-mt6"
              >
                <mock-styled.button
                  classname="el-intent-primary"
                  disabled="true"
                >
                  <mock-styled.div />
                  Logs Expired
                </mock-styled.button>
              </div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.button
          aria-label="Previous"
          data-testid="back-button"
          role="button"
          type="button"
        >
          <mock-styled.span
            classname="el-icon-new"
            role="img"
          >
            <svg
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M15.496 20.004a1 1 0 0 1-.71-.29l-6.99-7a1 1 0 0 1 0-1.42l6.99-7a1.002 1.002 0 0 1 1.678.45c.093.347-.006.716-.26.97l-6.291 6.29 6.292 6.29a1 1 0 0 1-.71 1.71"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
        </mock-styled.button>
        <mock-styled.div>
          <mock-styled.input
            value="1"
          />
           of 
          1
        </mock-styled.div>
        <mock-styled.button
          aria-label="Next"
          data-testid="forward-button"
          role="button"
          type="button"
        >
          <mock-styled.span
            classname="el-icon-new"
            role="img"
          >
            <svg
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M8.505 20.004a1 1 0 0 1-1.005-1 1 1 0 0 1 .295-.71l6.292-6.29-6.292-6.29a1.005 1.005 0 0 1 0-1.42 1 1 0 0 1 1.419 0l6.99 7a1 1 0 0 1 0 1.42l-6.99 7a1 1 0 0 1-.71.29"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
        </mock-styled.button>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname="el-mb11"
      data-has-call-to-action="false"
      data-has-expandable-action="true"
      data-num-columns-excl-action-col="5"
      role="table"
    >
      <mock-styled.div
        role="row"
      >
        <mock-styled.div
          aria-label="Release Type"
          role="columnheader"
        >
          Release Type
        </mock-styled.div>
        <mock-styled.div
          aria-label="Created"
          role="columnheader"
        >
          Created
        </mock-styled.div>
        <mock-styled.div
          aria-label="Status"
          role="columnheader"
        >
          Status
        </mock-styled.div>
        <mock-styled.div
          aria-label="Version"
          role="columnheader"
        >
          Version
        </mock-styled.div>
        <mock-styled.div
          aria-label="Currently Deployed"
          role="columnheader"
        >
          Currently Deployed
        </mock-styled.div>
        <mock-styled.div
          role="columnheader"
        >
          <mock-styled.span
            classname="el-intent-default el-icon-new"
            role="img"
          >
            <svg
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M18.917 12.88c.08-.584.08-1.176 0-1.76l2.06-1.85a1 1 0 0 0 .25-1.27l-1.18-2a1 1 0 0 0-1.19-.45l-2.65.9a7.2 7.2 0 0 0-1.52-.89l-.55-2.76a1 1 0 0 0-1-.8h-2.34a1 1 0 0 0-1 .8l-.53 2.74a7.5 7.5 0 0 0-1.52.89l-2.65-.9a1 1 0 0 0-1.19.47l-1.18 2a1 1 0 0 0 .25 1.27l2.1 1.85a6.5 6.5 0 0 0 0 1.76l-2.1 1.85a1 1 0 0 0-.25 1.27l1.18 2a1 1 0 0 0 1.19.45l2.65-.9c.47.356.98.654 1.52.89l.55 2.74a1 1 0 0 0 1 .8h2.36a1 1 0 0 0 1-.8l.55-2.74a7.2 7.2 0 0 0 1.52-.89l2.65.9a1 1 0 0 0 1.15-.45l1.18-2a1 1 0 0 0-.25-1.27zM11.977 15a3 3 0 1 1 0-6 3 3 0 0 1 0 6"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
        role="row"
      >
        <mock-styled.div>
          <mock-styled.div
            classname="el-table-cell-has-dark-text"
            role="cell"
          >
            <mock-styled.div
              data-narrow-label="Release Type"
            >
              Unknown
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="el-table-cell-has-dark-text"
            role="cell"
          >
            <mock-styled.div
              data-narrow-label="Created"
            >
              20 Apr 2022 02:30:26
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="el-table-cell-has-dark-text"
            role="cell"
          >
            <mock-styled.div
              data-narrow-label="Status"
            >
              <mock-styled.span
                classname="el-intent-success"
              />
              Succeeded
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="el-table-cell-has-dark-text"
            role="cell"
          >
            <mock-styled.div
              data-narrow-label="Version"
            />
          </mock-styled.div>
          <mock-styled.div
            classname="el-table-cell-has-dark-text"
            role="cell"
          >
            <mock-styled.div
              data-narrow-label="Currently Deployed"
            >
              Deployed
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
            role="cell"
          >
            <mock-styled.span
              classname="el-intent-default el-icon-new"
              role="img"
            >
              <svg
                fill="none"
                height="1em"
                viewBox="0 0 24 24"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M7 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4M19 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4"
                  fill="currentColor"
                />
              </svg>
            </mock-styled.span>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          aria-hidden="false"
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.div
                classname="mock-css.
  grid-template-columns: repeat(4, 1fr);
"
              >
                <mock-styled.div>
                  Task
                </mock-styled.div>
                <mock-styled.div>
                  Status
                </mock-styled.div>
                <mock-styled.div>
                  Started
                </mock-styled.div>
                <mock-styled.div>
                  Finished
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="mock-css.
  grid-template-columns: repeat(4, 1fr);
"
              >
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                >
                  <mock-styled.div>
                    Download Source
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                >
                  <mock-styled.div>
                    <mock-styled.span
                      classname="el-intent-success"
                    />
                    Succeeded
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                >
                  <mock-styled.div>
                    -
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                >
                  <mock-styled.div>
                    -
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="mock-css.
  grid-template-columns: repeat(4, 1fr);
"
              >
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                >
                  <mock-styled.div>
                    Install
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                >
                  <mock-styled.div>
                    <mock-styled.span
                      classname="el-intent-success"
                    />
                    Succeeded
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                >
                  <mock-styled.div>
                    -
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                >
                  <mock-styled.div>
                    -
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="mock-css.
  grid-template-columns: repeat(4, 1fr);
"
              >
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                >
                  <mock-styled.div>
                    Build
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                >
                  <mock-styled.div>
                    <mock-styled.span
                      classname="el-intent-success"
                    />
                    Succeeded
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                >
                  <mock-styled.div>
                    -
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                >
                  <mock-styled.div>
                    -
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="mock-css.
  grid-template-columns: repeat(4, 1fr);
"
              >
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                >
                  <mock-styled.div>
                    Deploy
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                >
                  <mock-styled.div>
                    <mock-styled.span
                      classname="el-intent-success"
                    />
                    Succeeded
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                >
                  <mock-styled.div>
                    -
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                >
                  <mock-styled.div>
                    -
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <div
              class="el-mt6"
            >
              <mock-styled.button
                classname="el-intent-primary"
                disabled="true"
              >
                <mock-styled.div />
                Logs Expired
              </mock-styled.button>
            </div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div>
      <mock-styled.button
        aria-label="Previous"
        data-testid="back-button"
        role="button"
        type="button"
      >
        <mock-styled.span
          classname="el-icon-new"
          role="img"
        >
          <svg
            fill="none"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M15.496 20.004a1 1 0 0 1-.71-.29l-6.99-7a1 1 0 0 1 0-1.42l6.99-7a1.002 1.002 0 0 1 1.678.45c.093.347-.006.716-.26.97l-6.291 6.29 6.292 6.29a1 1 0 0 1-.71 1.71"
              fill="currentColor"
            />
          </svg>
        </mock-styled.span>
      </mock-styled.button>
      <mock-styled.div>
        <mock-styled.input
          value="1"
        />
         of 
        1
      </mock-styled.div>
      <mock-styled.button
        aria-label="Next"
        data-testid="forward-button"
        role="button"
        type="button"
      >
        <mock-styled.span
          classname="el-icon-new"
          role="img"
        >
          <svg
            fill="none"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.505 20.004a1 1 0 0 1-1.005-1 1 1 0 0 1 .295-.71l6.292-6.29-6.292-6.29a1.005 1.005 0 0 1 0-1.42 1 1 0 0 1 1.419 0l6.99 7a1 1 0 0 1 0 1.42l-6.99 7a1 1 0 0 1-.71.29"
              fill="currentColor"
            />
          </svg>
        </mock-styled.span>
      </mock-styled.button>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`PipelineDeploymentTable should match snapshot when loading 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname=""
    >
      <mock-styled.div>
        <mock-styled.div />
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
