// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ApiKeys should match snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        Manage your API keys here for use with the Reapit CLI tool. The CLI allows you to deploy your application as a zip folder from a local build on the command line, rather than having to grant access to your private repos.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        You only need an API key to use the Reapit CLI. If you prefer to use the web UI to manage your deployments, you can pass on this page.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        For more on the Reapit CLI visit 
        <a>
          the docs here.
        </a>
      </p>
      <div
        class="el-mb11 el-table"
        data-has-call-to-action="true"
        data-has-expandable-action="false"
        data-num-columns-excl-action-col="2"
        role="table"
      >
        <div
          class="mocked-styled-101 el-table-headers-row"
          role="row"
        >
          <div
            aria-label="API Key"
            class="mocked-styled-102 el-table-header"
            role="columnheader"
          >
            API Key
          </div>
          <div
            aria-label="Expires"
            class="mocked-styled-102 el-table-header"
            role="columnheader"
          >
            Expires
          </div>
          <div
            class="mocked-styled-102 el-table-header"
            role="columnheader"
          >
            Delete Key
          </div>
        </div>
        <div
          class="mocked-styled-110 el-table-row-container"
          role="row"
        >
          <div
            class="mocked-styled-103 el-table-row"
          >
            <div
              class="el-table-cell-has-dark-text el-table-cell"
              role="cell"
            >
              <div
                class="mocked-styled-111 el-table-cell-content"
                data-narrow-label="API Key"
              >
                <div
                  class="el-flex-container"
                >
                  <span
                    class="el-mr3"
                  >
                    MOCK_KEY
                  </span>
                  <button
                    class="el-intent-neutral el-button"
                  >
                    <div
                      class="mocked-styled-0 el-button-loader"
                    />
                    Copy
                  </button>
                </div>
              </div>
            </div>
            <div
              class="el-table-cell-has-dark-text el-table-cell"
              role="cell"
            >
              <div
                class="mocked-styled-111 el-table-cell-content"
                data-narrow-label="Expires"
              >
                25 Apr 2023 04:28:25
              </div>
            </div>
            <div
              class="mocked-styled-104 el-table-cta-cell"
              role="cell"
              tabindex="0"
            >
              <div
                class="mocked-styled-112 el-table-cta-icon-container"
              >
                <span
                  class="el-intent-default el-icon-new el-icon"
                >
                  <svg
                    fill="none"
                    height="1em"
                    role="img"
                    title="Icon image with name trash"
                    viewBox="0 0 24 24"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M9 11a1 1 0 1 1 2 0v6a1 1 0 1 1-2 0zM13 11a1 1 0 1 1 2 0v6a1 1 0 1 1-2 0z"
                      fill="currentColor"
                    />
                    <path
                      clip-rule="evenodd"
                      d="M18 5h3a1 1 0 1 1 0 2h-.06l-.69 11.31a5 5 0 0 1-5 4.69H8.77a5 5 0 0 1-5-4.69L3.06 7H3a1 1 0 1 1 0-2h3V4a3 3 0 0 1 3-3h6a3 3 0 0 1 3 3zM9 3a1 1 0 0 0-1 1v1h8V4a1 1 0 0 0-1-1zm6.24 18a3 3 0 0 0 3-2.81L18.94 7H5.06l.7 11.19a3 3 0 0 0 3 2.81z"
                      fill="currentColor"
                      fill-rule="evenodd"
                    />
                  </svg>
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        class="mocked-styled-2 el-button-group"
      >
        <div
          class="el-button-group-align-right el-button-group-inner"
        >
          <button
            class="el-intent-neutral el-button"
          >
            <div
              class="mocked-styled-0 el-button-loader"
            />
            Close
          </button>
          <button
            class="el-intent-primary el-button"
          >
            <div
              class="mocked-styled-0 el-button-loader"
            />
            Create API Key
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      Manage your API keys here for use with the Reapit CLI tool. The CLI allows you to deploy your application as a zip folder from a local build on the command line, rather than having to grant access to your private repos.
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      You only need an API key to use the Reapit CLI. If you prefer to use the web UI to manage your deployments, you can pass on this page.
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      For more on the Reapit CLI visit 
      <a>
        the docs here.
      </a>
    </p>
    <div
      class="el-mb11 el-table"
      data-has-call-to-action="true"
      data-has-expandable-action="false"
      data-num-columns-excl-action-col="2"
      role="table"
    >
      <div
        class="mocked-styled-101 el-table-headers-row"
        role="row"
      >
        <div
          aria-label="API Key"
          class="mocked-styled-102 el-table-header"
          role="columnheader"
        >
          API Key
        </div>
        <div
          aria-label="Expires"
          class="mocked-styled-102 el-table-header"
          role="columnheader"
        >
          Expires
        </div>
        <div
          class="mocked-styled-102 el-table-header"
          role="columnheader"
        >
          Delete Key
        </div>
      </div>
      <div
        class="mocked-styled-110 el-table-row-container"
        role="row"
      >
        <div
          class="mocked-styled-103 el-table-row"
        >
          <div
            class="el-table-cell-has-dark-text el-table-cell"
            role="cell"
          >
            <div
              class="mocked-styled-111 el-table-cell-content"
              data-narrow-label="API Key"
            >
              <div
                class="el-flex-container"
              >
                <span
                  class="el-mr3"
                >
                  MOCK_KEY
                </span>
                <button
                  class="el-intent-neutral el-button"
                >
                  <div
                    class="mocked-styled-0 el-button-loader"
                  />
                  Copy
                </button>
              </div>
            </div>
          </div>
          <div
            class="el-table-cell-has-dark-text el-table-cell"
            role="cell"
          >
            <div
              class="mocked-styled-111 el-table-cell-content"
              data-narrow-label="Expires"
            >
              25 Apr 2023 04:28:25
            </div>
          </div>
          <div
            class="mocked-styled-104 el-table-cta-cell"
            role="cell"
            tabindex="0"
          >
            <div
              class="mocked-styled-112 el-table-cta-icon-container"
            >
              <span
                class="el-intent-default el-icon-new el-icon"
              >
                <svg
                  fill="none"
                  height="1em"
                  role="img"
                  title="Icon image with name trash"
                  viewBox="0 0 24 24"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M9 11a1 1 0 1 1 2 0v6a1 1 0 1 1-2 0zM13 11a1 1 0 1 1 2 0v6a1 1 0 1 1-2 0z"
                    fill="currentColor"
                  />
                  <path
                    clip-rule="evenodd"
                    d="M18 5h3a1 1 0 1 1 0 2h-.06l-.69 11.31a5 5 0 0 1-5 4.69H8.77a5 5 0 0 1-5-4.69L3.06 7H3a1 1 0 1 1 0-2h3V4a3 3 0 0 1 3-3h6a3 3 0 0 1 3 3zM9 3a1 1 0 0 0-1 1v1h8V4a1 1 0 0 0-1-1zm6.24 18a3 3 0 0 0 3-2.81L18.94 7H5.06l.7 11.19a3 3 0 0 0 3 2.81z"
                    fill="currentColor"
                    fill-rule="evenodd"
                  />
                </svg>
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      class="mocked-styled-2 el-button-group"
    >
      <div
        class="el-button-group-align-right el-button-group-inner"
      >
        <button
          class="el-intent-neutral el-button"
        >
          <div
            class="mocked-styled-0 el-button-loader"
          />
          Close
        </button>
        <button
          class="el-intent-primary el-button"
        >
          <div
            class="mocked-styled-0 el-button-loader"
          />
          Create API Key
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
