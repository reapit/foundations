// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PipelineNew Should match snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <h1
        class="el-text-base el-title"
      >
        New Pipeline
      </h1>
      <div
        class="el-tabs-full-width el-tabs-wrap"
      >
        <div
          class="mocked-styled-120 el-tabs-options-wrap"
          role="tablist"
        >
          <input
            aria-selected="true"
            checked=""
            class="mocked-styled-117 el-tabs"
            id="deployments"
            name="pipeline-tabs"
            type="radio"
            value="deployments"
          />
          <label
            class="mocked-styled-118 el-tabs-label"
            for="deployments"
            role="tab"
            tabindex="0"
          >
            <span
              class="el-tabs-item"
            >
              Deployments
            </span>
          </label>
          <input
            aria-selected="false"
            class="mocked-styled-117 el-tabs"
            id="configure"
            name="pipeline-tabs"
            type="radio"
            value="configure"
          />
          <label
            class="mocked-styled-118 el-tabs-label"
            for="configure"
            role="tab"
            tabindex="0"
          >
            <span
              class="el-tabs-item"
            >
              Configure
            </span>
          </label>
          <input
            aria-selected="false"
            class="mocked-styled-117 el-tabs"
            id="environment"
            name="pipeline-tabs"
            type="radio"
            value="environment"
          />
          <label
            class="mocked-styled-118 el-tabs-label"
            for="environment"
            role="tab"
            tabindex="0"
          >
            <span
              class="el-tabs-item"
            >
              Environment Variables
            </span>
          </label>
          <input
            aria-selected="false"
            class="mocked-styled-117 el-tabs"
            id="DNS"
            name="pipeline-tabs"
            type="radio"
            value="DNS"
          />
          <label
            class="mocked-styled-118 el-tabs-label"
            for="DNS"
            role="tab"
            tabindex="0"
          >
            <span
              class="el-tabs-item"
            >
              Custom DNS
            </span>
          </label>
        </div>
        <div
          class="el-tabs-full-width el-tabs-footer"
        />
      </div>
      <p
        class="el-text-base el-body-text el-has-grey-text el-has-section-margin"
      >
        Setup the configuration below so that the pipeline knows how to build your application. The pipeline assumes that your application is a frontend application that uses either yarn or npm to run scripts declared in a package.json file. It also assumes that your application is bundled, and that the bundle is output to a local directory from which it can be deployed.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        <strong>
          Deployment Branch
        </strong>
         is the branch from which push events will trigger a new deployment. typically main or master.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        <strong>
          Build Command
        </strong>
         will be executed to prepare the application bundle, and should match the appropriate script in package.json.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text el-has-section-margin"
      >
        <strong>
          Build Directory
        </strong>
         is the directory from which the bundle will be deployed, typically build or dist.
      </p>
      <form>
        <div
          class="el-form-layout-has-margin el-form-layout"
        >
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Name
              </label>
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                name="name"
              />
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Deployment Branch
              </label>
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                name="branch"
              />
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Github Repository
              </label>
              <mock-styled.div>
                https://github.com/bashleigh/reapit-react-test
              </mock-styled.div>
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Package Manager
              </label>
              <select
                aria-label="Select an item from the dropdown list"
                class="mocked-styled-83 el-select"
                id="package-manager-select"
                name="packageManager"
              >
                <option
                  value="npm"
                >
                  NPM
                </option>
                <option
                  value="yarn"
                >
                  YARN
                </option>
                <option
                  value="yarn-berry"
                >
                  YARN BERRY
                </option>
              </select>
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Build Command
              </label>
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                name="buildCommand"
              />
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Build Directory
              </label>
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                name="outDir"
              />
            </div>
          </div>
        </div>
      </form>
      <div
        aria-hidden="true"
        class="mocked-styled-146 el-mobile-controls-bg"
      />
      <div
        class="mocked-styled-147 el-mobile-controls"
        id=":r2:"
      >
        <button
          aria-controls=":r2:"
          class="el-floating-button el-intent-primary el-button"
        >
          <div
            class="mocked-styled-0 el-button-loader"
          />
          <span
            class="el-icon-new el-icon"
          >
            <svg
              fill="none"
              height="1em"
              role="img"
              title="Icon image with name menu"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M20 11H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2M4 7h16a1 1 0 1 0 0-2H4a1 1 0 0 0 0 2m16 10H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2"
                fill="currentColor"
              />
            </svg>
          </span>
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <h1
      class="el-text-base el-title"
    >
      New Pipeline
    </h1>
    <div
      class="el-tabs-full-width el-tabs-wrap"
    >
      <div
        class="mocked-styled-120 el-tabs-options-wrap"
        role="tablist"
      >
        <input
          aria-selected="true"
          checked=""
          class="mocked-styled-117 el-tabs"
          id="deployments"
          name="pipeline-tabs"
          type="radio"
          value="deployments"
        />
        <label
          class="mocked-styled-118 el-tabs-label"
          for="deployments"
          role="tab"
          tabindex="0"
        >
          <span
            class="el-tabs-item"
          >
            Deployments
          </span>
        </label>
        <input
          aria-selected="false"
          class="mocked-styled-117 el-tabs"
          id="configure"
          name="pipeline-tabs"
          type="radio"
          value="configure"
        />
        <label
          class="mocked-styled-118 el-tabs-label"
          for="configure"
          role="tab"
          tabindex="0"
        >
          <span
            class="el-tabs-item"
          >
            Configure
          </span>
        </label>
        <input
          aria-selected="false"
          class="mocked-styled-117 el-tabs"
          id="environment"
          name="pipeline-tabs"
          type="radio"
          value="environment"
        />
        <label
          class="mocked-styled-118 el-tabs-label"
          for="environment"
          role="tab"
          tabindex="0"
        >
          <span
            class="el-tabs-item"
          >
            Environment Variables
          </span>
        </label>
        <input
          aria-selected="false"
          class="mocked-styled-117 el-tabs"
          id="DNS"
          name="pipeline-tabs"
          type="radio"
          value="DNS"
        />
        <label
          class="mocked-styled-118 el-tabs-label"
          for="DNS"
          role="tab"
          tabindex="0"
        >
          <span
            class="el-tabs-item"
          >
            Custom DNS
          </span>
        </label>
      </div>
      <div
        class="el-tabs-full-width el-tabs-footer"
      />
    </div>
    <p
      class="el-text-base el-body-text el-has-grey-text el-has-section-margin"
    >
      Setup the configuration below so that the pipeline knows how to build your application. The pipeline assumes that your application is a frontend application that uses either yarn or npm to run scripts declared in a package.json file. It also assumes that your application is bundled, and that the bundle is output to a local directory from which it can be deployed.
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      <strong>
        Deployment Branch
      </strong>
       is the branch from which push events will trigger a new deployment. typically main or master.
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      <strong>
        Build Command
      </strong>
       will be executed to prepare the application bundle, and should match the appropriate script in package.json.
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text el-has-section-margin"
    >
      <strong>
        Build Directory
      </strong>
       is the directory from which the bundle will be deployed, typically build or dist.
    </p>
    <form>
      <div
        class="el-form-layout-has-margin el-form-layout"
      >
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Name
            </label>
            <input
              aria-label="Input type undefined"
              class="mocked-styled-38 el-input"
              name="name"
            />
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Deployment Branch
            </label>
            <input
              aria-label="Input type undefined"
              class="mocked-styled-38 el-input"
              name="branch"
            />
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Github Repository
            </label>
            <mock-styled.div>
              https://github.com/bashleigh/reapit-react-test
            </mock-styled.div>
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Package Manager
            </label>
            <select
              aria-label="Select an item from the dropdown list"
              class="mocked-styled-83 el-select"
              id="package-manager-select"
              name="packageManager"
            >
              <option
                value="npm"
              >
                NPM
              </option>
              <option
                value="yarn"
              >
                YARN
              </option>
              <option
                value="yarn-berry"
              >
                YARN BERRY
              </option>
            </select>
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Build Command
            </label>
            <input
              aria-label="Input type undefined"
              class="mocked-styled-38 el-input"
              name="buildCommand"
            />
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Build Directory
            </label>
            <input
              aria-label="Input type undefined"
              class="mocked-styled-38 el-input"
              name="outDir"
            />
          </div>
        </div>
      </div>
    </form>
    <div
      aria-hidden="true"
      class="mocked-styled-146 el-mobile-controls-bg"
    />
    <div
      class="mocked-styled-147 el-mobile-controls"
      id=":r2:"
    >
      <button
        aria-controls=":r2:"
        class="el-floating-button el-intent-primary el-button"
      >
        <div
          class="mocked-styled-0 el-button-loader"
        />
        <span
          class="el-icon-new el-icon"
        >
          <svg
            fill="none"
            height="1em"
            role="img"
            title="Icon image with name menu"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M20 11H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2M4 7h16a1 1 0 1 0 0-2H4a1 1 0 0 0 0 2m16 10H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2"
              fill="currentColor"
            />
          </svg>
        </span>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`PipelineNew should match snapshot for mobile view 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="root"
    >
      <div />
    </div>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <h1
        class="el-text-base el-title"
      >
        New Pipeline
      </h1>
      <div
        class="el-tabs-full-width el-tabs-wrap"
      >
        <div
          class="mocked-styled-120 el-tabs-options-wrap"
          role="tablist"
        >
          <input
            aria-selected="true"
            checked=""
            class="mocked-styled-117 el-tabs"
            id="deployments"
            name="pipeline-tabs"
            type="radio"
            value="deployments"
          />
          <label
            class="mocked-styled-118 el-tabs-label"
            for="deployments"
            role="tab"
            tabindex="0"
          >
            <span
              class="el-tabs-item"
            >
              Deployments
            </span>
          </label>
          <input
            aria-selected="false"
            class="mocked-styled-117 el-tabs"
            id="configure"
            name="pipeline-tabs"
            type="radio"
            value="configure"
          />
          <label
            class="mocked-styled-118 el-tabs-label"
            for="configure"
            role="tab"
            tabindex="0"
          >
            <span
              class="el-tabs-item"
            >
              Configure
            </span>
          </label>
          <input
            aria-selected="false"
            class="mocked-styled-117 el-tabs"
            id="environment"
            name="pipeline-tabs"
            type="radio"
            value="environment"
          />
          <label
            class="mocked-styled-118 el-tabs-label"
            for="environment"
            role="tab"
            tabindex="0"
          >
            <span
              class="el-tabs-item"
            >
              Environment Variables
            </span>
          </label>
          <input
            aria-selected="false"
            class="mocked-styled-117 el-tabs"
            id="DNS"
            name="pipeline-tabs"
            type="radio"
            value="DNS"
          />
          <label
            class="mocked-styled-118 el-tabs-label"
            for="DNS"
            role="tab"
            tabindex="0"
          >
            <span
              class="el-tabs-item"
            >
              Custom DNS
            </span>
          </label>
        </div>
        <div
          class="el-tabs-full-width el-tabs-footer"
        />
      </div>
      <p
        class="el-text-base el-body-text el-has-grey-text el-has-section-margin"
      >
        Setup the configuration below so that the pipeline knows how to build your application. The pipeline assumes that your application is a frontend application that uses either yarn or npm to run scripts declared in a package.json file. It also assumes that your application is bundled, and that the bundle is output to a local directory from which it can be deployed.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        <strong>
          Deployment Branch
        </strong>
         is the branch from which push events will trigger a new deployment. typically main or master.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        <strong>
          Build Command
        </strong>
         will be executed to prepare the application bundle, and should match the appropriate script in package.json.
      </p>
      <p
        class="el-text-base el-body-text el-has-grey-text el-has-section-margin"
      >
        <strong>
          Build Directory
        </strong>
         is the directory from which the bundle will be deployed, typically build or dist.
      </p>
      <form>
        <div
          class="el-form-layout-has-margin el-form-layout"
        >
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Name
              </label>
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                name="name"
              />
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Deployment Branch
              </label>
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                name="branch"
              />
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Github Repository
              </label>
              <mock-styled.div>
                https://github.com/bashleigh/reapit-react-test
              </mock-styled.div>
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Package Manager
              </label>
              <select
                aria-label="Select an item from the dropdown list"
                class="mocked-styled-83 el-select"
                id="package-manager-select"
                name="packageManager"
              >
                <option
                  value="npm"
                >
                  NPM
                </option>
                <option
                  value="yarn"
                >
                  YARN
                </option>
                <option
                  value="yarn-berry"
                >
                  YARN BERRY
                </option>
              </select>
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Build Command
              </label>
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                name="buildCommand"
              />
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Build Directory
              </label>
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                name="outDir"
              />
            </div>
          </div>
        </div>
      </form>
      <div
        aria-hidden="true"
        class="mocked-styled-146 el-mobile-controls-bg"
      />
      <div
        class="mocked-styled-147 el-mobile-controls"
        id=":r6:"
      >
        <button
          aria-controls=":r6:"
          class="el-floating-button el-intent-primary el-button"
        >
          <div
            class="mocked-styled-0 el-button-loader"
          />
          <span
            class="el-icon-new el-icon"
          >
            <svg
              fill="none"
              height="1em"
              role="img"
              title="Icon image with name menu"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M20 11H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2M4 7h16a1 1 0 1 0 0-2H4a1 1 0 0 0 0 2m16 10H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2"
                fill="currentColor"
              />
            </svg>
          </span>
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <h1
      class="el-text-base el-title"
    >
      New Pipeline
    </h1>
    <div
      class="el-tabs-full-width el-tabs-wrap"
    >
      <div
        class="mocked-styled-120 el-tabs-options-wrap"
        role="tablist"
      >
        <input
          aria-selected="true"
          checked=""
          class="mocked-styled-117 el-tabs"
          id="deployments"
          name="pipeline-tabs"
          type="radio"
          value="deployments"
        />
        <label
          class="mocked-styled-118 el-tabs-label"
          for="deployments"
          role="tab"
          tabindex="0"
        >
          <span
            class="el-tabs-item"
          >
            Deployments
          </span>
        </label>
        <input
          aria-selected="false"
          class="mocked-styled-117 el-tabs"
          id="configure"
          name="pipeline-tabs"
          type="radio"
          value="configure"
        />
        <label
          class="mocked-styled-118 el-tabs-label"
          for="configure"
          role="tab"
          tabindex="0"
        >
          <span
            class="el-tabs-item"
          >
            Configure
          </span>
        </label>
        <input
          aria-selected="false"
          class="mocked-styled-117 el-tabs"
          id="environment"
          name="pipeline-tabs"
          type="radio"
          value="environment"
        />
        <label
          class="mocked-styled-118 el-tabs-label"
          for="environment"
          role="tab"
          tabindex="0"
        >
          <span
            class="el-tabs-item"
          >
            Environment Variables
          </span>
        </label>
        <input
          aria-selected="false"
          class="mocked-styled-117 el-tabs"
          id="DNS"
          name="pipeline-tabs"
          type="radio"
          value="DNS"
        />
        <label
          class="mocked-styled-118 el-tabs-label"
          for="DNS"
          role="tab"
          tabindex="0"
        >
          <span
            class="el-tabs-item"
          >
            Custom DNS
          </span>
        </label>
      </div>
      <div
        class="el-tabs-full-width el-tabs-footer"
      />
    </div>
    <p
      class="el-text-base el-body-text el-has-grey-text el-has-section-margin"
    >
      Setup the configuration below so that the pipeline knows how to build your application. The pipeline assumes that your application is a frontend application that uses either yarn or npm to run scripts declared in a package.json file. It also assumes that your application is bundled, and that the bundle is output to a local directory from which it can be deployed.
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      <strong>
        Deployment Branch
      </strong>
       is the branch from which push events will trigger a new deployment. typically main or master.
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      <strong>
        Build Command
      </strong>
       will be executed to prepare the application bundle, and should match the appropriate script in package.json.
    </p>
    <p
      class="el-text-base el-body-text el-has-grey-text el-has-section-margin"
    >
      <strong>
        Build Directory
      </strong>
       is the directory from which the bundle will be deployed, typically build or dist.
    </p>
    <form>
      <div
        class="el-form-layout-has-margin el-form-layout"
      >
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Name
            </label>
            <input
              aria-label="Input type undefined"
              class="mocked-styled-38 el-input"
              name="name"
            />
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Deployment Branch
            </label>
            <input
              aria-label="Input type undefined"
              class="mocked-styled-38 el-input"
              name="branch"
            />
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Github Repository
            </label>
            <mock-styled.div>
              https://github.com/bashleigh/reapit-react-test
            </mock-styled.div>
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Package Manager
            </label>
            <select
              aria-label="Select an item from the dropdown list"
              class="mocked-styled-83 el-select"
              id="package-manager-select"
              name="packageManager"
            >
              <option
                value="npm"
              >
                NPM
              </option>
              <option
                value="yarn"
              >
                YARN
              </option>
              <option
                value="yarn-berry"
              >
                YARN BERRY
              </option>
            </select>
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Build Command
            </label>
            <input
              aria-label="Input type undefined"
              class="mocked-styled-38 el-input"
              name="buildCommand"
            />
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Build Directory
            </label>
            <input
              aria-label="Input type undefined"
              class="mocked-styled-38 el-input"
              name="outDir"
            />
          </div>
        </div>
      </div>
    </form>
    <div
      aria-hidden="true"
      class="mocked-styled-146 el-mobile-controls-bg"
    />
    <div
      class="mocked-styled-147 el-mobile-controls"
      id=":r6:"
    >
      <button
        aria-controls=":r6:"
        class="el-floating-button el-intent-primary el-button"
      >
        <div
          class="mocked-styled-0 el-button-loader"
        />
        <span
          class="el-icon-new el-icon"
        >
          <svg
            fill="none"
            height="1em"
            role="img"
            title="Icon image with name menu"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M20 11H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2M4 7h16a1 1 0 1 0 0-2H4a1 1 0 0 0 0 2m16 10H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2"
              fill="currentColor"
            />
          </svg>
        </span>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
