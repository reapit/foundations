// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PipelineConfigure Should match snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <form>
        <div
          class="el-form-layout-has-margin el-form-layout"
        >
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Name
              </label>
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                name="name"
              />
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Deployment Branch
              </label>
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                name="branch"
              />
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Github Repository
              </label>
              <mock-styled.div>
                https://github.com/bashleigh/reapit-react-test
              </mock-styled.div>
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Package Manager
              </label>
              <select
                aria-label="Select an item from the dropdown list"
                class="mocked-styled-83 el-select"
                id="package-manager-select"
                name="packageManager"
              >
                <option
                  value="npm"
                >
                  NPM
                </option>
                <option
                  value="yarn"
                >
                  YARN
                </option>
                <option
                  value="yarn-berry"
                >
                  YARN BERRY
                </option>
              </select>
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Build Command
              </label>
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                name="buildCommand"
              />
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <label
                class="mocked-styled-41 el-label"
              >
                Build Directory
              </label>
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                name="outDir"
              />
            </div>
          </div>
        </div>
      </form>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <form>
      <div
        class="el-form-layout-has-margin el-form-layout"
      >
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Name
            </label>
            <input
              aria-label="Input type undefined"
              class="mocked-styled-38 el-input"
              name="name"
            />
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Deployment Branch
            </label>
            <input
              aria-label="Input type undefined"
              class="mocked-styled-38 el-input"
              name="branch"
            />
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Github Repository
            </label>
            <mock-styled.div>
              https://github.com/bashleigh/reapit-react-test
            </mock-styled.div>
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Package Manager
            </label>
            <select
              aria-label="Select an item from the dropdown list"
              class="mocked-styled-83 el-select"
              id="package-manager-select"
              name="packageManager"
            >
              <option
                value="npm"
              >
                NPM
              </option>
              <option
                value="yarn"
              >
                YARN
              </option>
              <option
                value="yarn-berry"
              >
                YARN BERRY
              </option>
            </select>
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Build Command
            </label>
            <input
              aria-label="Input type undefined"
              class="mocked-styled-38 el-input"
              name="buildCommand"
            />
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Build Directory
            </label>
            <input
              aria-label="Input type undefined"
              class="mocked-styled-38 el-input"
              name="outDir"
            />
          </div>
        </div>
      </div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
