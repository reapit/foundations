// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HelperContent should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="root"
    >
      <div />
      <div />
      <div />
      <div />
    </div>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <mock-styled.div>
        <div
          class="el-fade-in"
        >
          <h2
            class="el-text-base el-subtitle el-has-bold-text"
          >
            About Apps
          </h2>
          <div
            class="el-flex-container el-flex-column"
          >
            <div
              class="el-mb7"
            >
              <p
                class="el-text-base el-body-text el-has-grey-text"
              >
                Every developer will have different use cases for our Platform and it is unlikely you will need to use all of the APIs and tooling we provide. However, the starting point for all integrations is to create an ‘App’,
              </p>
              <svg
                height="100%"
                width="100%"
              />
            </div>
            <div
              class=""
            >
              <p
                class="el-text-base el-body-text el-has-grey-text"
              >
                On a basic level an app is the means to authenticate against our services. To create an app, you should follow the steps in the wizard on the left of this page.
              </p>
              <p
                class="el-text-base el-body-text el-has-grey-text"
              >
                When you have completed this wizard, you will land on a dedicated page for your App, that will give you the Client Id, and in the case of server-side apps, a Client Secret, that will enable you to authenticate against out APIs. From here you can get started with development against our developer sandbox data.
              </p>
              <p
                class="el-text-base el-body-text el-has-grey-text"
              >
                When you are ready to go live with a customer, you will need to complete some additional information and submit your app for review by one of our team. On approval of your app, it will be listed in the AppMarket for your customers to install, this will then grant access to their production data.
              </p>
            </div>
          </div>
        </div>
        <div
          class="mock-css.
  display: none;
"
        >
          <h2
            class="el-text-base el-subtitle el-has-bold-text"
          >
            AgencyCloud Functionality
          </h2>
          <div
            class="el-flex-container el-flex-column"
          >
            <div
              class="el-mb7"
            >
              <p
                class="el-text-base el-body-text el-has-grey-text"
              >
                For the greatest integration with our AgencyCloud Desktop CRM, we support the ability to load client-side apps using an internal web browser, inside of the CRM.
              </p>
              <svg
                height="100%"
                width="100%"
              />
            </div>
            <div
              class=""
            >
              <p
                class="el-text-base el-body-text el-has-grey-text"
              >
                You can either launch your app from a dedicated menu, for example from a property or a contact, or even replace certain screens. Using our Desktop API your app can receive contextual information based on the screen or location the app is launched from. Providing relevant data for your users. For more information on our Desktop API please 
                <a>
                  see here.
                </a>
              </p>
              <p
                class="el-text-base el-body-text el-has-grey-text"
              >
                To ensure a consistent UI and UX, it is a requirement that apps that integrate with AgencyCloud use our Elements UI library and our Design System. If you want to familiarise yourself with this before moving on, you can 
                <a>
                  view the docs here.
                </a>
              </p>
              <p
                class="el-text-base el-body-text el-has-grey-text"
              >
                Please be aware that we do not support rendering of web applications that use a third-party UI. You cannot simply link out from your integrated app or render a pre-existing app in an iframe. For more information on the requirements, 
                <a>
                  please click here.
                </a>
              </p>
              <p
                class="el-text-base el-body-text el-has-grey-text"
              >
                From November 2024, when registering an app that uses the authorisation code authentication flow, ensure it can handle rotating refresh tokens. For more information about this change,
                 
                <a>
                  please click here.
                </a>
                 Apps registered prior to this date are unaffected by this change.
              </p>
            </div>
          </div>
        </div>
        <div
          class="mock-css.
  display: none;
"
        >
          <h2
            class="el-text-base el-subtitle el-has-bold-text"
          >
            External Web Applications
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            You should select this if you wish to integrate our Platform APIs with a pre-existing or future web application that you do not wish to launch from within the AgencyCloud desktop CRM.
          </p>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            Your application can be authenticated against our Platform either on the client-side or server-side. If you choose client-side authentication at the next step but later wish to upgrade to a full AgencyCloud integration in the future, you can do this. However, it is important to note, server-side integrations cannot be launched from within AgencyCloud.
          </p>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            From November 2024, when registering an app that uses the authorisation code authentication flow, ensure it can handle rotating refresh tokens. For more information about this change,
             
            <a
              role="link"
            >
              please click here.
            </a>
             
            Apps registered prior to this date are unaffected by this change.
          </p>
        </div>
        <div
          class="mock-css.
  display: none;
"
        >
          <h2
            class="el-text-base el-subtitle el-has-bold-text"
          >
            Data Portal and Reporting Feeds
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            This is a server-side only data feed, using our
             
            <a>
              Client Credentials authentication flow.
            </a>
             You should select this if you have no requirement to render your application inside of the AgencyCloud desktop CRM and, you have no requirement for user-centric client-side authentication.
          </p>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            Typically, you will be pulling data to serve another application, to perform data processing or some other analytics function.
          </p>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            You should also select this option if you require a permanent connection to our APIs; to pull data on demand as opposed to on the fly, when a user logs in to your application.
          </p>
        </div>
        <div
          class="mock-css.
  display: none;
"
        >
          <h2
            class="el-text-base el-subtitle el-has-bold-text"
          >
            Website Feeds
          </h2>
          <div
            class="el-flex-container el-flex-column"
          >
            <div
              class="el-mb7"
            >
              <p
                class="el-text-base el-body-text el-has-grey-text"
              >
                It is possible to get up and running with a website feed from the Platform API. You will want to optimise this flow, implementing webhooks and caching however, the below video is our quick start guide.
              </p>
              <svg
                height="100%"
                width="100%"
              />
            </div>
            <div
              class=""
            >
              <p
                class="el-text-base el-body-text el-has-grey-text"
              >
                When building a public website for a Reapit Customer, you will have no user authentication so your integration must be server-side, using our
                 
                <a>
                  Client Credentials authentication flow.
                </a>
              </p>
              <p
                class="el-text-base el-body-text el-has-grey-text"
              >
                Your application will be read-only and by selecting this option, we will pre-populate the typical API permissions your integration will need for most website development.
              </p>
            </div>
          </div>
        </div>
        <div
          class="mock-css.
  display: none;
"
        >
          <h2
            class="el-text-base el-subtitle el-has-bold-text"
          >
            Web Services to Platform
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            Select this option if you are migrating from the legacy Reapit SOAP API, or web services. These services will soon be deprecated so it is important to start your migration to the Foundations Platform as soon as possible.
          </p>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            You will get options at the next steps to decide whether client or server-side authentication best serves your application needs however, in most cases web services applications are server-side using our
             
            <a>
              Client Credentials authentication flow.
            </a>
          </p>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            Please be aware there is not a 1:1 mapping between the SOAP and our Platform REST API. As such, we suggest reading the 
            <a>
              API docs here
            </a>
             and looking at the
             
            <a
              href="/swagger"
              rel="noopener noreferrer"
              target="_blank"
            >
              API explorer here
               
            </a>
            to investigate which data sets and permissions you will need before getting started.
          </p>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            From November 2024, when registering an app that uses the authorisation code authentication flow, ensure it can handle rotating refresh tokens. For more information about this change,
             
            <a
              role="link"
            >
              please click here.
            </a>
             
            Apps registered prior to this date are unaffected by this change.
          </p>
        </div>
        <div
          class="mock-css.
  display: none;
"
        >
          <h2
            class="el-text-base el-subtitle el-has-bold-text"
          >
            Using Reapit Connect as an Identity Provider
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            We support using Reapit Connect, our client-side authentication solution, simply as an identity provider for your application.
          </p>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            In this case, your client-side authenticated users will not have any data permissions however, you can access and validate their identity against your own application. For more on
             
            <a>
              Reapit Connect visit here
            </a>
             and if you are interested in using our Sign In With Reapit button to embed on your own site
             
            <a>
              visit here
            </a>
          </p>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            From November 2024, when registering an app that uses the authorisation code authentication flow, ensure it can handle rotating refresh tokens. For more information about this change,
             
            <a
              role="link"
            >
              please click here.
            </a>
             
            Apps registered prior to this date are unaffected by this change.
          </p>
        </div>
        <div
          class="mock-css.
  display: none;
"
        >
          <h2
            class="el-text-base el-subtitle el-has-bold-text"
          >
            Client Side Apps
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            Client-side Apps use our identity provider
             
            <a>
              Reapit Connect
            </a>
             to authenticate against our API. Your application will need to re-direct to Reapit Connect where we will handle user login and in turn, re-direct back to your app with a code in the URL that you exchange for access and id JWTs, referred to as
             
            <a>
              Authorization Code flow.
            </a>
             You will need to provide us with URIs to your application at the next step so we know where to return you to on login and on completion of this wizard, you will receive a Client ID you will need to get started.
          </p>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            To make this process easier, we provide you with an authentication module for client-side apps,
             
            <a>
              Connect Session
            </a>
            , which comes bundled with our
             
            <a>
              Create React App Template
            </a>
             for quick start client-side development.
          </p>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            From November 2024, when registering an app that uses the authorisation code authentication flow, ensure it can handle rotating refresh tokens. For more information about this change,
             
            <a
              role="link"
            >
              please click here.
            </a>
             
            Apps registered prior to this date are unaffected by this change.
          </p>
        </div>
        <div
          class="mock-css.
  display: none;
"
        >
          <h2
            class="el-text-base el-subtitle el-has-bold-text"
          >
            Server Side Apps
          </h2>
          <div
            class="el-flex-container el-flex-column"
          >
            <div
              class="el-mb7"
            >
              <svg
                height="100%"
                width="100%"
              />
            </div>
            <div
              class=""
            >
              <p
                class="el-text-base el-body-text el-has-grey-text"
              >
                Server-side applications authenticate against our API using the
                 
                <a>
                  Client Credentials authentication flow.
                </a>
                 This process involves the exchange of a Client Id and Secret for a JWT access token to authenticate against all requests.
              </p>
              <p
                class="el-text-base el-body-text el-has-grey-text"
              >
                Unlike client-side applications, you do not have to re-direct to Reapit Connect, nor do your users have to log into your application. Because of this, the flow must only be used on the Server Side to ensure the Client Secret you will be issued at the end of this wizard is held in a secure location.
              </p>
            </div>
          </div>
        </div>
        <div
          class="mock-css.
  display: none;
"
        >
          <h2
            class="el-text-base el-subtitle el-has-bold-text"
          >
            Reapit Connect Redirects
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            When using the Reapit Connect
             
            <a>
              Authorization Code flow,
            </a>
             you need to register both a re-direct URI and a logout URI. The former is the location in your app, you want Reapit Connect to re-direct to after a successful user login, the latter, after a succesful logout. Only URIs that are registered here will be accepted as a location by Reapit Connect although, you can register multiple locations with a comma separated list.
          </p>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            We have pre-populated the URIs that you need when using our
             
            <a>
              Create React App Template
            </a>
             however, any localhost or dev.reapit (for local development), or https URI is acceptable. Please note, the URIs must match those in your app exactly, inclusive of white space and trailing slashes.
          </p>
        </div>
        <div
          class="mock-css.
  display: none;
"
        >
          <h2
            class="el-text-base el-subtitle el-has-bold-text"
          >
            Permissions
          </h2>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            Permissions are registered as scopes against the access token you receive back from one of our Authentication Flows. They map 1:1 and on a read/write basis to endpoints in our our Platform REST API. As such, it is worth looking at the
             
            <a
              href="/swagger"
              rel="noopener noreferrer"
              target="_blank"
            >
              API explorer here
               
            </a>
            before procceeding, to investigate which permissions you think you will need.
          </p>
          <p
            class="el-text-base el-body-text el-has-grey-text"
          >
            For some flows we have pre-populated suggested permissions based on what you have said you wish to acheive with our Platform. These can be removed or added as you see fit and all permissions can be edited later if you wish to add or remove them before your app goes live.
          </p>
        </div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <mock-styled.div>
      <div
        class="el-fade-in"
      >
        <h2
          class="el-text-base el-subtitle el-has-bold-text"
        >
          About Apps
        </h2>
        <div
          class="el-flex-container el-flex-column"
        >
          <div
            class="el-mb7"
          >
            <p
              class="el-text-base el-body-text el-has-grey-text"
            >
              Every developer will have different use cases for our Platform and it is unlikely you will need to use all of the APIs and tooling we provide. However, the starting point for all integrations is to create an ‘App’,
            </p>
            <svg
              height="100%"
              width="100%"
            />
          </div>
          <div
            class=""
          >
            <p
              class="el-text-base el-body-text el-has-grey-text"
            >
              On a basic level an app is the means to authenticate against our services. To create an app, you should follow the steps in the wizard on the left of this page.
            </p>
            <p
              class="el-text-base el-body-text el-has-grey-text"
            >
              When you have completed this wizard, you will land on a dedicated page for your App, that will give you the Client Id, and in the case of server-side apps, a Client Secret, that will enable you to authenticate against out APIs. From here you can get started with development against our developer sandbox data.
            </p>
            <p
              class="el-text-base el-body-text el-has-grey-text"
            >
              When you are ready to go live with a customer, you will need to complete some additional information and submit your app for review by one of our team. On approval of your app, it will be listed in the AppMarket for your customers to install, this will then grant access to their production data.
            </p>
          </div>
        </div>
      </div>
      <div
        class="mock-css.
  display: none;
"
      >
        <h2
          class="el-text-base el-subtitle el-has-bold-text"
        >
          AgencyCloud Functionality
        </h2>
        <div
          class="el-flex-container el-flex-column"
        >
          <div
            class="el-mb7"
          >
            <p
              class="el-text-base el-body-text el-has-grey-text"
            >
              For the greatest integration with our AgencyCloud Desktop CRM, we support the ability to load client-side apps using an internal web browser, inside of the CRM.
            </p>
            <svg
              height="100%"
              width="100%"
            />
          </div>
          <div
            class=""
          >
            <p
              class="el-text-base el-body-text el-has-grey-text"
            >
              You can either launch your app from a dedicated menu, for example from a property or a contact, or even replace certain screens. Using our Desktop API your app can receive contextual information based on the screen or location the app is launched from. Providing relevant data for your users. For more information on our Desktop API please 
              <a>
                see here.
              </a>
            </p>
            <p
              class="el-text-base el-body-text el-has-grey-text"
            >
              To ensure a consistent UI and UX, it is a requirement that apps that integrate with AgencyCloud use our Elements UI library and our Design System. If you want to familiarise yourself with this before moving on, you can 
              <a>
                view the docs here.
              </a>
            </p>
            <p
              class="el-text-base el-body-text el-has-grey-text"
            >
              Please be aware that we do not support rendering of web applications that use a third-party UI. You cannot simply link out from your integrated app or render a pre-existing app in an iframe. For more information on the requirements, 
              <a>
                please click here.
              </a>
            </p>
            <p
              class="el-text-base el-body-text el-has-grey-text"
            >
              From November 2024, when registering an app that uses the authorisation code authentication flow, ensure it can handle rotating refresh tokens. For more information about this change,
               
              <a>
                please click here.
              </a>
               Apps registered prior to this date are unaffected by this change.
            </p>
          </div>
        </div>
      </div>
      <div
        class="mock-css.
  display: none;
"
      >
        <h2
          class="el-text-base el-subtitle el-has-bold-text"
        >
          External Web Applications
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          You should select this if you wish to integrate our Platform APIs with a pre-existing or future web application that you do not wish to launch from within the AgencyCloud desktop CRM.
        </p>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          Your application can be authenticated against our Platform either on the client-side or server-side. If you choose client-side authentication at the next step but later wish to upgrade to a full AgencyCloud integration in the future, you can do this. However, it is important to note, server-side integrations cannot be launched from within AgencyCloud.
        </p>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          From November 2024, when registering an app that uses the authorisation code authentication flow, ensure it can handle rotating refresh tokens. For more information about this change,
           
          <a
            role="link"
          >
            please click here.
          </a>
           
          Apps registered prior to this date are unaffected by this change.
        </p>
      </div>
      <div
        class="mock-css.
  display: none;
"
      >
        <h2
          class="el-text-base el-subtitle el-has-bold-text"
        >
          Data Portal and Reporting Feeds
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          This is a server-side only data feed, using our
           
          <a>
            Client Credentials authentication flow.
          </a>
           You should select this if you have no requirement to render your application inside of the AgencyCloud desktop CRM and, you have no requirement for user-centric client-side authentication.
        </p>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          Typically, you will be pulling data to serve another application, to perform data processing or some other analytics function.
        </p>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          You should also select this option if you require a permanent connection to our APIs; to pull data on demand as opposed to on the fly, when a user logs in to your application.
        </p>
      </div>
      <div
        class="mock-css.
  display: none;
"
      >
        <h2
          class="el-text-base el-subtitle el-has-bold-text"
        >
          Website Feeds
        </h2>
        <div
          class="el-flex-container el-flex-column"
        >
          <div
            class="el-mb7"
          >
            <p
              class="el-text-base el-body-text el-has-grey-text"
            >
              It is possible to get up and running with a website feed from the Platform API. You will want to optimise this flow, implementing webhooks and caching however, the below video is our quick start guide.
            </p>
            <svg
              height="100%"
              width="100%"
            />
          </div>
          <div
            class=""
          >
            <p
              class="el-text-base el-body-text el-has-grey-text"
            >
              When building a public website for a Reapit Customer, you will have no user authentication so your integration must be server-side, using our
               
              <a>
                Client Credentials authentication flow.
              </a>
            </p>
            <p
              class="el-text-base el-body-text el-has-grey-text"
            >
              Your application will be read-only and by selecting this option, we will pre-populate the typical API permissions your integration will need for most website development.
            </p>
          </div>
        </div>
      </div>
      <div
        class="mock-css.
  display: none;
"
      >
        <h2
          class="el-text-base el-subtitle el-has-bold-text"
        >
          Web Services to Platform
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          Select this option if you are migrating from the legacy Reapit SOAP API, or web services. These services will soon be deprecated so it is important to start your migration to the Foundations Platform as soon as possible.
        </p>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          You will get options at the next steps to decide whether client or server-side authentication best serves your application needs however, in most cases web services applications are server-side using our
           
          <a>
            Client Credentials authentication flow.
          </a>
        </p>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          Please be aware there is not a 1:1 mapping between the SOAP and our Platform REST API. As such, we suggest reading the 
          <a>
            API docs here
          </a>
           and looking at the
           
          <a
            href="/swagger"
            rel="noopener noreferrer"
            target="_blank"
          >
            API explorer here
             
          </a>
          to investigate which data sets and permissions you will need before getting started.
        </p>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          From November 2024, when registering an app that uses the authorisation code authentication flow, ensure it can handle rotating refresh tokens. For more information about this change,
           
          <a
            role="link"
          >
            please click here.
          </a>
           
          Apps registered prior to this date are unaffected by this change.
        </p>
      </div>
      <div
        class="mock-css.
  display: none;
"
      >
        <h2
          class="el-text-base el-subtitle el-has-bold-text"
        >
          Using Reapit Connect as an Identity Provider
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          We support using Reapit Connect, our client-side authentication solution, simply as an identity provider for your application.
        </p>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          In this case, your client-side authenticated users will not have any data permissions however, you can access and validate their identity against your own application. For more on
           
          <a>
            Reapit Connect visit here
          </a>
           and if you are interested in using our Sign In With Reapit button to embed on your own site
           
          <a>
            visit here
          </a>
        </p>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          From November 2024, when registering an app that uses the authorisation code authentication flow, ensure it can handle rotating refresh tokens. For more information about this change,
           
          <a
            role="link"
          >
            please click here.
          </a>
           
          Apps registered prior to this date are unaffected by this change.
        </p>
      </div>
      <div
        class="mock-css.
  display: none;
"
      >
        <h2
          class="el-text-base el-subtitle el-has-bold-text"
        >
          Client Side Apps
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          Client-side Apps use our identity provider
           
          <a>
            Reapit Connect
          </a>
           to authenticate against our API. Your application will need to re-direct to Reapit Connect where we will handle user login and in turn, re-direct back to your app with a code in the URL that you exchange for access and id JWTs, referred to as
           
          <a>
            Authorization Code flow.
          </a>
           You will need to provide us with URIs to your application at the next step so we know where to return you to on login and on completion of this wizard, you will receive a Client ID you will need to get started.
        </p>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          To make this process easier, we provide you with an authentication module for client-side apps,
           
          <a>
            Connect Session
          </a>
          , which comes bundled with our
           
          <a>
            Create React App Template
          </a>
           for quick start client-side development.
        </p>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          From November 2024, when registering an app that uses the authorisation code authentication flow, ensure it can handle rotating refresh tokens. For more information about this change,
           
          <a
            role="link"
          >
            please click here.
          </a>
           
          Apps registered prior to this date are unaffected by this change.
        </p>
      </div>
      <div
        class="mock-css.
  display: none;
"
      >
        <h2
          class="el-text-base el-subtitle el-has-bold-text"
        >
          Server Side Apps
        </h2>
        <div
          class="el-flex-container el-flex-column"
        >
          <div
            class="el-mb7"
          >
            <svg
              height="100%"
              width="100%"
            />
          </div>
          <div
            class=""
          >
            <p
              class="el-text-base el-body-text el-has-grey-text"
            >
              Server-side applications authenticate against our API using the
               
              <a>
                Client Credentials authentication flow.
              </a>
               This process involves the exchange of a Client Id and Secret for a JWT access token to authenticate against all requests.
            </p>
            <p
              class="el-text-base el-body-text el-has-grey-text"
            >
              Unlike client-side applications, you do not have to re-direct to Reapit Connect, nor do your users have to log into your application. Because of this, the flow must only be used on the Server Side to ensure the Client Secret you will be issued at the end of this wizard is held in a secure location.
            </p>
          </div>
        </div>
      </div>
      <div
        class="mock-css.
  display: none;
"
      >
        <h2
          class="el-text-base el-subtitle el-has-bold-text"
        >
          Reapit Connect Redirects
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          When using the Reapit Connect
           
          <a>
            Authorization Code flow,
          </a>
           you need to register both a re-direct URI and a logout URI. The former is the location in your app, you want Reapit Connect to re-direct to after a successful user login, the latter, after a succesful logout. Only URIs that are registered here will be accepted as a location by Reapit Connect although, you can register multiple locations with a comma separated list.
        </p>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          We have pre-populated the URIs that you need when using our
           
          <a>
            Create React App Template
          </a>
           however, any localhost or dev.reapit (for local development), or https URI is acceptable. Please note, the URIs must match those in your app exactly, inclusive of white space and trailing slashes.
        </p>
      </div>
      <div
        class="mock-css.
  display: none;
"
      >
        <h2
          class="el-text-base el-subtitle el-has-bold-text"
        >
          Permissions
        </h2>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          Permissions are registered as scopes against the access token you receive back from one of our Authentication Flows. They map 1:1 and on a read/write basis to endpoints in our our Platform REST API. As such, it is worth looking at the
           
          <a
            href="/swagger"
            rel="noopener noreferrer"
            target="_blank"
          >
            API explorer here
             
          </a>
          before procceeding, to investigate which permissions you think you will need.
        </p>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          For some flows we have pre-populated suggested permissions based on what you have said you wish to acheive with our Platform. These can be removed or added as you see fit and all permissions can be edited later if you wish to add or remove them before your app goes live.
        </p>
      </div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
