// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AuthenticationTab should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        When using the Reapit Connect
         
        <a>
          Authorization Code flow,
        </a>
         you need to register both a re-direct URI and a logout URI. The former is the location in your app, you want Reapit Connect to re-direct to after a successful user login, the latter, after a succesful logout. Only URIs that are registered here will be accepted as a location by Reapit Connect although, you can register multiple locations with a comma separated list.
      </p>
      <div
        class="el-form-layout-has-margin el-form-layout"
      >
        <div
          class="mocked-styled-135 el-input-wrap-full"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <input
              aria-label="Input type text"
              class="mocked-styled-38 el-input"
              id="test-static-id"
              name="redirectUris"
              placeholder="Enter your Redirect URI(s)"
              type="text"
            />
            <label
              class="mocked-styled-41 el-label"
              for="test-static-id"
            >
              Redirect URI(s)
            </label>
          </div>
        </div>
        <div
          class="mocked-styled-135 el-input-wrap-full"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <input
              aria-label="Input type text"
              class="mocked-styled-38 el-input"
              id="test-static-id"
              name="signoutUris"
              placeholder="Enter your Sign Out URI(s)"
              type="text"
            />
            <label
              class="mocked-styled-41 el-label"
              for="test-static-id"
            >
              Sign Out URI(s)
            </label>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <p
      class="el-text-base el-body-text el-has-grey-text"
    >
      When using the Reapit Connect
       
      <a>
        Authorization Code flow,
      </a>
       you need to register both a re-direct URI and a logout URI. The former is the location in your app, you want Reapit Connect to re-direct to after a successful user login, the latter, after a succesful logout. Only URIs that are registered here will be accepted as a location by Reapit Connect although, you can register multiple locations with a comma separated list.
    </p>
    <div
      class="el-form-layout-has-margin el-form-layout"
    >
      <div
        class="mocked-styled-135 el-input-wrap-full"
      >
        <div
          class="mocked-styled-40 el-input-group"
        >
          <input
            aria-label="Input type text"
            class="mocked-styled-38 el-input"
            id="test-static-id"
            name="redirectUris"
            placeholder="Enter your Redirect URI(s)"
            type="text"
          />
          <label
            class="mocked-styled-41 el-label"
            for="test-static-id"
          >
            Redirect URI(s)
          </label>
        </div>
      </div>
      <div
        class="mocked-styled-135 el-input-wrap-full"
      >
        <div
          class="mocked-styled-40 el-input-group"
        >
          <input
            aria-label="Input type text"
            class="mocked-styled-38 el-input"
            id="test-static-id"
            name="signoutUris"
            placeholder="Enter your Sign Out URI(s)"
            type="text"
          />
          <label
            class="mocked-styled-41 el-label"
            for="test-static-id"
          >
            Sign Out URI(s)
          </label>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
