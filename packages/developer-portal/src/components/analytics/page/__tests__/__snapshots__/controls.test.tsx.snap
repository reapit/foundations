// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Controls should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <div
        class="mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
 mock-css.
  margin-bottom: 1.25rem;
"
      >
        <mock-styled.span
          classname="mock-css.
  margin-bottom: 0.5rem;
 mock-css.
  font-size: 5rem;
"
        >
          <svg />
        </mock-styled.span>
        <mock-styled.p
          classname=""
        >
          Filter By
        </mock-styled.p>
        <mock-styled.p
          classname="mock-css."
        >
          Please use the filters below to search. Please note, we only hold transactional records for the last 12 months.
        </mock-styled.p>
        <div
          class="mock-css.
  border-radius: 0.25rem;
 mock-css.
  overflow: hidden;
"
        >
          <form>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                classname="mock-css.
  input {
    width: 100%;
  }
"
              >
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  max="2019-10-10"
                  min="2018-10-10"
                  name="dateFrom"
                  type="date"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Date From
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                classname="mock-css.
  input {
    width: 100%;
  }
"
              >
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  max="2019-10-10"
                  min="2019-10-03"
                  name="dateTo"
                  type="date"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Date To
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                classname="mock-css.
  input {
    width: 100%;
  }
"
              >
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  max="2019-10"
                  min="2018-10"
                  name="monthFrom"
                  type="month"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Month From
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                classname="mock-css.
  input {
    width: 100%;
  }
"
              >
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  max="2019-10"
                  min="2019-10"
                  name="monthTo"
                  type="month"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Month To
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div>
                <mock-styled.select
                  classname="mock-css.
  width: 100%;
"
                  name="appId"
                >
                  <option
                    value=""
                  >
                    None selected
                  </option>
                  <option
                    value="MOCK_APP_ID"
                  >
                    MOCK_APP_NAME
                  </option>
                  <option
                    value="MOCK_OTHER_APP_ID"
                  >
                    MOCK_APP_NAME_ANOTHER
                  </option>
                </mock-styled.select>
                <mock-styled.label>
                  App
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div>
                <mock-styled.select
                  classname="mock-css.
  width: 100%;
"
                  name="clientId"
                >
                  <option
                    value=""
                  >
                    None selected
                  </option>
                  <option
                    value="RES"
                  >
                    Reapit Sales  (RES)
                  </option>
                  <option
                    value="MXX"
                  >
                    Foo Bar  (MXX)
                  </option>
                </mock-styled.select>
                <mock-styled.label>
                  Client
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
          </form>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <div
      class="mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
 mock-css.
  margin-bottom: 1.25rem;
"
    >
      <mock-styled.span
        classname="mock-css.
  margin-bottom: 0.5rem;
 mock-css.
  font-size: 5rem;
"
      >
        <svg />
      </mock-styled.span>
      <mock-styled.p
        classname=""
      >
        Filter By
      </mock-styled.p>
      <mock-styled.p
        classname="mock-css."
      >
        Please use the filters below to search. Please note, we only hold transactional records for the last 12 months.
      </mock-styled.p>
      <div
        class="mock-css.
  border-radius: 0.25rem;
 mock-css.
  overflow: hidden;
"
      >
        <form>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              classname="mock-css.
  input {
    width: 100%;
  }
"
            >
              <mock-styled.input
                classname=""
                id="test-static-id"
                max="2019-10-10"
                min="2018-10-10"
                name="dateFrom"
                type="date"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Date From
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              classname="mock-css.
  input {
    width: 100%;
  }
"
            >
              <mock-styled.input
                classname=""
                id="test-static-id"
                max="2019-10-10"
                min="2019-10-03"
                name="dateTo"
                type="date"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Date To
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              classname="mock-css.
  input {
    width: 100%;
  }
"
            >
              <mock-styled.input
                classname=""
                id="test-static-id"
                max="2019-10"
                min="2018-10"
                name="monthFrom"
                type="month"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Month From
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              classname="mock-css.
  input {
    width: 100%;
  }
"
            >
              <mock-styled.input
                classname=""
                id="test-static-id"
                max="2019-10"
                min="2019-10"
                name="monthTo"
                type="month"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Month To
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div>
              <mock-styled.select
                classname="mock-css.
  width: 100%;
"
                name="appId"
              >
                <option
                  value=""
                >
                  None selected
                </option>
                <option
                  value="MOCK_APP_ID"
                >
                  MOCK_APP_NAME
                </option>
                <option
                  value="MOCK_OTHER_APP_ID"
                >
                  MOCK_APP_NAME_ANOTHER
                </option>
              </mock-styled.select>
              <mock-styled.label>
                App
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div>
              <mock-styled.select
                classname="mock-css.
  width: 100%;
"
                name="clientId"
              >
                <option
                  value=""
                >
                  None selected
                </option>
                <option
                  value="RES"
                >
                  Reapit Sales  (RES)
                </option>
                <option
                  value="MXX"
                >
                  Foo Bar  (MXX)
                </option>
              </mock-styled.select>
              <mock-styled.label>
                Client
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
        </form>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
