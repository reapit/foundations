// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WebhooksNewStatus should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <div
        class="el-mb11"
      >
        <p
          class="el-text-base el-body-text el-has-grey-text el-has-no-margin"
        >
          Selecting active status will determine whether the webhook will fire when changes are made. This will effect your consumption costs so you may wish to disable it periodically. Ignoring when the etag only changes will mean the webhoook only fires when customer data changes.
        </p>
      </div>
      <div
        class="el-fade-in el-form-layout"
      >
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <input
              class="mocked-styled-125 el-toggle-checkbox"
              id="status-toggle"
              type="checkbox"
            />
            <label
              class="el-mt1 el-has-grey-bg el-toggle-label"
              for="status-toggle"
              role="button"
              tabindex="0"
            >
              <span
                class="mocked-styled-123 el-toggle-item"
              >
                Active
              </span>
              <span
                class="mocked-styled-123 el-toggle-item"
              >
                Inactive
              </span>
            </label>
            <label
              class="mocked-styled-41 el-label"
            >
              Status
            </label>
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <input
              aria-label="Input type checkbox"
              class="mocked-styled-38 el-input"
              id="test-static-id"
              type="checkbox"
            />
            <label
              class="mocked-styled-41 el-label"
              for="test-static-id"
            >
              Ignore where only the etag has been modified
            </label>
            <span
              class="mocked-styled-39 el-input-add-on"
            >
              Ignore
            </span>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <div
      class="el-mb11"
    >
      <p
        class="el-text-base el-body-text el-has-grey-text el-has-no-margin"
      >
        Selecting active status will determine whether the webhook will fire when changes are made. This will effect your consumption costs so you may wish to disable it periodically. Ignoring when the etag only changes will mean the webhoook only fires when customer data changes.
      </p>
    </div>
    <div
      class="el-fade-in el-form-layout"
    >
      <div
        class="mocked-styled-133 el-input-wrap"
      >
        <div
          class="mocked-styled-40 el-input-group"
        >
          <input
            class="mocked-styled-125 el-toggle-checkbox"
            id="status-toggle"
            type="checkbox"
          />
          <label
            class="el-mt1 el-has-grey-bg el-toggle-label"
            for="status-toggle"
            role="button"
            tabindex="0"
          >
            <span
              class="mocked-styled-123 el-toggle-item"
            >
              Active
            </span>
            <span
              class="mocked-styled-123 el-toggle-item"
            >
              Inactive
            </span>
          </label>
          <label
            class="mocked-styled-41 el-label"
          >
            Status
          </label>
        </div>
      </div>
      <div
        class="mocked-styled-133 el-input-wrap"
      >
        <div
          class="mocked-styled-40 el-input-group"
        >
          <input
            aria-label="Input type checkbox"
            class="mocked-styled-38 el-input"
            id="test-static-id"
            type="checkbox"
          />
          <label
            class="mocked-styled-41 el-label"
            for="test-static-id"
          >
            Ignore where only the etag has been modified
          </label>
          <span
            class="mocked-styled-39 el-input-add-on"
          >
            Ignore
          </span>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
