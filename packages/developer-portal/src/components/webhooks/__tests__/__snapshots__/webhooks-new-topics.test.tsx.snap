// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WebhooksNewTopics should match a snapshot where there are errors 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <div
        class="el-mb11"
      >
        <mock-styled.p
          classname="el-has-grey-text el-has-no-margin"
        >
          Select topics for your webhook from the list below to allow your application to receive real-time notifications about the topics you choose to subscribe to. A single webhook subscription can receive notifications for multiple topics so long as your application has been granted the required permissions.
        </mock-styled.p>
      </div>
      <mock-styled.div
        classname="el-fade-in"
      >
        <mock-styled.div>
          <mock-styled.div
            classname="el-mb5"
          >
            <mock-styled.input
              classname=""
              id="test-static-id"
              placeholder="Search"
            />
            <mock-styled.span
              classname="el-intent-default el-icon-new"
              style="font-size: 1rem;"
            >
              <svg
                fill="none"
                height="1em"
                style="font-size: 1rem;"
                viewBox="0 0 24 24"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="m21.71 20.29-5.4-5.39A7.9 7.9 0 0 0 18 10a8 8 0 1 0-8 8 7.9 7.9 0 0 0 4.9-1.69l5.39 5.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42ZM4 10a6 6 0 1 1 12 0 6 6 0 0 1-12 0Z"
                  fill="currentColor"
                />
              </svg>
            </mock-styled.span>
            <mock-styled.label
              htmlfor="test-static-id"
            >
              Subscription Topics
            </mock-styled.label>
            <mock-styled.span
              classname="el-intent-default"
            >
              Search to get started
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.input
              id="topic-ids"
            />
            <mock-styled.div
              classname=""
            />
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <div
      class="el-mb11"
    >
      <mock-styled.p
        classname="el-has-grey-text el-has-no-margin"
      >
        Select topics for your webhook from the list below to allow your application to receive real-time notifications about the topics you choose to subscribe to. A single webhook subscription can receive notifications for multiple topics so long as your application has been granted the required permissions.
      </mock-styled.p>
    </div>
    <mock-styled.div
      classname="el-fade-in"
    >
      <mock-styled.div>
        <mock-styled.div
          classname="el-mb5"
        >
          <mock-styled.input
            classname=""
            id="test-static-id"
            placeholder="Search"
          />
          <mock-styled.span
            classname="el-intent-default el-icon-new"
            style="font-size: 1rem;"
          >
            <svg
              fill="none"
              height="1em"
              style="font-size: 1rem;"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m21.71 20.29-5.4-5.39A7.9 7.9 0 0 0 18 10a8 8 0 1 0-8 8 7.9 7.9 0 0 0 4.9-1.69l5.39 5.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42ZM4 10a6 6 0 1 1 12 0 6 6 0 0 1-12 0Z"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
          <mock-styled.label
            htmlfor="test-static-id"
          >
            Subscription Topics
          </mock-styled.label>
          <mock-styled.span
            classname="el-intent-default"
          >
            Search to get started
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.input
            id="topic-ids"
          />
          <mock-styled.div
            classname=""
          />
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`WebhooksNewTopics should match a snapshot where there are topics 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <div
        class="el-mb11"
      >
        <mock-styled.p
          classname="el-has-grey-text el-has-no-margin"
        >
          Select topics for your webhook from the list below to allow your application to receive real-time notifications about the topics you choose to subscribe to. A single webhook subscription can receive notifications for multiple topics so long as your application has been granted the required permissions.
        </mock-styled.p>
      </div>
      <mock-styled.div
        classname="el-fade-in"
      >
        <mock-styled.div>
          <mock-styled.div
            classname="el-mb5"
          >
            <mock-styled.input
              classname=""
              id="test-static-id"
              placeholder="Search"
            />
            <mock-styled.span
              classname="el-intent-default el-icon-new"
              style="font-size: 1rem;"
            >
              <svg
                fill="none"
                height="1em"
                style="font-size: 1rem;"
                viewBox="0 0 24 24"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="m21.71 20.29-5.4-5.39A7.9 7.9 0 0 0 18 10a8 8 0 1 0-8 8 7.9 7.9 0 0 0 4.9-1.69l5.39 5.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42ZM4 10a6 6 0 1 1 12 0 6 6 0 0 1-12 0Z"
                  fill="currentColor"
                />
              </svg>
            </mock-styled.span>
            <mock-styled.label
              htmlfor="test-static-id"
            >
              Subscription Topics
            </mock-styled.label>
            <mock-styled.span
              classname="el-intent-default"
            >
              Search to get started
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.input
              id="topic-ids"
            />
            <mock-styled.div
              classname=""
            />
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <div
      class="el-mb11"
    >
      <mock-styled.p
        classname="el-has-grey-text el-has-no-margin"
      >
        Select topics for your webhook from the list below to allow your application to receive real-time notifications about the topics you choose to subscribe to. A single webhook subscription can receive notifications for multiple topics so long as your application has been granted the required permissions.
      </mock-styled.p>
    </div>
    <mock-styled.div
      classname="el-fade-in"
    >
      <mock-styled.div>
        <mock-styled.div
          classname="el-mb5"
        >
          <mock-styled.input
            classname=""
            id="test-static-id"
            placeholder="Search"
          />
          <mock-styled.span
            classname="el-intent-default el-icon-new"
            style="font-size: 1rem;"
          >
            <svg
              fill="none"
              height="1em"
              style="font-size: 1rem;"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m21.71 20.29-5.4-5.39A7.9 7.9 0 0 0 18 10a8 8 0 1 0-8 8 7.9 7.9 0 0 0 4.9-1.69l5.39 5.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42ZM4 10a6 6 0 1 1 12 0 6 6 0 0 1-12 0Z"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
          <mock-styled.label
            htmlfor="test-static-id"
          >
            Subscription Topics
          </mock-styled.label>
          <mock-styled.span
            classname="el-intent-default"
          >
            Search to get started
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.input
            id="topic-ids"
          />
          <mock-styled.div
            classname=""
          />
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
