// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WebhooksNewApp should match a snapshot where there are apps 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="ecbqyq6-el-snack-holder"
      />
      <div
        class="ec47sgk-el-mb11"
      >
        <p
          class="e11jaxfn-el-has-grey-text ewfctk4-el-has-no-margin e1wasvgh-el-body-text"
        >
          First select an app to receive your webhook. Webhooks subscriptions can be set up for any customer who has installed your application. Additionally, you can choose ‘SBOX’ to listen for sandbox environment notifications.
        </p>
      </div>
      <div
        class="e6p05ya-el-fade-in ee6e7by-el-form-layout"
      >
        <div
          class="e1ksxx4v-el-input-wrap"
        >
          <div
            class="e1979rmu-el-input-group"
          >
            <select
              class="e60u3kb-el-select"
            >
              <option
                selected=""
                value=""
              >
                None selected
              </option>
              <option
                value="MOCK_APP_ID"
              >
                MOCK_APP_NAME
              </option>
              <option
                value="MOCK_OTHER_APP_ID"
              >
                MOCK_APP_NAME_ANOTHER
              </option>
            </select>
            <label
              class="e1nbkkrq-el-label"
            >
              Please select an app
            </label>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="ecbqyq6-el-snack-holder"
    />
    <div
      class="ec47sgk-el-mb11"
    >
      <p
        class="e11jaxfn-el-has-grey-text ewfctk4-el-has-no-margin e1wasvgh-el-body-text"
      >
        First select an app to receive your webhook. Webhooks subscriptions can be set up for any customer who has installed your application. Additionally, you can choose ‘SBOX’ to listen for sandbox environment notifications.
      </p>
    </div>
    <div
      class="e6p05ya-el-fade-in ee6e7by-el-form-layout"
    >
      <div
        class="e1ksxx4v-el-input-wrap"
      >
        <div
          class="e1979rmu-el-input-group"
        >
          <select
            class="e60u3kb-el-select"
          >
            <option
              selected=""
              value=""
            >
              None selected
            </option>
            <option
              value="MOCK_APP_ID"
            >
              MOCK_APP_NAME
            </option>
            <option
              value="MOCK_OTHER_APP_ID"
            >
              MOCK_APP_NAME_ANOTHER
            </option>
          </select>
          <label
            class="e1nbkkrq-el-label"
          >
            Please select an app
          </label>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
