// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WebhooksManage should match a snapshot where loading 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="ecbqyq6-el-snack-holder"
      />
      <div
        class="ebhrnzh-el-loader-container"
      >
        <div
          class="eq1m1jz-el-loader"
        >
          <div
            class="exikdu1-el-loader-moving-bar"
          />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="ecbqyq6-el-snack-holder"
    />
    <div
      class="ebhrnzh-el-loader-container"
    >
      <div
        class="eq1m1jz-el-loader"
      >
        <div
          class="exikdu1-el-loader-moving-bar"
        />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`WebhooksManage should match a snapshot where no appId 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="ecbqyq6-el-snack-holder"
      />
      <div
        class="epibvz0-el-intent-secondary evmehgn-el-is-active e1qwk99x-el-pn-is-full-width e15e3rd4-el-pn-is-inline erhlo5n-el-persistent-notification"
      >
        <div
          class="eta6kcl-el-pn-icon"
          data-testid="close-icon"
        >
          <span
            class="ej9yrfo-el-icon"
          >
            <svg />
          </span>
        </div>
        <div
          class="e1geon40-el-pn-content"
        >
          No app selected. Please use the filter option to select an app.
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="ecbqyq6-el-snack-holder"
    />
    <div
      class="epibvz0-el-intent-secondary evmehgn-el-is-active e1qwk99x-el-pn-is-full-width e15e3rd4-el-pn-is-inline erhlo5n-el-persistent-notification"
    >
      <div
        class="eta6kcl-el-pn-icon"
        data-testid="close-icon"
      >
        <span
          class="ej9yrfo-el-icon"
        >
          <svg />
        </span>
      </div>
      <div
        class="e1geon40-el-pn-content"
      >
        No app selected. Please use the filter option to select an app.
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`WebhooksManage should match a snapshot where no data 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="ecbqyq6-el-snack-holder"
      />
      <div
        class="epibvz0-el-intent-secondary evmehgn-el-is-active e1qwk99x-el-pn-is-full-width e15e3rd4-el-pn-is-inline erhlo5n-el-persistent-notification"
      >
        <div
          class="eta6kcl-el-pn-icon"
          data-testid="close-icon"
        >
          <span
            class="ej9yrfo-el-icon"
          >
            <svg />
          </span>
        </div>
        <div
          class="e1geon40-el-pn-content"
        >
          No webhooks found for your application. You can create one from the New Webhook wizard.
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="ecbqyq6-el-snack-holder"
    />
    <div
      class="epibvz0-el-intent-secondary evmehgn-el-is-active e1qwk99x-el-pn-is-full-width e15e3rd4-el-pn-is-inline erhlo5n-el-persistent-notification"
    >
      <div
        class="eta6kcl-el-pn-icon"
        data-testid="close-icon"
      >
        <span
          class="ej9yrfo-el-icon"
        >
          <svg />
        </span>
      </div>
      <div
        class="e1geon40-el-pn-content"
      >
        No webhooks found for your application. You can create one from the New Webhook wizard.
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`WebhooksManage should match a snapshot where there are subscriptions 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="ecbqyq6-el-snack-holder"
      />
      <div
        class="ec47sgk-el-mb11 ejadz4k-el-table"
        data-has-call-to-action="false"
        data-has-expandable-action="true"
        data-num-columns-excl-action-col="4"
      >
        <div
          class="e1ijk5il-el-table-headers-row"
        >
          <div
            class="e1co3p83-el-table-header"
          >
            URL
          </div>
          <div
            class="e1co3p83-el-table-header"
          >
            Topics
          </div>
          <div
            class="e1co3p83-el-table-header"
          >
            Customer
          </div>
          <div
            class="e1co3p83-el-table-header"
          >
            Status
          </div>
          <div
            class="e1co3p83-el-table-header"
          >
            <span
              class="ej9yrfo-el-icon"
              style="font-size: 1.2rem;"
            >
              <svg />
            </span>
          </div>
        </div>
        <div
          class="e1gfmg2g-el-table-row-container"
        >
          <div
            class="e1qy4g2u-el-table-row"
          >
            <div
              class="e1n0yfsy-el-table-cell-has-dark-text e4zpaja-el-table-cell"
            >
              <div
                class="e1t8i3z1-el-table-cell-content"
              >
                https://en7u51gyc2mf7.x.pipedream.net
              </div>
            </div>
            <div
              class="e4zpaja-el-table-cell"
            >
              <div
                class="e1t8i3z1-el-table-cell-content"
              />
            </div>
            <div
              class="e4zpaja-el-table-cell"
            >
              <div
                class="e1t8i3z1-el-table-cell-content"
              />
            </div>
            <div
              class="e4zpaja-el-table-cell"
            >
              <div
                class="e1t8i3z1-el-table-cell-content"
              >
                <span
                  class="e11oi1zt-el-intent-success e1cp9zgf-el-status-indicator"
                />
                 
                Active
              </div>
            </div>
            <div
              class="e1fmntjl-el-table-expandable-row-trigger-cell"
            >
              <span
                class="epibvz0-el-intent-secondary ej9yrfo-el-icon"
              >
                <svg />
              </span>
            </div>
          </div>
          <div
            class="e3q521i-el-table-expandable-row"
          >
            <div
              class="eygkx5t-el-table-expandable-container"
            >
              <div
                class="e1de2pym-el-flex-justify-center e2kmzjs-el-flex-container"
              >
                <div
                  class="ebqwrow-el-button-group"
                >
                  <div
                    class="eh76izl-el-button-group-inner"
                  >
                    <button
                      class="ebee6r1-el-intent-primary e1tqqdf9-el-button"
                    >
                      Edit
                      <div
                        class="e1q1vabn-el-button-loader"
                      />
                    </button>
                    <button
                      class="ebee6r1-el-intent-primary e1tqqdf9-el-button"
                    >
                      Ping
                      <div
                        class="e1q1vabn-el-button-loader"
                      />
                    </button>
                    <button
                      class="ebee6r1-el-intent-primary e1tqqdf9-el-button"
                    >
                      Fetch Public Key
                      <div
                        class="e1q1vabn-el-button-loader"
                      />
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        class="e1nnyshg-el-pagination-wrap"
      >
        <div
          class="ex6bmfc-el-pagination-text"
        >
          <input
            class="e1yynswi-el-pagination-input"
            value="1"
          />
           of 
          1
        </div>
        <button
          class="e1g9l338-el-pagination-button"
          data-testid="back-button"
          type="button"
        >
          <span
            class="ej9yrfo-el-icon"
          >
            <svg />
          </span>
        </button>
        <button
          class="e1g9l338-el-pagination-button"
          data-testid="forward-button"
          type="button"
        >
          <span
            class="ej9yrfo-el-icon"
          >
            <svg />
          </span>
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="ecbqyq6-el-snack-holder"
    />
    <div
      class="ec47sgk-el-mb11 ejadz4k-el-table"
      data-has-call-to-action="false"
      data-has-expandable-action="true"
      data-num-columns-excl-action-col="4"
    >
      <div
        class="e1ijk5il-el-table-headers-row"
      >
        <div
          class="e1co3p83-el-table-header"
        >
          URL
        </div>
        <div
          class="e1co3p83-el-table-header"
        >
          Topics
        </div>
        <div
          class="e1co3p83-el-table-header"
        >
          Customer
        </div>
        <div
          class="e1co3p83-el-table-header"
        >
          Status
        </div>
        <div
          class="e1co3p83-el-table-header"
        >
          <span
            class="ej9yrfo-el-icon"
            style="font-size: 1.2rem;"
          >
            <svg />
          </span>
        </div>
      </div>
      <div
        class="e1gfmg2g-el-table-row-container"
      >
        <div
          class="e1qy4g2u-el-table-row"
        >
          <div
            class="e1n0yfsy-el-table-cell-has-dark-text e4zpaja-el-table-cell"
          >
            <div
              class="e1t8i3z1-el-table-cell-content"
            >
              https://en7u51gyc2mf7.x.pipedream.net
            </div>
          </div>
          <div
            class="e4zpaja-el-table-cell"
          >
            <div
              class="e1t8i3z1-el-table-cell-content"
            />
          </div>
          <div
            class="e4zpaja-el-table-cell"
          >
            <div
              class="e1t8i3z1-el-table-cell-content"
            />
          </div>
          <div
            class="e4zpaja-el-table-cell"
          >
            <div
              class="e1t8i3z1-el-table-cell-content"
            >
              <span
                class="e11oi1zt-el-intent-success e1cp9zgf-el-status-indicator"
              />
               
              Active
            </div>
          </div>
          <div
            class="e1fmntjl-el-table-expandable-row-trigger-cell"
          >
            <span
              class="epibvz0-el-intent-secondary ej9yrfo-el-icon"
            >
              <svg />
            </span>
          </div>
        </div>
        <div
          class="e3q521i-el-table-expandable-row"
        >
          <div
            class="eygkx5t-el-table-expandable-container"
          >
            <div
              class="e1de2pym-el-flex-justify-center e2kmzjs-el-flex-container"
            >
              <div
                class="ebqwrow-el-button-group"
              >
                <div
                  class="eh76izl-el-button-group-inner"
                >
                  <button
                    class="ebee6r1-el-intent-primary e1tqqdf9-el-button"
                  >
                    Edit
                    <div
                      class="e1q1vabn-el-button-loader"
                    />
                  </button>
                  <button
                    class="ebee6r1-el-intent-primary e1tqqdf9-el-button"
                  >
                    Ping
                    <div
                      class="e1q1vabn-el-button-loader"
                    />
                  </button>
                  <button
                    class="ebee6r1-el-intent-primary e1tqqdf9-el-button"
                  >
                    Fetch Public Key
                    <div
                      class="e1q1vabn-el-button-loader"
                    />
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      class="e1nnyshg-el-pagination-wrap"
    >
      <div
        class="ex6bmfc-el-pagination-text"
      >
        <input
          class="e1yynswi-el-pagination-input"
          value="1"
        />
         of 
        1
      </div>
      <button
        class="e1g9l338-el-pagination-button"
        data-testid="back-button"
        type="button"
      >
        <span
          class="ej9yrfo-el-icon"
        >
          <svg />
        </span>
      </button>
      <button
        class="e1g9l338-el-pagination-button"
        data-testid="forward-button"
        type="button"
      >
        <span
          class="ej9yrfo-el-icon"
        >
          <svg />
        </span>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
