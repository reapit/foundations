// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WebhooksWrapper should match a snapshot for the /webhooks/about page 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.h1
        classname="el-text-base"
      >
        Webhooks
      </mock-styled.h1>
      <mock-styled.div
        aria-hidden="true"
        classname=""
      />
      <mock-styled.div
        classname=""
        id=":r3:"
      >
        <mock-styled.button
          aria-controls=":r3:"
          classname="el-floating-button el-intent-primary"
        >
          <mock-styled.div />
          <mock-styled.span
            classname="el-icon-new"
            role="img"
          >
            <svg
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M20 11H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2M4 7h16a1 1 0 1 0 0-2H4a1 1 0 0 0 0 2m16 10H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
        </mock-styled.button>
      </mock-styled.div>
      <mock-styled.div
        classname="el-tabs-full-width"
        role="tablist"
      >
        <mock-styled.div>
          <mock-styled.input
            aria-selected="true"
            id="webhook-tab-about"
            name="webhook-tabs"
            role="tab"
            type="radio"
            value="/webhooks/about"
          />
          <mock-styled.label
            htmlfor="webhook-tab-about"
          >
            <span
              class="el-tabs-item"
            >
              About Webhooks
            </span>
          </mock-styled.label>
          <mock-styled.input
            aria-selected="false"
            id="webhook-tab-new"
            name="webhook-tabs"
            role="tab"
            type="radio"
            value="/webhooks/new"
          />
          <mock-styled.label
            htmlfor="webhook-tab-new"
          >
            <span
              class="el-tabs-item"
            >
              Add Webhook
            </span>
          </mock-styled.label>
          <mock-styled.input
            aria-selected="false"
            id="webhook-tab-manage"
            name="webhook-tabs"
            role="tab"
            type="radio"
            value="/webhooks/manage"
          />
          <mock-styled.label
            htmlfor="webhook-tab-manage"
          >
            <span
              class="el-tabs-item"
            >
              Manage Webhooks
            </span>
          </mock-styled.label>
          <mock-styled.input
            aria-selected="false"
            id="webhook-tab-logs"
            name="webhook-tabs"
            role="tab"
            type="radio"
            value="/webhooks/logs"
          />
          <mock-styled.label
            htmlfor="webhook-tab-logs"
          >
            <span
              class="el-tabs-item"
            >
              Transaction Logs
            </span>
          </mock-styled.label>
        </mock-styled.div>
        <mock-styled.div
          classname="el-tabs-full-width"
        />
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.h1
      classname="el-text-base"
    >
      Webhooks
    </mock-styled.h1>
    <mock-styled.div
      aria-hidden="true"
      classname=""
    />
    <mock-styled.div
      classname=""
      id=":r3:"
    >
      <mock-styled.button
        aria-controls=":r3:"
        classname="el-floating-button el-intent-primary"
      >
        <mock-styled.div />
        <mock-styled.span
          classname="el-icon-new"
          role="img"
        >
          <svg
            fill="none"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M20 11H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2M4 7h16a1 1 0 1 0 0-2H4a1 1 0 0 0 0 2m16 10H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2"
              fill="currentColor"
            />
          </svg>
        </mock-styled.span>
      </mock-styled.button>
    </mock-styled.div>
    <mock-styled.div
      classname="el-tabs-full-width"
      role="tablist"
    >
      <mock-styled.div>
        <mock-styled.input
          aria-selected="true"
          id="webhook-tab-about"
          name="webhook-tabs"
          role="tab"
          type="radio"
          value="/webhooks/about"
        />
        <mock-styled.label
          htmlfor="webhook-tab-about"
        >
          <span
            class="el-tabs-item"
          >
            About Webhooks
          </span>
        </mock-styled.label>
        <mock-styled.input
          aria-selected="false"
          id="webhook-tab-new"
          name="webhook-tabs"
          role="tab"
          type="radio"
          value="/webhooks/new"
        />
        <mock-styled.label
          htmlfor="webhook-tab-new"
        >
          <span
            class="el-tabs-item"
          >
            Add Webhook
          </span>
        </mock-styled.label>
        <mock-styled.input
          aria-selected="false"
          id="webhook-tab-manage"
          name="webhook-tabs"
          role="tab"
          type="radio"
          value="/webhooks/manage"
        />
        <mock-styled.label
          htmlfor="webhook-tab-manage"
        >
          <span
            class="el-tabs-item"
          >
            Manage Webhooks
          </span>
        </mock-styled.label>
        <mock-styled.input
          aria-selected="false"
          id="webhook-tab-logs"
          name="webhook-tabs"
          role="tab"
          type="radio"
          value="/webhooks/logs"
        />
        <mock-styled.label
          htmlfor="webhook-tab-logs"
        >
          <span
            class="el-tabs-item"
          >
            Transaction Logs
          </span>
        </mock-styled.label>
      </mock-styled.div>
      <mock-styled.div
        classname="el-tabs-full-width"
      />
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`WebhooksWrapper should match a snapshot for the /webhooks/logs page 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.h1
        classname="el-text-base"
      >
        Webhooks
      </mock-styled.h1>
      <mock-styled.div
        aria-hidden="true"
        classname=""
      />
      <mock-styled.div
        classname=""
        id=":r2:"
      >
        <mock-styled.button
          aria-controls=":r2:"
          classname="el-floating-button el-intent-primary"
        >
          <mock-styled.div />
          <mock-styled.span
            classname="el-icon-new"
            role="img"
          >
            <svg
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M20 11H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2M4 7h16a1 1 0 1 0 0-2H4a1 1 0 0 0 0 2m16 10H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
        </mock-styled.button>
      </mock-styled.div>
      <mock-styled.div
        classname="el-tabs-full-width"
        role="tablist"
      >
        <mock-styled.div>
          <mock-styled.input
            aria-selected="false"
            id="webhook-tab-about"
            name="webhook-tabs"
            role="tab"
            type="radio"
            value="/webhooks/about"
          />
          <mock-styled.label
            htmlfor="webhook-tab-about"
          >
            <span
              class="el-tabs-item"
            >
              About Webhooks
            </span>
          </mock-styled.label>
          <mock-styled.input
            aria-selected="false"
            id="webhook-tab-new"
            name="webhook-tabs"
            role="tab"
            type="radio"
            value="/webhooks/new"
          />
          <mock-styled.label
            htmlfor="webhook-tab-new"
          >
            <span
              class="el-tabs-item"
            >
              Add Webhook
            </span>
          </mock-styled.label>
          <mock-styled.input
            aria-selected="false"
            id="webhook-tab-manage"
            name="webhook-tabs"
            role="tab"
            type="radio"
            value="/webhooks/manage"
          />
          <mock-styled.label
            htmlfor="webhook-tab-manage"
          >
            <span
              class="el-tabs-item"
            >
              Manage Webhooks
            </span>
          </mock-styled.label>
          <mock-styled.input
            aria-selected="true"
            id="webhook-tab-logs"
            name="webhook-tabs"
            role="tab"
            type="radio"
            value="/webhooks/logs"
          />
          <mock-styled.label
            htmlfor="webhook-tab-logs"
          >
            <span
              class="el-tabs-item"
            >
              Transaction Logs
            </span>
          </mock-styled.label>
        </mock-styled.div>
        <mock-styled.div
          classname="el-tabs-full-width"
        />
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.h1
      classname="el-text-base"
    >
      Webhooks
    </mock-styled.h1>
    <mock-styled.div
      aria-hidden="true"
      classname=""
    />
    <mock-styled.div
      classname=""
      id=":r2:"
    >
      <mock-styled.button
        aria-controls=":r2:"
        classname="el-floating-button el-intent-primary"
      >
        <mock-styled.div />
        <mock-styled.span
          classname="el-icon-new"
          role="img"
        >
          <svg
            fill="none"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M20 11H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2M4 7h16a1 1 0 1 0 0-2H4a1 1 0 0 0 0 2m16 10H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2"
              fill="currentColor"
            />
          </svg>
        </mock-styled.span>
      </mock-styled.button>
    </mock-styled.div>
    <mock-styled.div
      classname="el-tabs-full-width"
      role="tablist"
    >
      <mock-styled.div>
        <mock-styled.input
          aria-selected="false"
          id="webhook-tab-about"
          name="webhook-tabs"
          role="tab"
          type="radio"
          value="/webhooks/about"
        />
        <mock-styled.label
          htmlfor="webhook-tab-about"
        >
          <span
            class="el-tabs-item"
          >
            About Webhooks
          </span>
        </mock-styled.label>
        <mock-styled.input
          aria-selected="false"
          id="webhook-tab-new"
          name="webhook-tabs"
          role="tab"
          type="radio"
          value="/webhooks/new"
        />
        <mock-styled.label
          htmlfor="webhook-tab-new"
        >
          <span
            class="el-tabs-item"
          >
            Add Webhook
          </span>
        </mock-styled.label>
        <mock-styled.input
          aria-selected="false"
          id="webhook-tab-manage"
          name="webhook-tabs"
          role="tab"
          type="radio"
          value="/webhooks/manage"
        />
        <mock-styled.label
          htmlfor="webhook-tab-manage"
        >
          <span
            class="el-tabs-item"
          >
            Manage Webhooks
          </span>
        </mock-styled.label>
        <mock-styled.input
          aria-selected="true"
          id="webhook-tab-logs"
          name="webhook-tabs"
          role="tab"
          type="radio"
          value="/webhooks/logs"
        />
        <mock-styled.label
          htmlfor="webhook-tab-logs"
        >
          <span
            class="el-tabs-item"
          >
            Transaction Logs
          </span>
        </mock-styled.label>
      </mock-styled.div>
      <mock-styled.div
        classname="el-tabs-full-width"
      />
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`WebhooksWrapper should match a snapshot for the /webhooks/manage page 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.h1
        classname="el-text-base"
      >
        Webhooks
      </mock-styled.h1>
      <mock-styled.div
        aria-hidden="true"
        classname=""
      />
      <mock-styled.div
        classname=""
        id=":r1:"
      >
        <mock-styled.button
          aria-controls=":r1:"
          classname="el-floating-button el-intent-primary"
        >
          <mock-styled.div />
          <mock-styled.span
            classname="el-icon-new"
            role="img"
          >
            <svg
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M20 11H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2M4 7h16a1 1 0 1 0 0-2H4a1 1 0 0 0 0 2m16 10H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
        </mock-styled.button>
      </mock-styled.div>
      <mock-styled.div
        classname="el-tabs-full-width"
        role="tablist"
      >
        <mock-styled.div>
          <mock-styled.input
            aria-selected="false"
            id="webhook-tab-about"
            name="webhook-tabs"
            role="tab"
            type="radio"
            value="/webhooks/about"
          />
          <mock-styled.label
            htmlfor="webhook-tab-about"
          >
            <span
              class="el-tabs-item"
            >
              About Webhooks
            </span>
          </mock-styled.label>
          <mock-styled.input
            aria-selected="false"
            id="webhook-tab-new"
            name="webhook-tabs"
            role="tab"
            type="radio"
            value="/webhooks/new"
          />
          <mock-styled.label
            htmlfor="webhook-tab-new"
          >
            <span
              class="el-tabs-item"
            >
              Add Webhook
            </span>
          </mock-styled.label>
          <mock-styled.input
            aria-selected="true"
            id="webhook-tab-manage"
            name="webhook-tabs"
            role="tab"
            type="radio"
            value="/webhooks/manage"
          />
          <mock-styled.label
            htmlfor="webhook-tab-manage"
          >
            <span
              class="el-tabs-item"
            >
              Manage Webhooks
            </span>
          </mock-styled.label>
          <mock-styled.input
            aria-selected="false"
            id="webhook-tab-logs"
            name="webhook-tabs"
            role="tab"
            type="radio"
            value="/webhooks/logs"
          />
          <mock-styled.label
            htmlfor="webhook-tab-logs"
          >
            <span
              class="el-tabs-item"
            >
              Transaction Logs
            </span>
          </mock-styled.label>
        </mock-styled.div>
        <mock-styled.div
          classname="el-tabs-full-width"
        />
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.h1
      classname="el-text-base"
    >
      Webhooks
    </mock-styled.h1>
    <mock-styled.div
      aria-hidden="true"
      classname=""
    />
    <mock-styled.div
      classname=""
      id=":r1:"
    >
      <mock-styled.button
        aria-controls=":r1:"
        classname="el-floating-button el-intent-primary"
      >
        <mock-styled.div />
        <mock-styled.span
          classname="el-icon-new"
          role="img"
        >
          <svg
            fill="none"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M20 11H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2M4 7h16a1 1 0 1 0 0-2H4a1 1 0 0 0 0 2m16 10H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2"
              fill="currentColor"
            />
          </svg>
        </mock-styled.span>
      </mock-styled.button>
    </mock-styled.div>
    <mock-styled.div
      classname="el-tabs-full-width"
      role="tablist"
    >
      <mock-styled.div>
        <mock-styled.input
          aria-selected="false"
          id="webhook-tab-about"
          name="webhook-tabs"
          role="tab"
          type="radio"
          value="/webhooks/about"
        />
        <mock-styled.label
          htmlfor="webhook-tab-about"
        >
          <span
            class="el-tabs-item"
          >
            About Webhooks
          </span>
        </mock-styled.label>
        <mock-styled.input
          aria-selected="false"
          id="webhook-tab-new"
          name="webhook-tabs"
          role="tab"
          type="radio"
          value="/webhooks/new"
        />
        <mock-styled.label
          htmlfor="webhook-tab-new"
        >
          <span
            class="el-tabs-item"
          >
            Add Webhook
          </span>
        </mock-styled.label>
        <mock-styled.input
          aria-selected="true"
          id="webhook-tab-manage"
          name="webhook-tabs"
          role="tab"
          type="radio"
          value="/webhooks/manage"
        />
        <mock-styled.label
          htmlfor="webhook-tab-manage"
        >
          <span
            class="el-tabs-item"
          >
            Manage Webhooks
          </span>
        </mock-styled.label>
        <mock-styled.input
          aria-selected="false"
          id="webhook-tab-logs"
          name="webhook-tabs"
          role="tab"
          type="radio"
          value="/webhooks/logs"
        />
        <mock-styled.label
          htmlfor="webhook-tab-logs"
        >
          <span
            class="el-tabs-item"
          >
            Transaction Logs
          </span>
        </mock-styled.label>
      </mock-styled.div>
      <mock-styled.div
        classname="el-tabs-full-width"
      />
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`WebhooksWrapper should match a snapshot for the /webhooks/new page 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.h1
        classname="el-text-base"
      >
        Webhooks
      </mock-styled.h1>
      <mock-styled.div
        aria-hidden="true"
        classname=""
      />
      <mock-styled.div
        classname=""
        id=":r0:"
      >
        <mock-styled.button
          aria-controls=":r0:"
          classname="el-floating-button el-intent-primary"
        >
          <mock-styled.div />
          <mock-styled.span
            classname="el-icon-new"
            role="img"
          >
            <svg
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M20 11H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2M4 7h16a1 1 0 1 0 0-2H4a1 1 0 0 0 0 2m16 10H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
        </mock-styled.button>
      </mock-styled.div>
      <mock-styled.div
        classname="el-tabs-full-width"
        role="tablist"
      >
        <mock-styled.div>
          <mock-styled.input
            aria-selected="false"
            id="webhook-tab-about"
            name="webhook-tabs"
            role="tab"
            type="radio"
            value="/webhooks/about"
          />
          <mock-styled.label
            htmlfor="webhook-tab-about"
          >
            <span
              class="el-tabs-item"
            >
              About Webhooks
            </span>
          </mock-styled.label>
          <mock-styled.input
            aria-selected="true"
            id="webhook-tab-new"
            name="webhook-tabs"
            role="tab"
            type="radio"
            value="/webhooks/new"
          />
          <mock-styled.label
            htmlfor="webhook-tab-new"
          >
            <span
              class="el-tabs-item"
            >
              Add Webhook
            </span>
          </mock-styled.label>
          <mock-styled.input
            aria-selected="false"
            id="webhook-tab-manage"
            name="webhook-tabs"
            role="tab"
            type="radio"
            value="/webhooks/manage"
          />
          <mock-styled.label
            htmlfor="webhook-tab-manage"
          >
            <span
              class="el-tabs-item"
            >
              Manage Webhooks
            </span>
          </mock-styled.label>
          <mock-styled.input
            aria-selected="false"
            id="webhook-tab-logs"
            name="webhook-tabs"
            role="tab"
            type="radio"
            value="/webhooks/logs"
          />
          <mock-styled.label
            htmlfor="webhook-tab-logs"
          >
            <span
              class="el-tabs-item"
            >
              Transaction Logs
            </span>
          </mock-styled.label>
        </mock-styled.div>
        <mock-styled.div
          classname="el-tabs-full-width"
        />
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.h1
      classname="el-text-base"
    >
      Webhooks
    </mock-styled.h1>
    <mock-styled.div
      aria-hidden="true"
      classname=""
    />
    <mock-styled.div
      classname=""
      id=":r0:"
    >
      <mock-styled.button
        aria-controls=":r0:"
        classname="el-floating-button el-intent-primary"
      >
        <mock-styled.div />
        <mock-styled.span
          classname="el-icon-new"
          role="img"
        >
          <svg
            fill="none"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M20 11H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2M4 7h16a1 1 0 1 0 0-2H4a1 1 0 0 0 0 2m16 10H4a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2"
              fill="currentColor"
            />
          </svg>
        </mock-styled.span>
      </mock-styled.button>
    </mock-styled.div>
    <mock-styled.div
      classname="el-tabs-full-width"
      role="tablist"
    >
      <mock-styled.div>
        <mock-styled.input
          aria-selected="false"
          id="webhook-tab-about"
          name="webhook-tabs"
          role="tab"
          type="radio"
          value="/webhooks/about"
        />
        <mock-styled.label
          htmlfor="webhook-tab-about"
        >
          <span
            class="el-tabs-item"
          >
            About Webhooks
          </span>
        </mock-styled.label>
        <mock-styled.input
          aria-selected="true"
          id="webhook-tab-new"
          name="webhook-tabs"
          role="tab"
          type="radio"
          value="/webhooks/new"
        />
        <mock-styled.label
          htmlfor="webhook-tab-new"
        >
          <span
            class="el-tabs-item"
          >
            Add Webhook
          </span>
        </mock-styled.label>
        <mock-styled.input
          aria-selected="false"
          id="webhook-tab-manage"
          name="webhook-tabs"
          role="tab"
          type="radio"
          value="/webhooks/manage"
        />
        <mock-styled.label
          htmlfor="webhook-tab-manage"
        >
          <span
            class="el-tabs-item"
          >
            Manage Webhooks
          </span>
        </mock-styled.label>
        <mock-styled.input
          aria-selected="false"
          id="webhook-tab-logs"
          name="webhook-tabs"
          role="tab"
          type="radio"
          value="/webhooks/logs"
        />
        <mock-styled.label
          htmlfor="webhook-tab-logs"
        >
          <span
            class="el-tabs-item"
          >
            Transaction Logs
          </span>
        </mock-styled.label>
      </mock-styled.div>
      <mock-styled.div
        classname="el-tabs-full-width"
      />
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
