// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WebhooksManageForm should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <form
        class="mock-css.
  padding: 1.5rem;
"
      >
        <mock-styled.div
          classname="mock-css.
  justify-content: space-between;
 mock-css.
  align-items: center;
 mock-css.
  margin-bottom: 2.5rem;
"
        >
          <mock-styled.h2
            classname="mock-css."
          >
            Edit Webhook
          </mock-styled.h2>
          <mock-styled.div>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.button
                classname="mock-css."
                type="button"
              >
                <mock-styled.div />
                Delete
              </mock-styled.button>
              <mock-styled.button
                classname="mock-css."
                type="button"
              >
                <mock-styled.div />
                Cancel
              </mock-styled.button>
              <mock-styled.button
                classname="mock-css."
                type="submit"
              >
                <mock-styled.div />
                Update
              </mock-styled.button>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="url"
                placeholder="Enter secure https:// url"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Webhook URL
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div
              classname="mock-css.
  flex-wrap: wrap;
 mock-css.
  justify-content: space-between;
 mock-css.
  align-items: center;
 mock-css.
  margin-bottom: 0.75rem;
"
            >
              <mock-styled.div
                classname="mock-css.
  min-width: 210px;
"
              >
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  placeholder="Search topics to get started"
                />
                <mock-styled.span
                  classname=""
                >
                  <svg />
                </mock-styled.span>
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Subscription topics
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                id="topic-edit-ids-MOCK_ID"
                name="topicIds"
              />
              <mock-styled.div
                classname=""
              />
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.label
              classname="mock-css.
  margin-left: 0.5rem;
 mock-css.
  margin-bottom: 0.75rem;
"
            >
              Subscription customers
            </mock-styled.label>
            <mock-styled.div>
              <mock-styled.input
                id="customer-edit-ids-MOCK_ID"
                name="customerIds"
              />
              <mock-styled.div
                classname=""
              />
              <mock-styled.div
                classname=""
              >
                <mock-styled.input
                  id="test-static-id"
                  type="checkbox"
                />
                <mock-styled.label
                  classname="mock-css."
                  htmlfor="test-static-id"
                >
                  All Customers
                </mock-styled.label>
                <mock-styled.input
                  id="test-static-id"
                  type="checkbox"
                />
                <mock-styled.label
                  classname="mock-css."
                  htmlfor="test-static-id"
                >
                  Sandbox Estates
                </mock-styled.label>
                <mock-styled.input
                  id="test-static-id"
                  type="checkbox"
                />
                <mock-styled.label
                  classname="mock-css."
                  htmlfor="test-static-id"
                >
                  Reapit Sales
                </mock-styled.label>
                <mock-styled.input
                  id="test-static-id"
                  type="checkbox"
                />
                <mock-styled.label
                  classname="mock-css."
                  htmlfor="test-static-id"
                >
                  Foo Bar
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div
              classname="mock-css.
  flex-wrap: wrap;
 mock-css.
  justify-content: space-between;
 mock-css.
  align-items: center;
 mock-css.
  margin-bottom: 0.75rem;
"
            >
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  placeholder="Type and press enter to add a field"
                  value=""
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Semi-structured Fields
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                id="semi-structured-fields-MOCK_ID"
                name="extraFields"
              />
              <mock-styled.div
                classname=""
              >
                <p>
                  Please enter a semi-structured field name above, then press enter.
                </p>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.label>
              Status
            </mock-styled.label>
            <mock-styled.input
              id="status-edit-toggle-MOCK_ID"
              name="active"
              type="checkbox"
            />
            <mock-styled.label
              classname="mock-css."
              htmlfor="status-edit-toggle-MOCK_ID"
            >
              <mock-styled.span>
                Active
              </mock-styled.span>
              <mock-styled.span>
                Inactive
              </mock-styled.span>
            </mock-styled.label>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="ignoreEtagOnlyChanges"
                type="checkbox"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Ignore where only the etag has been modified
              </mock-styled.label>
              <mock-styled.span
                classname=""
              >
                Ignore
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </form>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <form
      class="mock-css.
  padding: 1.5rem;
"
    >
      <mock-styled.div
        classname="mock-css.
  justify-content: space-between;
 mock-css.
  align-items: center;
 mock-css.
  margin-bottom: 2.5rem;
"
      >
        <mock-styled.h2
          classname="mock-css."
        >
          Edit Webhook
        </mock-styled.h2>
        <mock-styled.div>
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.button
              classname="mock-css."
              type="button"
            >
              <mock-styled.div />
              Delete
            </mock-styled.button>
            <mock-styled.button
              classname="mock-css."
              type="button"
            >
              <mock-styled.div />
              Cancel
            </mock-styled.button>
            <mock-styled.button
              classname="mock-css."
              type="submit"
            >
              <mock-styled.div />
              Update
            </mock-styled.button>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.input
              classname=""
              id="test-static-id"
              name="url"
              placeholder="Enter secure https:// url"
            />
            <mock-styled.label
              htmlfor="test-static-id"
            >
              Webhook URL
            </mock-styled.label>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  flex-wrap: wrap;
 mock-css.
  justify-content: space-between;
 mock-css.
  align-items: center;
 mock-css.
  margin-bottom: 0.75rem;
"
          >
            <mock-styled.div
              classname="mock-css.
  min-width: 210px;
"
            >
              <mock-styled.input
                classname=""
                id="test-static-id"
                placeholder="Search topics to get started"
              />
              <mock-styled.span
                classname=""
              >
                <svg />
              </mock-styled.span>
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Subscription topics
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.input
              id="topic-edit-ids-MOCK_ID"
              name="topicIds"
            />
            <mock-styled.div
              classname=""
            />
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.label
            classname="mock-css.
  margin-left: 0.5rem;
 mock-css.
  margin-bottom: 0.75rem;
"
          >
            Subscription customers
          </mock-styled.label>
          <mock-styled.div>
            <mock-styled.input
              id="customer-edit-ids-MOCK_ID"
              name="customerIds"
            />
            <mock-styled.div
              classname=""
            />
            <mock-styled.div
              classname=""
            >
              <mock-styled.input
                id="test-static-id"
                type="checkbox"
              />
              <mock-styled.label
                classname="mock-css."
                htmlfor="test-static-id"
              >
                All Customers
              </mock-styled.label>
              <mock-styled.input
                id="test-static-id"
                type="checkbox"
              />
              <mock-styled.label
                classname="mock-css."
                htmlfor="test-static-id"
              >
                Sandbox Estates
              </mock-styled.label>
              <mock-styled.input
                id="test-static-id"
                type="checkbox"
              />
              <mock-styled.label
                classname="mock-css."
                htmlfor="test-static-id"
              >
                Reapit Sales
              </mock-styled.label>
              <mock-styled.input
                id="test-static-id"
                type="checkbox"
              />
              <mock-styled.label
                classname="mock-css."
                htmlfor="test-static-id"
              >
                Foo Bar
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  flex-wrap: wrap;
 mock-css.
  justify-content: space-between;
 mock-css.
  align-items: center;
 mock-css.
  margin-bottom: 0.75rem;
"
          >
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                placeholder="Type and press enter to add a field"
                value=""
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Semi-structured Fields
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.input
              id="semi-structured-fields-MOCK_ID"
              name="extraFields"
            />
            <mock-styled.div
              classname=""
            >
              <p>
                Please enter a semi-structured field name above, then press enter.
              </p>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.label>
            Status
          </mock-styled.label>
          <mock-styled.input
            id="status-edit-toggle-MOCK_ID"
            name="active"
            type="checkbox"
          />
          <mock-styled.label
            classname="mock-css."
            htmlfor="status-edit-toggle-MOCK_ID"
          >
            <mock-styled.span>
              Active
            </mock-styled.span>
            <mock-styled.span>
              Inactive
            </mock-styled.span>
          </mock-styled.label>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.input
              classname=""
              id="test-static-id"
              name="ignoreEtagOnlyChanges"
              type="checkbox"
            />
            <mock-styled.label
              htmlfor="test-static-id"
            >
              Ignore where only the etag has been modified
            </mock-styled.label>
            <mock-styled.span
              classname=""
            >
              Ignore
            </mock-styled.span>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
