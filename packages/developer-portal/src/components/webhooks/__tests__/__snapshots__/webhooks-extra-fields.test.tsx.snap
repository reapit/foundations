// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WebhooksExtraFields should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <div
        class="el-mb11"
      >
        <p
          class="el-text-base el-body-text el-has-grey-text el-has-no-margin"
        >
          Add any semi-structured fields that you would like included in the webhook payload. If you
          '
          re not sure what to put here, leave it blank.
        </p>
      </div>
      <div
        class="el-fade-in el-form-layout"
      >
        <div
          class="mocked-styled-134 el-input-wrap-med"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <div
              class="el-flex-container el-flex-wrap el-flex-justify-between el-flex-align-center el-mb5"
            >
              <div
                class="mocked-styled-40 el-input-group"
              >
                <input
                  aria-label="Input type undefined"
                  class="mocked-styled-38 el-input"
                  id="test-static-id"
                  placeholder="Type and press enter to add a field"
                  value=""
                />
                <label
                  class="mocked-styled-41 el-label"
                  for="test-static-id"
                >
                  Semi-structured Fields
                </label>
              </div>
            </div>
            <div
              class="mocked-styled-58 el-multi-select-input-wrapper"
            >
              <input
                class="mocked-styled-57 el-multi-select-input"
                id="semi-structured-fields"
              />
              <div
                class="mocked-styled-55 el-multi-select-selected"
              >
                <p>
                  Please enter a semi-structured field name above, then press enter.
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <div
      class="el-mb11"
    >
      <p
        class="el-text-base el-body-text el-has-grey-text el-has-no-margin"
      >
        Add any semi-structured fields that you would like included in the webhook payload. If you
        '
        re not sure what to put here, leave it blank.
      </p>
    </div>
    <div
      class="el-fade-in el-form-layout"
    >
      <div
        class="mocked-styled-134 el-input-wrap-med"
      >
        <div
          class="mocked-styled-40 el-input-group"
        >
          <div
            class="el-flex-container el-flex-wrap el-flex-justify-between el-flex-align-center el-mb5"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                id="test-static-id"
                placeholder="Type and press enter to add a field"
                value=""
              />
              <label
                class="mocked-styled-41 el-label"
                for="test-static-id"
              >
                Semi-structured Fields
              </label>
            </div>
          </div>
          <div
            class="mocked-styled-58 el-multi-select-input-wrapper"
          >
            <input
              class="mocked-styled-57 el-multi-select-input"
              id="semi-structured-fields"
            />
            <div
              class="mocked-styled-55 el-multi-select-selected"
            >
              <p>
                Please enter a semi-structured field name above, then press enter.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
