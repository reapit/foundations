// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WebhooksEditControls should match a snapshot with controls content 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <div
        class="el-flex-container el-flex-justify-center"
      >
        <div
          class="mocked-styled-2 el-button-group"
        >
          <div
            class="mocked-styled-3 el-button-group-inner"
          >
            <button
              class="el-intent-primary el-button"
            >
              <div
                class="mocked-styled-0 el-button-loader"
              />
              Edit
            </button>
            <button
              class="el-intent-primary el-button"
            >
              <div
                class="mocked-styled-0 el-button-loader"
              />
              Ping
            </button>
            <button
              class="el-intent-neutral el-button"
            >
              <div
                class="mocked-styled-0 el-button-loader"
              />
              Copy Public Key
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <div
      class="el-flex-container el-flex-justify-center"
    >
      <div
        class="mocked-styled-2 el-button-group"
      >
        <div
          class="mocked-styled-3 el-button-group-inner"
        >
          <button
            class="el-intent-primary el-button"
          >
            <div
              class="mocked-styled-0 el-button-loader"
            />
            Edit
          </button>
          <button
            class="el-intent-primary el-button"
          >
            <div
              class="mocked-styled-0 el-button-loader"
            />
            Ping
          </button>
          <button
            class="el-intent-neutral el-button"
          >
            <div
              class="mocked-styled-0 el-button-loader"
            />
            Copy Public Key
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`WebhooksEditControls should match a snapshot with manage content 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <form
        class="el-p8"
      >
        <div
          class="el-flex-container el-flex-justify-between el-flex-align-center el-mb11"
        >
          <h2
            class="el-text-base el-subtitle el-has-bold-text"
          >
            Edit Webhook
          </h2>
          <div
            class="mocked-styled-2 el-button-group"
          >
            <div
              class="el-button-group-align-right el-button-group-inner"
            >
              <button
                class="el-intent-neutral el-button"
                type="button"
              >
                <div
                  class="mocked-styled-0 el-button-loader"
                />
                Delete
              </button>
              <button
                class="el-intent-primary el-button"
                type="button"
              >
                <div
                  class="mocked-styled-0 el-button-loader"
                />
                Cancel
              </button>
              <button
                class="el-intent-primary el-button"
                type="submit"
              >
                <div
                  class="mocked-styled-0 el-button-loader"
                />
                Update
              </button>
            </div>
          </div>
        </div>
        <div
          class="mocked-styled-130 el-form-layout"
        >
          <div
            class="mocked-styled-135 el-input-wrap-full"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                id="test-static-id"
                name="url"
                placeholder="Enter secure https:// url"
              />
              <label
                class="mocked-styled-41 el-label"
                for="test-static-id"
              >
                Webhook URL
              </label>
            </div>
          </div>
          <div
            class="mocked-styled-135 el-input-wrap-full"
          >
            <div
              class="el-flex-container el-flex-wrap el-flex-justify-between el-flex-align-center el-mb5"
            >
              <div
                class="mock-css.
  min-width: 210px;
 el-input-group"
              >
                <input
                  aria-label="Input type undefined"
                  class="mocked-styled-38 el-input"
                  id="test-static-id"
                  placeholder="Search topics to get started"
                />
                <span
                  class="el-icon-new el-icon"
                  style="font-size: 1rem;"
                >
                  <svg
                    fill="none"
                    height="1em"
                    role="img"
                    style="font-size: 1rem;"
                    title="Icon image with name search"
                    viewBox="0 0 24 24"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="m21.71 20.29-5.4-5.39A7.9 7.9 0 0 0 18 10a8 8 0 1 0-8 8 7.9 7.9 0 0 0 4.9-1.69l5.39 5.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42M4 10a6 6 0 1 1 12 0 6 6 0 0 1-12 0"
                      fill="currentColor"
                    />
                  </svg>
                </span>
                <label
                  class="mocked-styled-41 el-label"
                  for="test-static-id"
                >
                  Subscription topics
                </label>
              </div>
            </div>
            <div
              class="mocked-styled-58 el-multi-select-input-wrapper"
            >
              <input
                class="mocked-styled-57 el-multi-select-input"
                id="topic-edit-ids-MOCK_ID"
                name="topicIds"
              />
              <div
                aria-label="Multi selected options"
                class="mocked-styled-55 el-multi-select-selected"
                role="listbox"
              />
            </div>
          </div>
          <div
            class="mocked-styled-135 el-input-wrap-full"
          >
            <label
              class="el-ml3 el-mb5 el-label"
            >
              Subscription customers
            </label>
            <div
              class="mocked-styled-58 el-multi-select-input-wrapper"
            >
              <input
                class="mocked-styled-57 el-multi-select-input"
                id="customer-edit-ids-MOCK_ID"
                name="customerIds"
              />
              <div
                aria-label="Multi selected options"
                class="mocked-styled-55 el-multi-select-selected"
                role="listbox"
              />
              <div
                aria-label="Multi unselected options"
                class="mocked-styled-56 el-multi-select-un-selected"
                role="listbox"
              >
                <input
                  aria-checked="false"
                  aria-hidden="true"
                  class="mocked-styled-52 el-multi-select-checkbox"
                  id="test-static-id"
                  role="option"
                  type="checkbox"
                />
                <label
                  class="el-has-grey-chips el-multi-select-label"
                  for="test-static-id"
                  role="option"
                  tabindex="0"
                >
                  All Customers
                </label>
                <input
                  aria-checked="false"
                  aria-hidden="true"
                  class="mocked-styled-52 el-multi-select-checkbox"
                  id="test-static-id"
                  role="option"
                  type="checkbox"
                />
                <label
                  class="el-has-grey-chips el-multi-select-label"
                  for="test-static-id"
                  role="option"
                  tabindex="0"
                >
                  Sandbox Estates
                </label>
                <input
                  aria-checked="false"
                  aria-hidden="true"
                  class="mocked-styled-52 el-multi-select-checkbox"
                  id="test-static-id"
                  role="option"
                  type="checkbox"
                />
                <label
                  class="el-has-grey-chips el-multi-select-label"
                  for="test-static-id"
                  role="option"
                  tabindex="0"
                >
                  Reapit Sales
                </label>
                <input
                  aria-checked="false"
                  aria-hidden="true"
                  class="mocked-styled-52 el-multi-select-checkbox"
                  id="test-static-id"
                  role="option"
                  type="checkbox"
                />
                <label
                  class="el-has-grey-chips el-multi-select-label"
                  for="test-static-id"
                  role="option"
                  tabindex="0"
                >
                  Foo Bar
                </label>
              </div>
            </div>
          </div>
          <div
            class="mocked-styled-135 el-input-wrap-full"
          >
            <div
              class="el-flex-container el-flex-wrap el-flex-justify-between el-flex-align-center el-mb5"
            >
              <div
                class="mocked-styled-40 el-input-group"
              >
                <input
                  aria-label="Input type undefined"
                  class="mocked-styled-38 el-input"
                  id="test-static-id"
                  placeholder="Type and press enter to add a field"
                  value=""
                />
                <label
                  class="mocked-styled-41 el-label"
                  for="test-static-id"
                >
                  Semi-structured Fields
                </label>
              </div>
            </div>
            <div
              class="mocked-styled-58 el-multi-select-input-wrapper"
            >
              <input
                class="mocked-styled-57 el-multi-select-input"
                id="semi-structured-fields-MOCK_ID"
                name="extraFields"
              />
              <div
                class="mocked-styled-55 el-multi-select-selected"
              >
                <p>
                  Please enter a semi-structured field name above, then press enter.
                </p>
              </div>
            </div>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <label
              class="mocked-styled-41 el-label"
            >
              Status
            </label>
            <input
              class="mocked-styled-125 el-toggle-checkbox"
              id="status-edit-toggle-MOCK_ID"
              name="active"
              type="checkbox"
            />
            <label
              class="el-has-grey-bg el-toggle-label"
              for="status-edit-toggle-MOCK_ID"
              role="button"
              tabindex="0"
            >
              <span
                class="mocked-styled-123 el-toggle-item"
              >
                Active
              </span>
              <span
                class="mocked-styled-123 el-toggle-item"
              >
                Inactive
              </span>
            </label>
          </div>
          <div
            class="mocked-styled-133 el-input-wrap"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <input
                aria-label="Input type checkbox"
                class="mocked-styled-38 el-input"
                id="test-static-id"
                name="ignoreEtagOnlyChanges"
                type="checkbox"
              />
              <label
                class="mocked-styled-41 el-label"
                for="test-static-id"
              >
                Ignore where only the etag has been modified
              </label>
              <span
                class="mocked-styled-39 el-input-add-on"
              >
                Ignore
              </span>
            </div>
          </div>
        </div>
      </form>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <form
      class="el-p8"
    >
      <div
        class="el-flex-container el-flex-justify-between el-flex-align-center el-mb11"
      >
        <h2
          class="el-text-base el-subtitle el-has-bold-text"
        >
          Edit Webhook
        </h2>
        <div
          class="mocked-styled-2 el-button-group"
        >
          <div
            class="el-button-group-align-right el-button-group-inner"
          >
            <button
              class="el-intent-neutral el-button"
              type="button"
            >
              <div
                class="mocked-styled-0 el-button-loader"
              />
              Delete
            </button>
            <button
              class="el-intent-primary el-button"
              type="button"
            >
              <div
                class="mocked-styled-0 el-button-loader"
              />
              Cancel
            </button>
            <button
              class="el-intent-primary el-button"
              type="submit"
            >
              <div
                class="mocked-styled-0 el-button-loader"
              />
              Update
            </button>
          </div>
        </div>
      </div>
      <div
        class="mocked-styled-130 el-form-layout"
      >
        <div
          class="mocked-styled-135 el-input-wrap-full"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <input
              aria-label="Input type undefined"
              class="mocked-styled-38 el-input"
              id="test-static-id"
              name="url"
              placeholder="Enter secure https:// url"
            />
            <label
              class="mocked-styled-41 el-label"
              for="test-static-id"
            >
              Webhook URL
            </label>
          </div>
        </div>
        <div
          class="mocked-styled-135 el-input-wrap-full"
        >
          <div
            class="el-flex-container el-flex-wrap el-flex-justify-between el-flex-align-center el-mb5"
          >
            <div
              class="mock-css.
  min-width: 210px;
 el-input-group"
            >
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                id="test-static-id"
                placeholder="Search topics to get started"
              />
              <span
                class="el-icon-new el-icon"
                style="font-size: 1rem;"
              >
                <svg
                  fill="none"
                  height="1em"
                  role="img"
                  style="font-size: 1rem;"
                  title="Icon image with name search"
                  viewBox="0 0 24 24"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="m21.71 20.29-5.4-5.39A7.9 7.9 0 0 0 18 10a8 8 0 1 0-8 8 7.9 7.9 0 0 0 4.9-1.69l5.39 5.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42M4 10a6 6 0 1 1 12 0 6 6 0 0 1-12 0"
                    fill="currentColor"
                  />
                </svg>
              </span>
              <label
                class="mocked-styled-41 el-label"
                for="test-static-id"
              >
                Subscription topics
              </label>
            </div>
          </div>
          <div
            class="mocked-styled-58 el-multi-select-input-wrapper"
          >
            <input
              class="mocked-styled-57 el-multi-select-input"
              id="topic-edit-ids-MOCK_ID"
              name="topicIds"
            />
            <div
              aria-label="Multi selected options"
              class="mocked-styled-55 el-multi-select-selected"
              role="listbox"
            />
          </div>
        </div>
        <div
          class="mocked-styled-135 el-input-wrap-full"
        >
          <label
            class="el-ml3 el-mb5 el-label"
          >
            Subscription customers
          </label>
          <div
            class="mocked-styled-58 el-multi-select-input-wrapper"
          >
            <input
              class="mocked-styled-57 el-multi-select-input"
              id="customer-edit-ids-MOCK_ID"
              name="customerIds"
            />
            <div
              aria-label="Multi selected options"
              class="mocked-styled-55 el-multi-select-selected"
              role="listbox"
            />
            <div
              aria-label="Multi unselected options"
              class="mocked-styled-56 el-multi-select-un-selected"
              role="listbox"
            >
              <input
                aria-checked="false"
                aria-hidden="true"
                class="mocked-styled-52 el-multi-select-checkbox"
                id="test-static-id"
                role="option"
                type="checkbox"
              />
              <label
                class="el-has-grey-chips el-multi-select-label"
                for="test-static-id"
                role="option"
                tabindex="0"
              >
                All Customers
              </label>
              <input
                aria-checked="false"
                aria-hidden="true"
                class="mocked-styled-52 el-multi-select-checkbox"
                id="test-static-id"
                role="option"
                type="checkbox"
              />
              <label
                class="el-has-grey-chips el-multi-select-label"
                for="test-static-id"
                role="option"
                tabindex="0"
              >
                Sandbox Estates
              </label>
              <input
                aria-checked="false"
                aria-hidden="true"
                class="mocked-styled-52 el-multi-select-checkbox"
                id="test-static-id"
                role="option"
                type="checkbox"
              />
              <label
                class="el-has-grey-chips el-multi-select-label"
                for="test-static-id"
                role="option"
                tabindex="0"
              >
                Reapit Sales
              </label>
              <input
                aria-checked="false"
                aria-hidden="true"
                class="mocked-styled-52 el-multi-select-checkbox"
                id="test-static-id"
                role="option"
                type="checkbox"
              />
              <label
                class="el-has-grey-chips el-multi-select-label"
                for="test-static-id"
                role="option"
                tabindex="0"
              >
                Foo Bar
              </label>
            </div>
          </div>
        </div>
        <div
          class="mocked-styled-135 el-input-wrap-full"
        >
          <div
            class="el-flex-container el-flex-wrap el-flex-justify-between el-flex-align-center el-mb5"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <input
                aria-label="Input type undefined"
                class="mocked-styled-38 el-input"
                id="test-static-id"
                placeholder="Type and press enter to add a field"
                value=""
              />
              <label
                class="mocked-styled-41 el-label"
                for="test-static-id"
              >
                Semi-structured Fields
              </label>
            </div>
          </div>
          <div
            class="mocked-styled-58 el-multi-select-input-wrapper"
          >
            <input
              class="mocked-styled-57 el-multi-select-input"
              id="semi-structured-fields-MOCK_ID"
              name="extraFields"
            />
            <div
              class="mocked-styled-55 el-multi-select-selected"
            >
              <p>
                Please enter a semi-structured field name above, then press enter.
              </p>
            </div>
          </div>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <label
            class="mocked-styled-41 el-label"
          >
            Status
          </label>
          <input
            class="mocked-styled-125 el-toggle-checkbox"
            id="status-edit-toggle-MOCK_ID"
            name="active"
            type="checkbox"
          />
          <label
            class="el-has-grey-bg el-toggle-label"
            for="status-edit-toggle-MOCK_ID"
            role="button"
            tabindex="0"
          >
            <span
              class="mocked-styled-123 el-toggle-item"
            >
              Active
            </span>
            <span
              class="mocked-styled-123 el-toggle-item"
            >
              Inactive
            </span>
          </label>
        </div>
        <div
          class="mocked-styled-133 el-input-wrap"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <input
              aria-label="Input type checkbox"
              class="mocked-styled-38 el-input"
              id="test-static-id"
              name="ignoreEtagOnlyChanges"
              type="checkbox"
            />
            <label
              class="mocked-styled-41 el-label"
              for="test-static-id"
            >
              Ignore where only the etag has been modified
            </label>
            <span
              class="mocked-styled-39 el-input-add-on"
            >
              Ignore
            </span>
          </div>
        </div>
      </div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`WebhooksEditControls should match a snapshot with ping content 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <form
        class="el-p8"
      >
        <h2
          class="el-text-base el-subtitle el-ml3"
        >
          Test Webhook Subscription
        </h2>
        <div
          class="mocked-styled-30 el-grid"
        >
          <div
            class="mocked-styled-34 el-col-split"
          >
            <label
              class="el-ml3 el-label"
            >
              Subscription topics
            </label>
            <div
              class="mocked-styled-40 el-input-group"
            >
              <select
                aria-label="Select an item from the dropdown list"
                class="mocked-styled-83 el-select"
                name="topicId"
              >
                <option
                  value=""
                >
                  None selected
                </option>
                <option />
                <option />
                <option />
              </select>
            </div>
          </div>
          <div
            class="mocked-styled-34 el-col-split"
          >
            <p
              class="el-text-base el-body-text"
            >
              To test your Webhook subscription, please select a subscription topic and an example payload for that topic will be sent to the configured URL. For more information, please
               
              <a>
                click here
              </a>
            </p>
            <div
              class="el-ml-auto el-button-group"
            >
              <div
                class="el-button-group-align-right el-button-group-inner"
              >
                <button
                  class="el-intent-primary el-button"
                  type="button"
                >
                  <div
                    class="mocked-styled-0 el-button-loader"
                  />
                  Cancel
                </button>
                <button
                  class="el-intent-primary el-button"
                  type="submit"
                >
                  <div
                    class="mocked-styled-0 el-button-loader"
                  />
                  Test
                </button>
              </div>
            </div>
          </div>
        </div>
      </form>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <form
      class="el-p8"
    >
      <h2
        class="el-text-base el-subtitle el-ml3"
      >
        Test Webhook Subscription
      </h2>
      <div
        class="mocked-styled-30 el-grid"
      >
        <div
          class="mocked-styled-34 el-col-split"
        >
          <label
            class="el-ml3 el-label"
          >
            Subscription topics
          </label>
          <div
            class="mocked-styled-40 el-input-group"
          >
            <select
              aria-label="Select an item from the dropdown list"
              class="mocked-styled-83 el-select"
              name="topicId"
            >
              <option
                value=""
              >
                None selected
              </option>
              <option />
              <option />
              <option />
            </select>
          </div>
        </div>
        <div
          class="mocked-styled-34 el-col-split"
        >
          <p
            class="el-text-base el-body-text"
          >
            To test your Webhook subscription, please select a subscription topic and an example payload for that topic will be sent to the configured URL. For more information, please
             
            <a>
              click here
            </a>
          </p>
          <div
            class="el-ml-auto el-button-group"
          >
            <div
              class="el-button-group-align-right el-button-group-inner"
            >
              <button
                class="el-intent-primary el-button"
                type="button"
              >
                <div
                  class="mocked-styled-0 el-button-loader"
                />
                Cancel
              </button>
              <button
                class="el-intent-primary el-button"
                type="submit"
              >
                <div
                  class="mocked-styled-0 el-button-loader"
                />
                Test
              </button>
            </div>
          </div>
        </div>
      </div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
