// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WebhooksLogs should match a snapshot where loading 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname=""
    >
      <mock-styled.div>
        <mock-styled.div />
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`WebhooksLogs should match a snapshot where no appId 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname="el-intent-primary el-is-active el-pn-is-full-width el-pn-is-inline"
        role="alertdialog"
      >
        <div
          class="el-pn-icon"
          data-testid="close-icon"
        >
          <mock-styled.span
            classname="el-icon-new"
            role="img"
            style="font-size: 1.25rem;"
          >
            <svg
              fill="none"
              height="1em"
              style="font-size: 1.25rem;"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10A10 10 0 0 0 12 2m1.143 15.714h-2.286v-6h2.286zm-1.143-8a1.714 1.714 0 1 1 0-3.428 1.714 1.714 0 0 1 0 3.428"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
        </div>
        <div
          class="el-pn-content"
        >
          No app or date range selected. Please use the filters option to get started.
        </div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname="el-intent-primary el-is-active el-pn-is-full-width el-pn-is-inline"
      role="alertdialog"
    >
      <div
        class="el-pn-icon"
        data-testid="close-icon"
      >
        <mock-styled.span
          classname="el-icon-new"
          role="img"
          style="font-size: 1.25rem;"
        >
          <svg
            fill="none"
            height="1em"
            style="font-size: 1.25rem;"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10A10 10 0 0 0 12 2m1.143 15.714h-2.286v-6h2.286zm-1.143-8a1.714 1.714 0 1 1 0-3.428 1.714 1.714 0 0 1 0 3.428"
              fill="currentColor"
            />
          </svg>
        </mock-styled.span>
      </div>
      <div
        class="el-pn-content"
      >
        No app or date range selected. Please use the filters option to get started.
      </div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`WebhooksLogs should match a snapshot where no data 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname="el-intent-primary el-is-active el-pn-is-full-width el-pn-is-inline"
        role="alertdialog"
      >
        <div
          class="el-pn-icon"
          data-testid="close-icon"
        >
          <mock-styled.span
            classname="el-icon-new"
            role="img"
            style="font-size: 1.25rem;"
          >
            <svg
              fill="none"
              height="1em"
              style="font-size: 1.25rem;"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10A10 10 0 0 0 12 2m1.143 15.714h-2.286v-6h2.286zm-1.143-8a1.714 1.714 0 1 1 0-3.428 1.714 1.714 0 0 1 0 3.428"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
        </div>
        <div
          class="el-pn-content"
        >
          No logs found for this application. Select another app, date range or trigger a webhook to see the logs appear here.
        </div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname="el-intent-primary el-is-active el-pn-is-full-width el-pn-is-inline"
      role="alertdialog"
    >
      <div
        class="el-pn-icon"
        data-testid="close-icon"
      >
        <mock-styled.span
          classname="el-icon-new"
          role="img"
          style="font-size: 1.25rem;"
        >
          <svg
            fill="none"
            height="1em"
            style="font-size: 1.25rem;"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10A10 10 0 0 0 12 2m1.143 15.714h-2.286v-6h2.286zm-1.143-8a1.714 1.714 0 1 1 0-3.428 1.714 1.714 0 0 1 0 3.428"
              fill="currentColor"
            />
          </svg>
        </mock-styled.span>
      </div>
      <div
        class="el-pn-content"
      >
        No logs found for this application. Select another app, date range or trigger a webhook to see the logs appear here.
      </div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`WebhooksLogs should match a snapshot where there are subscriptions 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        data-has-call-to-action="true"
        data-has-expandable-action="false"
        data-num-columns-excl-action-col="7"
        role="table"
      >
        <mock-styled.div
          role="row"
        >
          <mock-styled.div
            aria-label="Timestamp"
            classname="el-span2"
            role="columnheader"
          >
            Timestamp
          </mock-styled.div>
          <mock-styled.div
            aria-label="URL"
            classname="el-span2"
            role="columnheader"
          >
            URL
          </mock-styled.div>
          <mock-styled.div
            aria-label="Topic"
            role="columnheader"
          >
            Topic
          </mock-styled.div>
          <mock-styled.div
            aria-label="Entity ID"
            role="columnheader"
          >
            Entity ID
          </mock-styled.div>
          <mock-styled.div
            aria-label="Status"
            role="columnheader"
          >
            Status
          </mock-styled.div>
          <mock-styled.div
            role="columnheader"
          >
            Download Payload
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
          role="row"
        >
          <mock-styled.div>
            <mock-styled.div
              classname="el-span2 el-table-cell-has-dark-text"
              role="cell"
            >
              <mock-styled.div
                data-narrow-label="Timestamp"
              >
                2021-04-13T12:17:04.177+00:00
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="el-span2 el-table-cell-has-dark-text"
              role="cell"
            >
              <mock-styled.div
                data-narrow-label="URL"
              >
                https://3391b00a1f9c1fcae3e09d28dd99b7c9.m.pipedream.net
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="el-table-cell-has-dark-text"
              role="cell"
            >
              <mock-styled.div
                data-narrow-label="Topic"
              >
                application.install
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="el-table-cell-has-dark-text"
              role="cell"
            >
              <mock-styled.div
                data-narrow-label="Entity ID"
              >
                MOCK_ID
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="el-table-cell-has-dark-text"
              role="cell"
            >
              <mock-styled.div
                data-narrow-label="Status"
              >
                200
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              role="cell"
            >
              <mock-styled.div>
                <mock-styled.span
                  classname="el-intent-default el-icon-new"
                  role="img"
                >
                  <svg
                    fill="none"
                    height="1em"
                    viewBox="0 0 24 24"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M21 16a1 1 0 0 0-1 1v2H4v-2a1 1 0 1 0-2 0v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a1 1 0 0 0-1-1m-9.71-1.29a1 1 0 0 0 1.42 0l5-5a1.004 1.004 0 1 0-1.42-1.42L13 11.59V4a1 1 0 1 0-2 0v7.59l-3.29-3.3a1.004 1.004 0 0 0-1.42 1.42z"
                      fill="currentColor"
                    />
                  </svg>
                </mock-styled.span>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      data-has-call-to-action="true"
      data-has-expandable-action="false"
      data-num-columns-excl-action-col="7"
      role="table"
    >
      <mock-styled.div
        role="row"
      >
        <mock-styled.div
          aria-label="Timestamp"
          classname="el-span2"
          role="columnheader"
        >
          Timestamp
        </mock-styled.div>
        <mock-styled.div
          aria-label="URL"
          classname="el-span2"
          role="columnheader"
        >
          URL
        </mock-styled.div>
        <mock-styled.div
          aria-label="Topic"
          role="columnheader"
        >
          Topic
        </mock-styled.div>
        <mock-styled.div
          aria-label="Entity ID"
          role="columnheader"
        >
          Entity ID
        </mock-styled.div>
        <mock-styled.div
          aria-label="Status"
          role="columnheader"
        >
          Status
        </mock-styled.div>
        <mock-styled.div
          role="columnheader"
        >
          Download Payload
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
        role="row"
      >
        <mock-styled.div>
          <mock-styled.div
            classname="el-span2 el-table-cell-has-dark-text"
            role="cell"
          >
            <mock-styled.div
              data-narrow-label="Timestamp"
            >
              2021-04-13T12:17:04.177+00:00
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="el-span2 el-table-cell-has-dark-text"
            role="cell"
          >
            <mock-styled.div
              data-narrow-label="URL"
            >
              https://3391b00a1f9c1fcae3e09d28dd99b7c9.m.pipedream.net
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="el-table-cell-has-dark-text"
            role="cell"
          >
            <mock-styled.div
              data-narrow-label="Topic"
            >
              application.install
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="el-table-cell-has-dark-text"
            role="cell"
          >
            <mock-styled.div
              data-narrow-label="Entity ID"
            >
              MOCK_ID
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="el-table-cell-has-dark-text"
            role="cell"
          >
            <mock-styled.div
              data-narrow-label="Status"
            >
              200
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            role="cell"
          >
            <mock-styled.div>
              <mock-styled.span
                classname="el-intent-default el-icon-new"
                role="img"
              >
                <svg
                  fill="none"
                  height="1em"
                  viewBox="0 0 24 24"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M21 16a1 1 0 0 0-1 1v2H4v-2a1 1 0 1 0-2 0v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a1 1 0 0 0-1-1m-9.71-1.29a1 1 0 0 0 1.42 0l5-5a1.004 1.004 0 1 0-1.42-1.42L13 11.59V4a1 1 0 1 0-2 0v7.59l-3.29-3.3a1.004 1.004 0 0 0-1.42 1.42z"
                    fill="currentColor"
                  />
                </svg>
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
