// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Register should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname="mock-css.
  margin-bottom: 1.25rem;
"
            style="height: 40px; width: 200px;"
          >
            <svg
              style="height: 40px; width: 200px;"
            />
          </mock-styled.span>
          <mock-styled.div
            classname="mock-css.
  flex-direction: column;
"
          >
            <mock-styled.h2
              classname="mock-css. mock-css."
            >
              Register
            </mock-styled.h2>
            <mock-styled.p
              classname="mock-css."
            >
              for Reapit Foundations DeveloperPortal
            </mock-styled.p>
          </mock-styled.div>
          <form>
            <mock-styled.p
              classname="mock-css. mock-css. mock-css."
            >
              By registering for the Foundations platform, you will get access to the Reapit DeveloperPortal and sandbox data. You will also get the opportunity to list apps in the Reapit Marketplace. We look forward to seeing what you build!
            </mock-styled.p>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.input
                    classname=""
                    id="name"
                    name="name"
                    placeholder="Joe Developer"
                    type="text"
                  />
                  <mock-styled.label
                    htmlfor="name"
                  >
                    Full name
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.input
                    classname=""
                    id="companyName"
                    name="companyName"
                    placeholder="Acme Industries Ltd"
                    type="text"
                  />
                  <mock-styled.label
                    htmlfor="companyName"
                  >
                    Company name
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.input
                    classname=""
                    id="email"
                    name="email"
                    placeholder="name@address.com"
                    type="email"
                  />
                  <mock-styled.label
                    htmlfor="email"
                  >
                    Email
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.input
                    classname=""
                    id="telephone"
                    name="telephone"
                    placeholder="0800 800 800"
                    type="tel"
                  />
                  <mock-styled.label
                    htmlfor="telephone"
                  >
                    Telephone
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.input
                    classname=""
                    id="gitHubUsername"
                    name="gitHubUsername"
                    placeholder="Gihub handle"
                    type="tel"
                  />
                  <mock-styled.label
                    htmlfor="gitHubUsername"
                  >
                    GitHub Username
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div
                classname="mock-css."
              >
                <mock-styled.button
                  classname="mock-css."
                  type="submit"
                >
                  <mock-styled.div />
                  Register
                </mock-styled.button>
              </mock-styled.div>
            </mock-styled.div>
          </form>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div>
      <mock-styled.div>
        <mock-styled.span
          classname="mock-css.
  margin-bottom: 1.25rem;
"
          style="height: 40px; width: 200px;"
        >
          <svg
            style="height: 40px; width: 200px;"
          />
        </mock-styled.span>
        <mock-styled.div
          classname="mock-css.
  flex-direction: column;
"
        >
          <mock-styled.h2
            classname="mock-css. mock-css."
          >
            Register
          </mock-styled.h2>
          <mock-styled.p
            classname="mock-css."
          >
            for Reapit Foundations DeveloperPortal
          </mock-styled.p>
        </mock-styled.div>
        <form>
          <mock-styled.p
            classname="mock-css. mock-css. mock-css."
          >
            By registering for the Foundations platform, you will get access to the Reapit DeveloperPortal and sandbox data. You will also get the opportunity to list apps in the Reapit Marketplace. We look forward to seeing what you build!
          </mock-styled.p>
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="name"
                  name="name"
                  placeholder="Joe Developer"
                  type="text"
                />
                <mock-styled.label
                  htmlfor="name"
                >
                  Full name
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="companyName"
                  name="companyName"
                  placeholder="Acme Industries Ltd"
                  type="text"
                />
                <mock-styled.label
                  htmlfor="companyName"
                >
                  Company name
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="email"
                  name="email"
                  placeholder="name@address.com"
                  type="email"
                />
                <mock-styled.label
                  htmlfor="email"
                >
                  Email
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="telephone"
                  name="telephone"
                  placeholder="0800 800 800"
                  type="tel"
                />
                <mock-styled.label
                  htmlfor="telephone"
                >
                  Telephone
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="gitHubUsername"
                  name="gitHubUsername"
                  placeholder="Gihub handle"
                  type="tel"
                />
                <mock-styled.label
                  htmlfor="gitHubUsername"
                >
                  GitHub Username
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.button
                classname="mock-css."
                type="submit"
              >
                <mock-styled.div />
                Register
              </mock-styled.button>
            </mock-styled.div>
          </mock-styled.div>
        </form>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
