// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReferralsConfirmationSelection should render component with props and loading 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.p
        classname="el-text-base el-has-grey-text"
      >
        This app has requested to 
        read
         ‘Referral’ data. Before installation please select the referral types that this app will have access to. This defaults to ‘All Referral Types’, unless selected below.
      </mock-styled.p>
      <mock-styled.div>
        <mock-styled.div
          classname="el-mb5"
        >
          <mock-styled.input
            checked="true"
            classname=""
            id="test-static-id"
            type="checkbox"
          />
          <mock-styled.label
            htmlfor="test-static-id"
          >
            Install for selected referrals only
          </mock-styled.label>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div />
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.p
      classname="el-text-base el-has-grey-text"
    >
      This app has requested to 
      read
       ‘Referral’ data. Before installation please select the referral types that this app will have access to. This defaults to ‘All Referral Types’, unless selected below.
    </mock-styled.p>
    <mock-styled.div>
      <mock-styled.div
        classname="el-mb5"
      >
        <mock-styled.input
          checked="true"
          classname=""
          id="test-static-id"
          type="checkbox"
        />
        <mock-styled.label
          htmlfor="test-static-id"
        >
          Install for selected referrals only
        </mock-styled.label>
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`ReferralsConfirmationSelection should render component with props with data 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.p
        classname="el-text-base el-has-grey-text"
      >
        This app has requested to 
        read
         ‘Referral’ data. Before installation please select the referral types that this app will have access to. This defaults to ‘All Referral Types’, unless selected below.
      </mock-styled.p>
      <mock-styled.div>
        <mock-styled.div
          classname="el-mb5"
        >
          <mock-styled.input
            checked="true"
            classname=""
            id="test-static-id"
            type="checkbox"
          />
          <mock-styled.label
            htmlfor="test-static-id"
          >
            Install for selected referrals only
          </mock-styled.label>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div
          aria-controls=":r0:"
          aria-haspopup="listbox"
          role="combobox"
        >
          <mock-styled.input
            id="select-referrals-to-install"
          />
          <mock-styled.div
            classname="el-mb7"
          >
            <mock-styled.span
              classname="el-ml2 el-intent-default el-icon-new"
              role="img"
            >
              <svg
                fill="none"
                height="1em"
                viewBox="0 0 24 24"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M4 11a1 1 0 1 0 0 2 1 1 0 0 0 0-2m0-4a1 1 0 1 0 0-2 1 1 0 0 0 0 2m0 10a1 1 0 1 0 0 2 1 1 0 0 0 0-2m16-6H8a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2M8 7h12a1 1 0 1 0 0-2H8a1 1 0 0 0 0 2m12 10H8a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2"
                  fill="currentColor"
                />
              </svg>
            </mock-styled.span>
            <p>
              Select at least one referral or un-tick the above checkbox to select all
            </p>
          </mock-styled.div>
          <mock-styled.div
            classname="el-mb7"
          >
            <mock-styled.input
              id="test-static-id"
              type="checkbox"
            />
            <mock-styled.label
              classname="el-has-grey-chips"
              htmlfor="test-static-id"
            >
              JTS - Testimonial
            </mock-styled.label>
            <mock-styled.input
              id="test-static-id"
              type="checkbox"
            />
            <mock-styled.label
              classname="el-has-grey-chips"
              htmlfor="test-static-id"
            >
              JRV - Removals
            </mock-styled.label>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.p
      classname="el-text-base el-has-grey-text"
    >
      This app has requested to 
      read
       ‘Referral’ data. Before installation please select the referral types that this app will have access to. This defaults to ‘All Referral Types’, unless selected below.
    </mock-styled.p>
    <mock-styled.div>
      <mock-styled.div
        classname="el-mb5"
      >
        <mock-styled.input
          checked="true"
          classname=""
          id="test-static-id"
          type="checkbox"
        />
        <mock-styled.label
          htmlfor="test-static-id"
        >
          Install for selected referrals only
        </mock-styled.label>
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div>
      <mock-styled.div
        aria-controls=":r0:"
        aria-haspopup="listbox"
        role="combobox"
      >
        <mock-styled.input
          id="select-referrals-to-install"
        />
        <mock-styled.div
          classname="el-mb7"
        >
          <mock-styled.span
            classname="el-ml2 el-intent-default el-icon-new"
            role="img"
          >
            <svg
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M4 11a1 1 0 1 0 0 2 1 1 0 0 0 0-2m0-4a1 1 0 1 0 0-2 1 1 0 0 0 0 2m0 10a1 1 0 1 0 0 2 1 1 0 0 0 0-2m16-6H8a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2M8 7h12a1 1 0 1 0 0-2H8a1 1 0 0 0 0 2m12 10H8a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
          <p>
            Select at least one referral or un-tick the above checkbox to select all
          </p>
        </mock-styled.div>
        <mock-styled.div
          classname="el-mb7"
        >
          <mock-styled.input
            id="test-static-id"
            type="checkbox"
          />
          <mock-styled.label
            classname="el-has-grey-chips"
            htmlfor="test-static-id"
          >
            JTS - Testimonial
          </mock-styled.label>
          <mock-styled.input
            id="test-static-id"
            type="checkbox"
          />
          <mock-styled.label
            classname="el-has-grey-chips"
            htmlfor="test-static-id"
          >
            JRV - Removals
          </mock-styled.label>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`ReferralsConfirmationSelection should render component with read and write with both scopes on app 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.p
        classname="el-text-base el-has-grey-text"
      >
        This app has requested to 
        read and write
         ‘Referral’ data. Before installation please select the referral types that this app will have access to. This defaults to ‘All Referral Types’, unless selected below.
      </mock-styled.p>
      <mock-styled.div>
        <mock-styled.div
          classname="el-mb5"
        >
          <mock-styled.input
            checked="true"
            classname=""
            id="test-static-id"
            type="checkbox"
          />
          <mock-styled.label
            htmlfor="test-static-id"
          >
            Install for selected referrals only
          </mock-styled.label>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div
          aria-controls=":r1:"
          aria-haspopup="listbox"
          role="combobox"
        >
          <mock-styled.input
            id="select-referrals-to-install"
          />
          <mock-styled.div
            classname="el-mb7"
          >
            <mock-styled.span
              classname="el-ml2 el-intent-default el-icon-new"
              role="img"
            >
              <svg
                fill="none"
                height="1em"
                viewBox="0 0 24 24"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M4 11a1 1 0 1 0 0 2 1 1 0 0 0 0-2m0-4a1 1 0 1 0 0-2 1 1 0 0 0 0 2m0 10a1 1 0 1 0 0 2 1 1 0 0 0 0-2m16-6H8a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2M8 7h12a1 1 0 1 0 0-2H8a1 1 0 0 0 0 2m12 10H8a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2"
                  fill="currentColor"
                />
              </svg>
            </mock-styled.span>
            <p>
              Select at least one referral or un-tick the above checkbox to select all
            </p>
          </mock-styled.div>
          <mock-styled.div
            classname="el-mb7"
          >
            <mock-styled.input
              id="test-static-id"
              type="checkbox"
            />
            <mock-styled.label
              classname="el-has-grey-chips"
              htmlfor="test-static-id"
            >
              JTS - Testimonial
            </mock-styled.label>
            <mock-styled.input
              id="test-static-id"
              type="checkbox"
            />
            <mock-styled.label
              classname="el-has-grey-chips"
              htmlfor="test-static-id"
            >
              JRV - Removals
            </mock-styled.label>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.p
      classname="el-text-base el-has-grey-text"
    >
      This app has requested to 
      read and write
       ‘Referral’ data. Before installation please select the referral types that this app will have access to. This defaults to ‘All Referral Types’, unless selected below.
    </mock-styled.p>
    <mock-styled.div>
      <mock-styled.div
        classname="el-mb5"
      >
        <mock-styled.input
          checked="true"
          classname=""
          id="test-static-id"
          type="checkbox"
        />
        <mock-styled.label
          htmlfor="test-static-id"
        >
          Install for selected referrals only
        </mock-styled.label>
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div>
      <mock-styled.div
        aria-controls=":r1:"
        aria-haspopup="listbox"
        role="combobox"
      >
        <mock-styled.input
          id="select-referrals-to-install"
        />
        <mock-styled.div
          classname="el-mb7"
        >
          <mock-styled.span
            classname="el-ml2 el-intent-default el-icon-new"
            role="img"
          >
            <svg
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M4 11a1 1 0 1 0 0 2 1 1 0 0 0 0-2m0-4a1 1 0 1 0 0-2 1 1 0 0 0 0 2m0 10a1 1 0 1 0 0 2 1 1 0 0 0 0-2m16-6H8a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2M8 7h12a1 1 0 1 0 0-2H8a1 1 0 0 0 0 2m12 10H8a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
          <p>
            Select at least one referral or un-tick the above checkbox to select all
          </p>
        </mock-styled.div>
        <mock-styled.div
          classname="el-mb7"
        >
          <mock-styled.input
            id="test-static-id"
            type="checkbox"
          />
          <mock-styled.label
            classname="el-has-grey-chips"
            htmlfor="test-static-id"
          >
            JTS - Testimonial
          </mock-styled.label>
          <mock-styled.input
            id="test-static-id"
            type="checkbox"
          />
          <mock-styled.label
            classname="el-has-grey-chips"
            htmlfor="test-static-id"
          >
            JRV - Removals
          </mock-styled.label>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
