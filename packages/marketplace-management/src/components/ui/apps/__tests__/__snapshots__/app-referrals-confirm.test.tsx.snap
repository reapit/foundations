// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReferralsConfirmationSelection should render component with props and loading 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.p
        classname="mock-css."
      >
        This app has requested to read ‘Referral’ data. Before installation please select the referral types that this app will have access to. This defaults to ‘All Referral Types’, unless selected below.
      </mock-styled.p>
      <mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 0.75rem;
"
        >
          <mock-styled.input
            checked="true"
            classname=""
            id="test-static-id"
            type="checkbox"
          />
          <mock-styled.label
            htmlfor="test-static-id"
          >
            Install for selected referrals only
          </mock-styled.label>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div />
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.p
      classname="mock-css."
    >
      This app has requested to read ‘Referral’ data. Before installation please select the referral types that this app will have access to. This defaults to ‘All Referral Types’, unless selected below.
    </mock-styled.p>
    <mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 0.75rem;
"
      >
        <mock-styled.input
          checked="true"
          classname=""
          id="test-static-id"
          type="checkbox"
        />
        <mock-styled.label
          htmlfor="test-static-id"
        >
          Install for selected referrals only
        </mock-styled.label>
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`ReferralsConfirmationSelection should render component with props with data 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.p
        classname="mock-css."
      >
        This app has requested to read ‘Referral’ data. Before installation please select the referral types that this app will have access to. This defaults to ‘All Referral Types’, unless selected below.
      </mock-styled.p>
      <mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 0.75rem;
"
        >
          <mock-styled.input
            checked="true"
            classname=""
            id="test-static-id"
            type="checkbox"
          />
          <mock-styled.label
            htmlfor="test-static-id"
          >
            Install for selected referrals only
          </mock-styled.label>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.input
            id="select-referrals-to-install"
          />
          <mock-styled.div
            classname="mock-css.
  margin-bottom: 1.25rem;
"
          >
            <mock-styled.span
              classname="mock-css.
  margin-left: 0.375rem;
 mock-css.
  font-size: 2.5rem;
"
            >
              <svg />
            </mock-styled.span>
            <p>
              Select at least one referral or un-tick the above checkbox to select all
            </p>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  margin-bottom: 1.25rem;
"
          >
            <mock-styled.input
              id="test-static-id"
              type="checkbox"
            />
            <mock-styled.label
              classname="mock-css."
              htmlfor="test-static-id"
            >
              JTS - Testimonial
            </mock-styled.label>
            <mock-styled.input
              id="test-static-id"
              type="checkbox"
            />
            <mock-styled.label
              classname="mock-css."
              htmlfor="test-static-id"
            >
              JRV - Removals
            </mock-styled.label>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.p
      classname="mock-css."
    >
      This app has requested to read ‘Referral’ data. Before installation please select the referral types that this app will have access to. This defaults to ‘All Referral Types’, unless selected below.
    </mock-styled.p>
    <mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 0.75rem;
"
      >
        <mock-styled.input
          checked="true"
          classname=""
          id="test-static-id"
          type="checkbox"
        />
        <mock-styled.label
          htmlfor="test-static-id"
        >
          Install for selected referrals only
        </mock-styled.label>
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div>
      <mock-styled.div>
        <mock-styled.input
          id="select-referrals-to-install"
        />
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 1.25rem;
"
        >
          <mock-styled.span
            classname="mock-css.
  margin-left: 0.375rem;
 mock-css.
  font-size: 2.5rem;
"
          >
            <svg />
          </mock-styled.span>
          <p>
            Select at least one referral or un-tick the above checkbox to select all
          </p>
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 1.25rem;
"
        >
          <mock-styled.input
            id="test-static-id"
            type="checkbox"
          />
          <mock-styled.label
            classname="mock-css."
            htmlfor="test-static-id"
          >
            JTS - Testimonial
          </mock-styled.label>
          <mock-styled.input
            id="test-static-id"
            type="checkbox"
          />
          <mock-styled.label
            classname="mock-css."
            htmlfor="test-static-id"
          >
            JRV - Removals
          </mock-styled.label>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
