// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppToggleVisibilitySection should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.h2
        classname=""
      >
        Application Visibility
      </mock-styled.h2>
      <mock-styled.p
        classname="mock-css."
      >
        By default, all apps will be visible to all offices/users within your organisation. If you wish to hide an app from the Marketplace, please deselect. Hidden apps (apps that have been deselected) will not be visible in the Marketplace to any offices/users inside of your organisation.
      </mock-styled.p>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 2.5rem;
"
      >
        <mock-styled.input
          checked="true"
          classname=""
          id="test-static-id"
          type="checkbox"
        />
        <mock-styled.label
          htmlfor="test-static-id"
        >
          Visible
        </mock-styled.label>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.h2
      classname=""
    >
      Application Visibility
    </mock-styled.h2>
    <mock-styled.p
      classname="mock-css."
    >
      By default, all apps will be visible to all offices/users within your organisation. If you wish to hide an app from the Marketplace, please deselect. Hidden apps (apps that have been deselected) will not be visible in the Marketplace to any offices/users inside of your organisation.
    </mock-styled.p>
    <mock-styled.div
      classname="mock-css.
  margin-bottom: 2.5rem;
"
    >
      <mock-styled.input
        checked="true"
        classname=""
        id="test-static-id"
        type="checkbox"
      />
      <mock-styled.label
        htmlfor="test-static-id"
      >
        Visible
      </mock-styled.label>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
