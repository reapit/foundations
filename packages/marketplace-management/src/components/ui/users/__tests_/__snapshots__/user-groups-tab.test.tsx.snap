// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserGroupsTab should match a snapshot where there is data 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname="mock-css.
  justify-content: space-between;
"
      >
        <mock-styled.h1
          classname=""
        >
          SOME_NAME
           User Groups
        </mock-styled.h1>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
 mock-css.
  margin-bottom: 2.5rem;
"
        data-has-call-to-action="false"
        data-has-expandable-action="true"
        data-num-columns-excl-action-col="3"
      >
        <mock-styled.div>
          <mock-styled.div>
            Group Name
          </mock-styled.div>
          <mock-styled.div>
            Description
          </mock-styled.div>
          <mock-styled.div>
            Member Count
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname="mock-css."
              style="font-size: 1.2rem;"
            >
              <svg
                style="font-size: 1.2rem;"
              />
            </mock-styled.span>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Group Name"
              >
                MarketplaceAdmin
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Description"
              >
                Users who can administer the Reapit Marketplace for an organisation or organisation office group
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Member Count"
              >
                4
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.span
                classname="mock-css."
              >
                <svg />
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div>
              <form
                class="mock-css.
  padding: 1.5rem;
"
              >
                <mock-styled.h2
                  classname=""
                >
                  Edit User Group
                </mock-styled.h2>
                <mock-styled.p
                  classname="mock-css. mock-css."
                >
                  The list below contains all available member groups for your organisation. You can manage users associated to each group by selecting them from the list below.
                </mock-styled.p>
                <mock-styled.div
                  classname="mock-css. mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
                >
                  <mock-styled.div>
                    <mock-styled.div
                      classname="mock-css.
  margin-bottom: 0.5rem;
"
                    >
                      <mock-styled.input
                        classname=""
                        id="test-static-id"
                        placeholder="Search"
                      />
                      <mock-styled.span
                        classname=""
                      >
                        <svg />
                      </mock-styled.span>
                      <mock-styled.label
                        htmlfor="test-static-id"
                      >
                        Users
                      </mock-styled.label>
                    </mock-styled.div>
                    <mock-styled.div>
                      <mock-styled.input
                        id="user-groups-ids-MarketplaceAdmin"
                        name="userIds"
                      />
                      <mock-styled.div
                        classname=""
                      >
                        <mock-styled.input
                          id="test-static-id"
                          type="checkbox"
                        />
                        <mock-styled.label
                          classname=""
                          htmlfor="test-static-id"
                        />
                        <mock-styled.input
                          id="test-static-id"
                          type="checkbox"
                        />
                        <mock-styled.label
                          classname=""
                          htmlfor="test-static-id"
                        />
                        <mock-styled.input
                          id="test-static-id"
                          type="checkbox"
                        />
                        <mock-styled.label
                          classname=""
                          htmlfor="test-static-id"
                        />
                      </mock-styled.div>
                    </mock-styled.div>
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div>
                  <mock-styled.div
                    classname="mock-css."
                  >
                    <mock-styled.button
                      classname="mock-css."
                      type="button"
                    >
                      <mock-styled.div />
                      Cancel
                    </mock-styled.button>
                    <mock-styled.button
                      classname="mock-css."
                      type="submit"
                    >
                      <mock-styled.div />
                      Submit
                    </mock-styled.button>
                  </mock-styled.div>
                </mock-styled.div>
              </form>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Group Name"
              >
                OrganisationAdmin
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Description"
              >
                Users who can administer an organisation
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Member Count"
              >
                1
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.span
                classname="mock-css."
              >
                <svg />
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div>
              <form
                class="mock-css.
  padding: 1.5rem;
"
              >
                <mock-styled.h2
                  classname=""
                >
                  Edit User Group
                </mock-styled.h2>
                <mock-styled.p
                  classname="mock-css. mock-css."
                >
                  The list below contains all available member groups for your organisation. You can manage users associated to each group by selecting them from the list below.
                </mock-styled.p>
                <mock-styled.div
                  classname="mock-css. mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
                >
                  <mock-styled.div>
                    <mock-styled.div
                      classname="mock-css.
  margin-bottom: 0.5rem;
"
                    >
                      <mock-styled.input
                        classname=""
                        id="test-static-id"
                        placeholder="Search"
                      />
                      <mock-styled.span
                        classname=""
                      >
                        <svg />
                      </mock-styled.span>
                      <mock-styled.label
                        htmlfor="test-static-id"
                      >
                        Users
                      </mock-styled.label>
                    </mock-styled.div>
                    <mock-styled.div>
                      <mock-styled.input
                        id="user-groups-ids-OrganisationAdmin"
                        name="userIds"
                      />
                      <mock-styled.div
                        classname=""
                      >
                        <mock-styled.input
                          id="test-static-id"
                          type="checkbox"
                        />
                        <mock-styled.label
                          classname=""
                          htmlfor="test-static-id"
                        />
                        <mock-styled.input
                          id="test-static-id"
                          type="checkbox"
                        />
                        <mock-styled.label
                          classname=""
                          htmlfor="test-static-id"
                        />
                        <mock-styled.input
                          id="test-static-id"
                          type="checkbox"
                        />
                        <mock-styled.label
                          classname=""
                          htmlfor="test-static-id"
                        />
                      </mock-styled.div>
                    </mock-styled.div>
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div>
                  <mock-styled.div
                    classname="mock-css."
                  >
                    <mock-styled.button
                      classname="mock-css."
                      type="button"
                    >
                      <mock-styled.div />
                      Cancel
                    </mock-styled.button>
                    <mock-styled.button
                      classname="mock-css."
                      type="submit"
                    >
                      <mock-styled.div />
                      Submit
                    </mock-styled.button>
                  </mock-styled.div>
                </mock-styled.div>
              </form>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Group Name"
              >
                ReapitUserAdmin
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Description"
              >
                Users who are Reapit customers who can perform admin Foundations actions
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Member Count"
              >
                3
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.span
                classname="mock-css."
              >
                <svg />
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div>
              <form
                class="mock-css.
  padding: 1.5rem;
"
              >
                <mock-styled.h2
                  classname=""
                >
                  Edit User Group
                </mock-styled.h2>
                <mock-styled.p
                  classname="mock-css. mock-css."
                >
                  The list below contains all available member groups for your organisation. You can manage users associated to each group by selecting them from the list below.
                </mock-styled.p>
                <mock-styled.div
                  classname="mock-css. mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
                >
                  <mock-styled.div>
                    <mock-styled.div
                      classname="mock-css.
  margin-bottom: 0.5rem;
"
                    >
                      <mock-styled.input
                        classname=""
                        id="test-static-id"
                        placeholder="Search"
                      />
                      <mock-styled.span
                        classname=""
                      >
                        <svg />
                      </mock-styled.span>
                      <mock-styled.label
                        htmlfor="test-static-id"
                      >
                        Users
                      </mock-styled.label>
                    </mock-styled.div>
                    <mock-styled.div>
                      <mock-styled.input
                        id="user-groups-ids-ReapitUserAdmin"
                        name="userIds"
                      />
                      <mock-styled.div
                        classname=""
                      >
                        <mock-styled.input
                          id="test-static-id"
                          type="checkbox"
                        />
                        <mock-styled.label
                          classname=""
                          htmlfor="test-static-id"
                        />
                        <mock-styled.input
                          id="test-static-id"
                          type="checkbox"
                        />
                        <mock-styled.label
                          classname=""
                          htmlfor="test-static-id"
                        />
                        <mock-styled.input
                          id="test-static-id"
                          type="checkbox"
                        />
                        <mock-styled.label
                          classname=""
                          htmlfor="test-static-id"
                        />
                      </mock-styled.div>
                    </mock-styled.div>
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div>
                  <mock-styled.div
                    classname="mock-css."
                  >
                    <mock-styled.button
                      classname="mock-css."
                      type="button"
                    >
                      <mock-styled.div />
                      Cancel
                    </mock-styled.button>
                    <mock-styled.button
                      classname="mock-css."
                      type="submit"
                    >
                      <mock-styled.div />
                      Submit
                    </mock-styled.button>
                  </mock-styled.div>
                </mock-styled.div>
              </form>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.input
            value="1"
          />
           of 
          1
        </mock-styled.div>
        <mock-styled.button
          data-testid="back-button"
          type="button"
        >
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.button>
        <mock-styled.button
          data-testid="forward-button"
          type="button"
        >
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.button>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname="mock-css.
  justify-content: space-between;
"
    >
      <mock-styled.h1
        classname=""
      >
        SOME_NAME
         User Groups
      </mock-styled.h1>
    </mock-styled.div>
    <mock-styled.div
      classname="mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
 mock-css.
  margin-bottom: 2.5rem;
"
      data-has-call-to-action="false"
      data-has-expandable-action="true"
      data-num-columns-excl-action-col="3"
    >
      <mock-styled.div>
        <mock-styled.div>
          Group Name
        </mock-styled.div>
        <mock-styled.div>
          Description
        </mock-styled.div>
        <mock-styled.div>
          Member Count
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname="mock-css."
            style="font-size: 1.2rem;"
          >
            <svg
              style="font-size: 1.2rem;"
            />
          </mock-styled.span>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              data-narrow-label="Group Name"
            >
              MarketplaceAdmin
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              data-narrow-label="Description"
            >
              Users who can administer the Reapit Marketplace for an organisation or organisation office group
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              data-narrow-label="Member Count"
            >
              4
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.span
              classname="mock-css."
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <form
              class="mock-css.
  padding: 1.5rem;
"
            >
              <mock-styled.h2
                classname=""
              >
                Edit User Group
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css. mock-css."
              >
                The list below contains all available member groups for your organisation. You can manage users associated to each group by selecting them from the list below.
              </mock-styled.p>
              <mock-styled.div
                classname="mock-css. mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
              >
                <mock-styled.div>
                  <mock-styled.div
                    classname="mock-css.
  margin-bottom: 0.5rem;
"
                  >
                    <mock-styled.input
                      classname=""
                      id="test-static-id"
                      placeholder="Search"
                    />
                    <mock-styled.span
                      classname=""
                    >
                      <svg />
                    </mock-styled.span>
                    <mock-styled.label
                      htmlfor="test-static-id"
                    >
                      Users
                    </mock-styled.label>
                  </mock-styled.div>
                  <mock-styled.div>
                    <mock-styled.input
                      id="user-groups-ids-MarketplaceAdmin"
                      name="userIds"
                    />
                    <mock-styled.div
                      classname=""
                    >
                      <mock-styled.input
                        id="test-static-id"
                        type="checkbox"
                      />
                      <mock-styled.label
                        classname=""
                        htmlfor="test-static-id"
                      />
                      <mock-styled.input
                        id="test-static-id"
                        type="checkbox"
                      />
                      <mock-styled.label
                        classname=""
                        htmlfor="test-static-id"
                      />
                      <mock-styled.input
                        id="test-static-id"
                        type="checkbox"
                      />
                      <mock-styled.label
                        classname=""
                        htmlfor="test-static-id"
                      />
                    </mock-styled.div>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div
                  classname="mock-css."
                >
                  <mock-styled.button
                    classname="mock-css."
                    type="button"
                  >
                    <mock-styled.div />
                    Cancel
                  </mock-styled.button>
                  <mock-styled.button
                    classname="mock-css."
                    type="submit"
                  >
                    <mock-styled.div />
                    Submit
                  </mock-styled.button>
                </mock-styled.div>
              </mock-styled.div>
            </form>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              data-narrow-label="Group Name"
            >
              OrganisationAdmin
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              data-narrow-label="Description"
            >
              Users who can administer an organisation
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              data-narrow-label="Member Count"
            >
              1
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.span
              classname="mock-css."
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <form
              class="mock-css.
  padding: 1.5rem;
"
            >
              <mock-styled.h2
                classname=""
              >
                Edit User Group
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css. mock-css."
              >
                The list below contains all available member groups for your organisation. You can manage users associated to each group by selecting them from the list below.
              </mock-styled.p>
              <mock-styled.div
                classname="mock-css. mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
              >
                <mock-styled.div>
                  <mock-styled.div
                    classname="mock-css.
  margin-bottom: 0.5rem;
"
                  >
                    <mock-styled.input
                      classname=""
                      id="test-static-id"
                      placeholder="Search"
                    />
                    <mock-styled.span
                      classname=""
                    >
                      <svg />
                    </mock-styled.span>
                    <mock-styled.label
                      htmlfor="test-static-id"
                    >
                      Users
                    </mock-styled.label>
                  </mock-styled.div>
                  <mock-styled.div>
                    <mock-styled.input
                      id="user-groups-ids-OrganisationAdmin"
                      name="userIds"
                    />
                    <mock-styled.div
                      classname=""
                    >
                      <mock-styled.input
                        id="test-static-id"
                        type="checkbox"
                      />
                      <mock-styled.label
                        classname=""
                        htmlfor="test-static-id"
                      />
                      <mock-styled.input
                        id="test-static-id"
                        type="checkbox"
                      />
                      <mock-styled.label
                        classname=""
                        htmlfor="test-static-id"
                      />
                      <mock-styled.input
                        id="test-static-id"
                        type="checkbox"
                      />
                      <mock-styled.label
                        classname=""
                        htmlfor="test-static-id"
                      />
                    </mock-styled.div>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div
                  classname="mock-css."
                >
                  <mock-styled.button
                    classname="mock-css."
                    type="button"
                  >
                    <mock-styled.div />
                    Cancel
                  </mock-styled.button>
                  <mock-styled.button
                    classname="mock-css."
                    type="submit"
                  >
                    <mock-styled.div />
                    Submit
                  </mock-styled.button>
                </mock-styled.div>
              </mock-styled.div>
            </form>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              data-narrow-label="Group Name"
            >
              ReapitUserAdmin
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              data-narrow-label="Description"
            >
              Users who are Reapit customers who can perform admin Foundations actions
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              data-narrow-label="Member Count"
            >
              3
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.span
              classname="mock-css."
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <form
              class="mock-css.
  padding: 1.5rem;
"
            >
              <mock-styled.h2
                classname=""
              >
                Edit User Group
              </mock-styled.h2>
              <mock-styled.p
                classname="mock-css. mock-css."
              >
                The list below contains all available member groups for your organisation. You can manage users associated to each group by selecting them from the list below.
              </mock-styled.p>
              <mock-styled.div
                classname="mock-css. mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
              >
                <mock-styled.div>
                  <mock-styled.div
                    classname="mock-css.
  margin-bottom: 0.5rem;
"
                  >
                    <mock-styled.input
                      classname=""
                      id="test-static-id"
                      placeholder="Search"
                    />
                    <mock-styled.span
                      classname=""
                    >
                      <svg />
                    </mock-styled.span>
                    <mock-styled.label
                      htmlfor="test-static-id"
                    >
                      Users
                    </mock-styled.label>
                  </mock-styled.div>
                  <mock-styled.div>
                    <mock-styled.input
                      id="user-groups-ids-ReapitUserAdmin"
                      name="userIds"
                    />
                    <mock-styled.div
                      classname=""
                    >
                      <mock-styled.input
                        id="test-static-id"
                        type="checkbox"
                      />
                      <mock-styled.label
                        classname=""
                        htmlfor="test-static-id"
                      />
                      <mock-styled.input
                        id="test-static-id"
                        type="checkbox"
                      />
                      <mock-styled.label
                        classname=""
                        htmlfor="test-static-id"
                      />
                      <mock-styled.input
                        id="test-static-id"
                        type="checkbox"
                      />
                      <mock-styled.label
                        classname=""
                        htmlfor="test-static-id"
                      />
                    </mock-styled.div>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div
                  classname="mock-css."
                >
                  <mock-styled.button
                    classname="mock-css."
                    type="button"
                  >
                    <mock-styled.div />
                    Cancel
                  </mock-styled.button>
                  <mock-styled.button
                    classname="mock-css."
                    type="submit"
                  >
                    <mock-styled.div />
                    Submit
                  </mock-styled.button>
                </mock-styled.div>
              </mock-styled.div>
            </form>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div>
      <mock-styled.div>
        <mock-styled.input
          value="1"
        />
         of 
        1
      </mock-styled.div>
      <mock-styled.button
        data-testid="back-button"
        type="button"
      >
        <mock-styled.span
          classname=""
        >
          <svg />
        </mock-styled.span>
      </mock-styled.button>
      <mock-styled.button
        data-testid="forward-button"
        type="button"
      >
        <mock-styled.span
          classname=""
        >
          <svg />
        </mock-styled.span>
      </mock-styled.button>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`UserGroupsTab should match a snapshot where there is data but no user groups 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname="mock-css.
  justify-content: space-between;
"
      >
        <mock-styled.h1
          classname=""
        >
          SOME_NAME
           User Groups
        </mock-styled.h1>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css. mock-css. mock-css. mock-css."
      >
        <div
          class="mock-css.
  padding: 0 1rem;
  display: flex;
  align-items: center;
  border-radius: var(--default-border-radius) 0 0 var(--default-border-radius);
  cursor: pointer;

  , {
    color: var(--color-white);
  }
"
          data-testid="close-icon"
        >
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </div>
        <div
          class="mock-css.
  padding: 1rem;
  opacity: 0;
  transition: 0.5s;
  width: 100%;
"
        >
          No users found
        </div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname="mock-css.
  justify-content: space-between;
"
    >
      <mock-styled.h1
        classname=""
      >
        SOME_NAME
         User Groups
      </mock-styled.h1>
    </mock-styled.div>
    <mock-styled.div
      classname="mock-css. mock-css. mock-css. mock-css."
    >
      <div
        class="mock-css.
  padding: 0 1rem;
  display: flex;
  align-items: center;
  border-radius: var(--default-border-radius) 0 0 var(--default-border-radius);
  cursor: pointer;

  , {
    color: var(--color-white);
  }
"
        data-testid="close-icon"
      >
        <mock-styled.span
          classname=""
        >
          <svg />
        </mock-styled.span>
      </div>
      <div
        class="mock-css.
  padding: 1rem;
  opacity: 0;
  transition: 0.5s;
  width: 100%;
"
      >
        No users found
      </div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`UserGroupsTab should match a snapshot where there is no orgId 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname="mock-css.
  justify-content: space-between;
"
      >
        <mock-styled.h1
          classname=""
        >
          User Groups
        </mock-styled.h1>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css. mock-css. mock-css. mock-css."
      >
        <div
          class="mock-css.
  padding: 0 1rem;
  display: flex;
  align-items: center;
  border-radius: var(--default-border-radius) 0 0 var(--default-border-radius);
  cursor: pointer;

  , {
    color: var(--color-white);
  }
"
          data-testid="close-icon"
        >
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </div>
        <div
          class="mock-css.
  padding: 1rem;
  opacity: 0;
  transition: 0.5s;
  width: 100%;
"
        >
          No organisation selected. You need to select an organisation to view user groups.
        </div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname="mock-css.
  justify-content: space-between;
"
    >
      <mock-styled.h1
        classname=""
      >
        User Groups
      </mock-styled.h1>
    </mock-styled.div>
    <mock-styled.div
      classname="mock-css. mock-css. mock-css. mock-css."
    >
      <div
        class="mock-css.
  padding: 0 1rem;
  display: flex;
  align-items: center;
  border-radius: var(--default-border-radius) 0 0 var(--default-border-radius);
  cursor: pointer;

  , {
    color: var(--color-white);
  }
"
        data-testid="close-icon"
      >
        <mock-styled.span
          classname=""
        >
          <svg />
        </mock-styled.span>
      </div>
      <div
        class="mock-css.
  padding: 1rem;
  opacity: 0;
  transition: 0.5s;
  width: 100%;
"
      >
        No organisation selected. You need to select an organisation to view user groups.
      </div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
