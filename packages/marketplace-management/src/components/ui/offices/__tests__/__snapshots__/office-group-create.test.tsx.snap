// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OfficeGroupCreate should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <form>
        <mock-styled.h1
          classname=""
        >
          SOME_NAME
           Create Office Group
        </mock-styled.h1>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.div
                classname="mock-css."
                data-testid="step-0"
              >
                1
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div
                classname="mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
              >
                <mock-styled.div>
                  <mock-styled.p
                    classname="mock-css."
                  >
                    Add a name for your office group.
                  </mock-styled.p>
                </mock-styled.div>
                <mock-styled.div>
                  <mock-styled.div>
                    <mock-styled.input
                      classname=""
                      id="test-static-id"
                      name="name"
                      placeholder="Enter an office group name"
                    />
                    <mock-styled.label
                      htmlfor="test-static-id"
                    >
                      Office Group Name
                    </mock-styled.label>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </form>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <form>
      <mock-styled.h1
        classname=""
      >
        SOME_NAME
         Create Office Group
      </mock-styled.h1>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.div
              classname="mock-css."
              data-testid="step-0"
            >
              1
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div
              classname="mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
            >
              <mock-styled.div>
                <mock-styled.p
                  classname="mock-css."
                >
                  Add a name for your office group.
                </mock-styled.p>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.input
                    classname=""
                    id="test-static-id"
                    name="name"
                    placeholder="Enter an office group name"
                  />
                  <mock-styled.label
                    htmlfor="test-static-id"
                  >
                    Office Group Name
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`OfficeGroupCreate should match a snapshot where there is no orgId 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <form>
        <mock-styled.h1
          classname=""
        >
          SOME_NAME
           Create Office Group
        </mock-styled.h1>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.div
                classname="mock-css."
                data-testid="step-0"
              >
                1
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div
                classname="mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
              >
                <mock-styled.div>
                  <mock-styled.p
                    classname="mock-css."
                  >
                    Add a name for your office group.
                  </mock-styled.p>
                </mock-styled.div>
                <mock-styled.div>
                  <mock-styled.div>
                    <mock-styled.input
                      classname=""
                      id="test-static-id"
                      name="name"
                      placeholder="Enter an office group name"
                    />
                    <mock-styled.label
                      htmlfor="test-static-id"
                    >
                      Office Group Name
                    </mock-styled.label>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </form>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <form>
      <mock-styled.h1
        classname=""
      >
        SOME_NAME
         Create Office Group
      </mock-styled.h1>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.div
              classname="mock-css."
              data-testid="step-0"
            >
              1
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div
              classname="mock-css.
  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
  animation-duration: 0.5s;
  animation-fill-mode: both;
  animation-delay: 0.1s;
  animation-name: fade-in;
"
            >
              <mock-styled.div>
                <mock-styled.p
                  classname="mock-css."
                >
                  Add a name for your office group.
                </mock-styled.p>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.input
                    classname=""
                    id="test-static-id"
                    name="name"
                    placeholder="Enter an office group name"
                  />
                  <mock-styled.label
                    htmlfor="test-static-id"
                  >
                    Office Group Name
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
