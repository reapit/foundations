// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrgIdSelect should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-mb5"
      >
        <p
          class="el-text-base el-body-text"
        >
          Organisations
        </p>
        <small
          class="el-text-base el-small-text el-has-grey-text"
        >
          You are an admin for multiple organisations - select from the list below for data specific to one of these organisations
        </small>
        <mock-styled.div
          classname="el-border-radius"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <select
              aria-label="Select an item from the dropdown list"
              class="el-wfull el-select"
            >
              <option
                value=""
              >
                Please Select
              </option>
              <option
                value="value"
              >
                name
              </option>
              <option
                value="value"
              >
                name
              </option>
            </select>
            <label
              class="mocked-styled-41 el-label"
              for="myId"
            >
              Select Organisation
            </label>
          </div>
        </mock-styled.div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-mb5"
    >
      <p
        class="el-text-base el-body-text"
      >
        Organisations
      </p>
      <small
        class="el-text-base el-small-text el-has-grey-text"
      >
        You are an admin for multiple organisations - select from the list below for data specific to one of these organisations
      </small>
      <mock-styled.div
        classname="el-border-radius"
      >
        <div
          class="mocked-styled-40 el-input-group"
        >
          <select
            aria-label="Select an item from the dropdown list"
            class="el-wfull el-select"
          >
            <option
              value=""
            >
              Please Select
            </option>
            <option
              value="value"
            >
              name
            </option>
            <option
              value="value"
            >
              name
            </option>
          </select>
          <label
            class="mocked-styled-41 el-label"
            for="myId"
          >
            Select Organisation
          </label>
        </div>
      </mock-styled.div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`OrgIdSelect should match a snapshot where orgIdOptions are less than 2 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div />
  </body>,
  "container": <div />,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
