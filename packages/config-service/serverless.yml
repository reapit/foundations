service: cloud-config-service

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-deployment-bucket
  - serverless-plugin-log-retention

custom:
  s3CloudFormBucket: cloud-deployment-cloudform-templates-${opt:stage, 'dev'}
  env: ${file(./config.json)}
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: 'yarn'
    packagerOptions:
      noFrozenLockFile: false
    excludeFiles: src/**/*.test.ts
    keepOutputDirectory: true
  logRetentionInDays: 30

provider:
  name: aws
  runtime: ${opt:runtime, 'nodejs14.x' }
  stage: ${opt:stage, 'dev'}
  region: eu-west-2
  deploymentBucket:
    name: ${self:custom.s3CloudFormBucket}
    blockPublicAccess: false
  environment:
    NODE_ENV: ${self:custom.env.NODE_ENV}
    APP_ENV: ${self:custom.env.APP_ENV}
    SENTRY_DSN: ${self:custom.env.SENTRY_DSN}
    CONNECT_USER_POOL: ${self:custom.env.CONNECT_USER_POOL}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:GetParameter
        - ssm:PutParameter
        - ssm:DeleteParameter
      Resource: 'arn:aws:ses:${self:provider.region}:${self:custom.env.AWS_ACCOUNT_ID}:parameter/Client*'

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

package:
  individually: true
  patterns:
    - 'dist/**'
    - '!package.json'
    - '!node_modules/**'
    - '!error.log'
    - '!info.log'
    - '!jest.config.js'
    - '!serverless.yml'
    - '!src/**'
    - '!tsconfig.json'
    - '!yml-helpers.js'
    - '!public/**'

functions:
  app:
    handler: src/index.app
    events:
      - http:
          path: /config/{configKey}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
          authorizer:
            arn: arn:aws:cognito-idp:${self:provider.region}:${self:custom.env.AWS_ACCOUNT_ID}:userpool/${self:custom.env.CONNECT_USER_POOL}
      - http:
          path: /config
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
          authorizer:
            arn: arn:aws:cognito-idp:${self:provider.region}:${self:custom.env.AWS_ACCOUNT_ID}:userpool/${self:custom.env.CONNECT_USER_POOL}
      - http:
          path: /config/{configKey}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
          authorizer:
            arn: arn:aws:cognito-idp:${self:provider.region}:${self:custom.env.AWS_ACCOUNT_ID}:userpool/${self:custom.env.CONNECT_USER_POOL}
      - http:
          method: get
          path: /ok
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - if-match
