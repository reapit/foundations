// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MapPanel should match snapshot without an appointment in state 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
       
      <mock-styled.div
        classname="mock-css."
      >
        <mock-styled.div>
          <mock-styled.input
            checked="true"
            id="travel-mode"
            type="checkbox"
          />
          <mock-styled.label
            htmlfor="travel-mode"
          >
            <img
              src="[object Object]"
            />
            <img
              src="[object Object]"
            />
          </mock-styled.label>
        </mock-styled.div>
        <mock-styled.div>
          <h2
            class="el-text-base el-subtitle el-has-bold-text"
          >
            ETA
          </h2>
          <p>
            TEXT
          </p>
        </mock-styled.div>
        <mock-styled.div>
          <h2
            class="el-text-base el-subtitle el-has-bold-text"
          >
            Distance
          </h2>
          <p>
            TEXT
          </p>
        </mock-styled.div>
        <mock-styled.div>
          <button
            class="el-intent-primary el-button"
            type="button"
          >
            <div
              class="mocked-styled-0 el-button-loader"
            />
            Start Journey
          </button>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
     
    <mock-styled.div
      classname="mock-css."
    >
      <mock-styled.div>
        <mock-styled.input
          checked="true"
          id="travel-mode"
          type="checkbox"
        />
        <mock-styled.label
          htmlfor="travel-mode"
        >
          <img
            src="[object Object]"
          />
          <img
            src="[object Object]"
          />
        </mock-styled.label>
      </mock-styled.div>
      <mock-styled.div>
        <h2
          class="el-text-base el-subtitle el-has-bold-text"
        >
          ETA
        </h2>
        <p>
          TEXT
        </p>
      </mock-styled.div>
      <mock-styled.div>
        <h2
          class="el-text-base el-subtitle el-has-bold-text"
        >
          Distance
        </h2>
        <p>
          TEXT
        </p>
      </mock-styled.div>
      <mock-styled.div>
        <button
          class="el-intent-primary el-button"
          type="button"
        >
          <div
            class="mocked-styled-0 el-button-loader"
          />
          Start Journey
        </button>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
