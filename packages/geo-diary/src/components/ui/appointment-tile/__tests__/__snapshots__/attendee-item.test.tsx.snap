// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AttendeeItem should match snapshot with contacts 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
       
      <mock-styled.div
        classname="el-card-list-item-expanded"
      >
        <mock-styled.div>
          <mock-styled.span
            classname="el-intent-primary el-icon-new"
          >
            <svg
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M18 14.5a2.49 2.49 0 0 0 2.35-2.35c.094-.545.144-1.097.15-1.65a2.5 2.5 0 0 0-5 0c.006.553.056 1.105.15 1.65A2.49 2.49 0 0 0 18 14.5ZM8 15c-4.42 0-8 2.24-8 5h16c0-2.76-3.58-5-8-5Zm0-2a3.48 3.48 0 0 0 3.3-3.25c.131-.743.198-1.496.2-2.25a3.5 3.5 0 1 0-7 0c.002.754.069 1.507.2 2.25A3.48 3.48 0 0 0 8 13Zm10 3a8.38 8.38 0 0 0-1.61.15A5.63 5.63 0 0 1 18 20h6c0-2.21-2.69-4-6-4Z"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Attendee
          </mock-styled.div>
          <mock-styled.div>
            Ms Harper Dale
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname="el-card-list-item-expanded"
      >
        <mock-styled.div>
          <mock-styled.span
            classname="el-intent-primary el-icon-new"
          >
            <svg
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M18 14.5a2.49 2.49 0 0 0 2.35-2.35c.094-.545.144-1.097.15-1.65a2.5 2.5 0 0 0-5 0c.006.553.056 1.105.15 1.65A2.49 2.49 0 0 0 18 14.5ZM8 15c-4.42 0-8 2.24-8 5h16c0-2.76-3.58-5-8-5Zm0-2a3.48 3.48 0 0 0 3.3-3.25c.131-.743.198-1.496.2-2.25a3.5 3.5 0 1 0-7 0c.002.754.069 1.507.2 2.25A3.48 3.48 0 0 0 8 13Zm10 3a8.38 8.38 0 0 0-1.61.15A5.63 5.63 0 0 1 18 20h6c0-2.21-2.69-4-6-4Z"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Attendee
          </mock-styled.div>
          <mock-styled.div>
            Mr Teddy Allan
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
     
    <mock-styled.div
      classname="el-card-list-item-expanded"
    >
      <mock-styled.div>
        <mock-styled.span
          classname="el-intent-primary el-icon-new"
        >
          <svg
            fill="none"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M18 14.5a2.49 2.49 0 0 0 2.35-2.35c.094-.545.144-1.097.15-1.65a2.5 2.5 0 0 0-5 0c.006.553.056 1.105.15 1.65A2.49 2.49 0 0 0 18 14.5ZM8 15c-4.42 0-8 2.24-8 5h16c0-2.76-3.58-5-8-5Zm0-2a3.48 3.48 0 0 0 3.3-3.25c.131-.743.198-1.496.2-2.25a3.5 3.5 0 1 0-7 0c.002.754.069 1.507.2 2.25A3.48 3.48 0 0 0 8 13Zm10 3a8.38 8.38 0 0 0-1.61.15A5.63 5.63 0 0 1 18 20h6c0-2.21-2.69-4-6-4Z"
              fill="currentColor"
            />
          </svg>
        </mock-styled.span>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          Attendee
        </mock-styled.div>
        <mock-styled.div>
          Ms Harper Dale
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div
      classname="el-card-list-item-expanded"
    >
      <mock-styled.div>
        <mock-styled.span
          classname="el-intent-primary el-icon-new"
        >
          <svg
            fill="none"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M18 14.5a2.49 2.49 0 0 0 2.35-2.35c.094-.545.144-1.097.15-1.65a2.5 2.5 0 0 0-5 0c.006.553.056 1.105.15 1.65A2.49 2.49 0 0 0 18 14.5ZM8 15c-4.42 0-8 2.24-8 5h16c0-2.76-3.58-5-8-5Zm0-2a3.48 3.48 0 0 0 3.3-3.25c.131-.743.198-1.496.2-2.25a3.5 3.5 0 1 0-7 0c.002.754.069 1.507.2 2.25A3.48 3.48 0 0 0 8 13Zm10 3a8.38 8.38 0 0 0-1.61.15A5.63 5.63 0 0 1 18 20h6c0-2.21-2.69-4-6-4Z"
              fill="currentColor"
            />
          </svg>
        </mock-styled.span>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          Attendee
        </mock-styled.div>
        <mock-styled.div>
          Mr Teddy Allan
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`AttendeeItem should match snapshot with no contacts 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
       
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
     
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
