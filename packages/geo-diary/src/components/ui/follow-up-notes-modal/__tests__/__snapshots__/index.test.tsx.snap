// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FollowUpNotesModal should match snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
       
      <div
        class="el-mb8"
      >
        <mock-styled.p
          classname=""
        >
          Record follow up notes on your appointment here, along with an optional follow up date.
        </mock-styled.p>
      </div>
      <form>
        <mock-styled.div
          classname="el-mb8"
        >
          <mock-styled.input
            classname=""
            id="test-static-id"
            name="due"
            type="date"
          />
          <mock-styled.span
            classname=""
            style="font-size: 1rem;"
          >
            <svg
              fill="none"
              height="1em"
              style="font-size: 1rem;"
              viewBox="0 0 20 20"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M6 12a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM10 13a1 1 0 1 0 0-2 1 1 0 0 0 0 2ZM16 12a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM5 16a1 1 0 1 0 0-2 1 1 0 0 0 0 2ZM11 15a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM15 16a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z"
                fill="currentColor"
              />
              <path
                clip-rule="evenodd"
                d="M14.583 1.667H5.417V.625a.625.625 0 0 0-1.25 0v1.042H2.292A2.293 2.293 0 0 0 0 3.958v13.75A2.294 2.294 0 0 0 2.292 20h15.416A2.294 2.294 0 0 0 20 17.708V3.958a2.293 2.293 0 0 0-2.292-2.291h-1.875V.625a.625.625 0 0 0-1.25 0v1.042ZM4.792 5a.625.625 0 0 1-.625-.625V2.917H2.292c-.574 0-1.042.467-1.042 1.041v2.709h17.5V3.958c0-.574-.468-1.041-1.042-1.041h-1.875v1.458a.625.625 0 0 1-1.25 0V2.917H5.417v1.458c0 .345-.28.625-.625.625ZM1.25 7.917h17.5v9.791c0 .575-.468 1.042-1.042 1.042H2.292a1.043 1.043 0 0 1-1.042-1.042V7.917Z"
                fill="currentColor"
                fill-rule="evenodd"
              />
            </svg>
          </mock-styled.span>
          <mock-styled.label
            htmlfor="test-static-id"
          >
            Due date
          </mock-styled.label>
        </mock-styled.div>
        <mock-styled.div
          classname="el-mb8"
        >
          <mock-styled.textarea
            classname=""
            name="notes"
          />
          <mock-styled.label>
            Follow up notes
          </mock-styled.label>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div
            classname="el-button-group-align-right"
          >
            <mock-styled.button
              classname="el-intent-neutral"
              disabled="false"
              type="button"
            >
              <mock-styled.div />
              Cancel
            </mock-styled.button>
            <mock-styled.button
              classname="el-intent-primary"
              type="submit"
            >
              <mock-styled.div />
              Submit
            </mock-styled.button>
          </mock-styled.div>
        </mock-styled.div>
      </form>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
     
    <div
      class="el-mb8"
    >
      <mock-styled.p
        classname=""
      >
        Record follow up notes on your appointment here, along with an optional follow up date.
      </mock-styled.p>
    </div>
    <form>
      <mock-styled.div
        classname="el-mb8"
      >
        <mock-styled.input
          classname=""
          id="test-static-id"
          name="due"
          type="date"
        />
        <mock-styled.span
          classname=""
          style="font-size: 1rem;"
        >
          <svg
            fill="none"
            height="1em"
            style="font-size: 1rem;"
            viewBox="0 0 20 20"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M6 12a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM10 13a1 1 0 1 0 0-2 1 1 0 0 0 0 2ZM16 12a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM5 16a1 1 0 1 0 0-2 1 1 0 0 0 0 2ZM11 15a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM15 16a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z"
              fill="currentColor"
            />
            <path
              clip-rule="evenodd"
              d="M14.583 1.667H5.417V.625a.625.625 0 0 0-1.25 0v1.042H2.292A2.293 2.293 0 0 0 0 3.958v13.75A2.294 2.294 0 0 0 2.292 20h15.416A2.294 2.294 0 0 0 20 17.708V3.958a2.293 2.293 0 0 0-2.292-2.291h-1.875V.625a.625.625 0 0 0-1.25 0v1.042ZM4.792 5a.625.625 0 0 1-.625-.625V2.917H2.292c-.574 0-1.042.467-1.042 1.041v2.709h17.5V3.958c0-.574-.468-1.041-1.042-1.041h-1.875v1.458a.625.625 0 0 1-1.25 0V2.917H5.417v1.458c0 .345-.28.625-.625.625ZM1.25 7.917h17.5v9.791c0 .575-.468 1.042-1.042 1.042H2.292a1.043 1.043 0 0 1-1.042-1.042V7.917Z"
              fill="currentColor"
              fill-rule="evenodd"
            />
          </svg>
        </mock-styled.span>
        <mock-styled.label
          htmlfor="test-static-id"
        >
          Due date
        </mock-styled.label>
      </mock-styled.div>
      <mock-styled.div
        classname="el-mb8"
      >
        <mock-styled.textarea
          classname=""
          name="notes"
        />
        <mock-styled.label>
          Follow up notes
        </mock-styled.label>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div
          classname="el-button-group-align-right"
        >
          <mock-styled.button
            classname="el-intent-neutral"
            disabled="false"
            type="button"
          >
            <mock-styled.div />
            Cancel
          </mock-styled.button>
          <mock-styled.button
            classname="el-intent-primary"
            type="submit"
          >
            <mock-styled.div />
            Submit
          </mock-styled.button>
        </mock-styled.div>
      </mock-styled.div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
