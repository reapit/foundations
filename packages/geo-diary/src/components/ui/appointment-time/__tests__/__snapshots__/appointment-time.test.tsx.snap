// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`appointment-time AppointmentTime should match snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
       
      <mock-styled.div
        classname="mock-css."
      >
        <div
          class="el-mx-auto el-toggle-radio-wrap"
        >
          <input
            checked=""
            class="mocked-styled-127 el-toggle-radio"
            id="today"
            name="appointment-time"
            type="radio"
            value="TODAY"
          />
          <label
            class="mocked-styled-128 el-toggle-radio-label"
            for="today"
            role="button"
            tabindex="0"
          >
            <span
              class="mocked-styled-124 el-toggle-radio-item"
            >
              Today
            </span>
          </label>
          <input
            class="mocked-styled-127 el-toggle-radio"
            id="tomorrow"
            name="appointment-time"
            type="radio"
            value="TOMORROW"
          />
          <label
            class="mocked-styled-128 el-toggle-radio-label"
            for="tomorrow"
            role="button"
            tabindex="0"
          >
            <span
              class="mocked-styled-124 el-toggle-radio-item"
            >
              Tomorrow
            </span>
          </label>
          <input
            class="mocked-styled-127 el-toggle-radio"
            id="week"
            name="appointment-time"
            type="radio"
            value="WEEK"
          />
          <label
            class="mocked-styled-128 el-toggle-radio-label"
            for="week"
            role="button"
            tabindex="0"
          >
            <span
              class="mocked-styled-124 el-toggle-radio-item"
            >
              Week
            </span>
          </label>
        </div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
     
    <mock-styled.div
      classname="mock-css."
    >
      <div
        class="el-mx-auto el-toggle-radio-wrap"
      >
        <input
          checked=""
          class="mocked-styled-127 el-toggle-radio"
          id="today"
          name="appointment-time"
          type="radio"
          value="TODAY"
        />
        <label
          class="mocked-styled-128 el-toggle-radio-label"
          for="today"
          role="button"
          tabindex="0"
        >
          <span
            class="mocked-styled-124 el-toggle-radio-item"
          >
            Today
          </span>
        </label>
        <input
          class="mocked-styled-127 el-toggle-radio"
          id="tomorrow"
          name="appointment-time"
          type="radio"
          value="TOMORROW"
        />
        <label
          class="mocked-styled-128 el-toggle-radio-label"
          for="tomorrow"
          role="button"
          tabindex="0"
        >
          <span
            class="mocked-styled-124 el-toggle-radio-item"
          >
            Tomorrow
          </span>
        </label>
        <input
          class="mocked-styled-127 el-toggle-radio"
          id="week"
          name="appointment-time"
          type="radio"
          value="WEEK"
        />
        <label
          class="mocked-styled-128 el-toggle-radio-label"
          for="week"
          role="button"
          tabindex="0"
        >
          <span
            class="mocked-styled-124 el-toggle-radio-item"
          >
            Week
          </span>
        </label>
      </div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
