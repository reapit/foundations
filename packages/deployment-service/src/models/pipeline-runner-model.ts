import { table, autoGeneratedHashKey, attribute, hashKey } from '@aws/dynamodb-data-mapper-annotations'
import { embed } from '@aws/dynamodb-data-mapper'
import {
  PipelineRunnerModelInterface,
  DeploymentStatus,
  PipelineModelInterface,
} from '@reapit/foundations-ts-definitions'
import { TABLE_NAMES } from '../constants'
import { TaskModel } from './task-model'
import { PipelineModel } from './pipeline-model'

@table(TABLE_NAMES.PIPELINE_RUNNER)
export class PipelineRunnerModel implements PipelineRunnerModelInterface {
  @autoGeneratedHashKey()
  id?: string

  @hashKey()
  pipelineId?: string

  @attribute({ defaultProvider: () => Date() })
  created?: string

  @attribute({ defaultProvider: () => Date() })
  modified?: string

  @attribute({ defaultProvider: () => DeploymentStatus.PENDING })
  buildStatus?: DeploymentStatus

  @attribute()
  S3Location?: string

  @attribute({ memberType: embed(TaskModel) })
  tasks?: TaskModel[] = []

  @attribute({ memberType: embed(PipelineModel) })
  pipeline?: PipelineModelInterface
}
