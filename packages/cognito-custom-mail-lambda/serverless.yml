service: cloud-custom-mailer
plugins:
  - serverless-deployment-bucket
  - serverless-plugin-log-retention

custom:
  s3CloudFormBucket: cloud-custom-mailer-${opt:stage, 'dev'}
  env: ${file(./config.json)}
  logRetentionInDays: 30

provider:
  name: aws
  runtime: 'nodejs18.x'
  stage: ${opt:stage, 'dev'}
  region: eu-west-2
  deploymentBucket:
    name: ${self:custom.s3CloudFormBucket}
  vpc:
    securityGroupIds:
      - Fn::ImportValue:
          Fn::Join:
            - ''
            - - 'rpt-paas-'
              - ${self:provider.stage}
              - '-sg-LambdaSecurityGroup'
    subnetIds:
      - Fn::ImportValue:
          Fn::Join:
            - ''
            - - 'rpt-paas-'
              - ${self:provider.stage}
              - '-vpc-PrivateSubnet1'
      - Fn::ImportValue:
          Fn::Join:
            - ''
            - - 'rpt-paas-'
              - ${self:provider.stage}
              - '-vpc-PrivateSubnet2'
      - Fn::ImportValue:
          Fn::Join:
            - ''
            - - 'rpt-paas-'
              - ${self:provider.stage}
              - '-vpc-PrivateSubnet3'
  environment:
    COGNITO_USERPOOL_ID: ${self:custom.env.COGNITO_USERPOOL_ID}
    MARKET_PLACE_URL: ${self:custom.env.MARKET_PLACE_URL}
    INTERNAL_ORG_SERVICE_URL: ${self:custom.env.INTERNAL_ORG_SERVICE_URL}
    AGENTBOX_URL: ${self:custom.env.AGENTBOX_URL}

package:
  artifact: './dist/app.zip'

functions:
  cognitoCustomMailerHandler:
    handler: src/app.cognitoCustomMailerHandler

resources:
  Outputs:
    CustomMailerArn:
      Value: 
        Ref: cognitoCustomMailerHandler
      Export:
          Name: ${self:provider.stage}-CognitoCustomMailerHandlerArn