// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ClientSearch renderForm should match a snapshot when loginMode is DESKTOP 1`] = `
<React.Fragment>
  <H3
    className="mb-0"
    isHeadingSection={true}
  >
    Client Search
  </H3>
  <Section>
    <FadeIn>
      <Form>
        <Input
          id="name"
          labelText="Search by name"
          name="name"
          placeholder="Firstname or Surname"
          type="text"
        />
        <Input
          id="address"
          labelText="Search by address"
          name="address"
          placeholder="Streetname, Village, Town or Postcode"
          type="text"
        />
        <SelectBox
          id="identityCheck"
          labelText="Search by ID Status"
          name="identityCheck"
          options={
            Array [
              Object {
                "label": "Please select…",
                "value": "",
              },
              Object {
                "label": "Pass",
                "value": "Pass",
              },
              Object {
                "label": "Fail",
                "value": "Fail",
              },
              Object {
                "label": "Pending",
                "value": "Pending",
              },
              Object {
                "label": "Cancelled",
                "value": "Cancelled",
              },
              Object {
                "label": "Warnings",
                "value": "Warnings",
              },
              Object {
                "label": "Unchecked",
                "value": "Unchecked",
              },
            ]
          }
        />
        <Button
          className="is-right"
          type="submit"
          variant="primary"
        >
          Search
        </Button>
        <AcButton
          buttonProps={
            Object {
              "disabled": true,
              "type": "button",
              "variant": "primary",
            }
          }
          dynamicLinkParams={
            Object {
              "appMode": "DESKTOP",
              "entityType": "contacts",
              "queryParams": Object {
                "address": undefined,
                "appId": undefined,
                "appParam": "cntCode",
                "name": undefined,
              },
            }
          }
        >
          Advanced Search
        </AcButton>
      </Form>
    </FadeIn>
  </Section>
</React.Fragment>
`;

exports[`ClientSearch renderForm should match a snapshot when loginMode is WEB 1`] = `
<React.Fragment>
  <H3
    className="mb-0"
    isHeadingSection={true}
  >
    Client Search
  </H3>
  <Section>
    <FadeIn>
      <Form>
        <Input
          id="name"
          labelText="Search by name"
          name="name"
          placeholder="Firstname or Surname"
          type="text"
        />
        <Input
          id="address"
          labelText="Search by address"
          name="address"
          placeholder="Streetname, Village, Town or Postcode"
          type="text"
        />
        <SelectBox
          id="identityCheck"
          labelText="Search by ID Status"
          name="identityCheck"
          options={
            Array [
              Object {
                "label": "Please select…",
                "value": "",
              },
              Object {
                "label": "Pass",
                "value": "Pass",
              },
              Object {
                "label": "Fail",
                "value": "Fail",
              },
              Object {
                "label": "Pending",
                "value": "Pending",
              },
              Object {
                "label": "Cancelled",
                "value": "Cancelled",
              },
              Object {
                "label": "Warnings",
                "value": "Warnings",
              },
              Object {
                "label": "Unchecked",
                "value": "Unchecked",
              },
            ]
          }
        />
        <Button
          className="is-right"
          type="submit"
          variant="primary"
        >
          Search
        </Button>
      </Form>
    </FadeIn>
  </Section>
</React.Fragment>
`;

exports[`ClientSearch should match a snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <h3
        class="title is-3 mb-0 is-heading-section"
        id=""
      >
        Client Search
      </h3>
      <section
        class="section has-padding has-margin has-background"
        data-test=""
      >
        <div
          class="fade-in"
        >
          <form
            action="#"
          >
            <div
              class="field"
            >
              <div
                class="control "
              >
                <label
                  class="label inline-block "
                  for="name"
                >
                  Search by name
                </label>
                <input
                  class="input is-primary"
                  data-test=""
                  id="name"
                  name="name"
                  placeholder="Firstname or Surname"
                  type="text"
                  value=""
                />
              </div>
            </div>
            <div
              class="field"
            >
              <div
                class="control "
              >
                <label
                  class="label inline-block "
                  for="address"
                >
                  Search by address
                </label>
                <input
                  class="input is-primary"
                  data-test=""
                  id="address"
                  name="address"
                  placeholder="Streetname, Village, Town or Postcode"
                  type="text"
                  value=""
                />
              </div>
            </div>
            <div
              class="field"
            >
              <div
                class="control"
              >
                <label
                  class="label "
                  for="identityCheck"
                >
                  Search by ID Status
                </label>
                <select
                  class="input is-primary "
                  data-test=""
                  name="identityCheck"
                >
                  <option
                    value=""
                  >
                    Please select…
                  </option>
                  <option
                    value="Pass"
                  >
                    Pass
                  </option>
                  <option
                    value="Fail"
                  >
                    Fail
                  </option>
                  <option
                    value="Pending"
                  >
                    Pending
                  </option>
                  <option
                    value="Cancelled"
                  >
                    Cancelled
                  </option>
                  <option
                    value="Warnings"
                  >
                    Warnings
                  </option>
                  <option
                    value="Unchecked"
                  >
                    Unchecked
                  </option>
                  <option
                    disabled=""
                    hidden=""
                    value=""
                  >
                    Please select
                  </option>
                </select>
              </div>
            </div>
            <button
              class="button   is-primary is-right"
              data-test=""
              type="submit"
            >
              Search
            </button>
          </form>
        </div>
      </section>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <h3
      class="title is-3 mb-0 is-heading-section"
      id=""
    >
      Client Search
    </h3>
    <section
      class="section has-padding has-margin has-background"
      data-test=""
    >
      <div
        class="fade-in"
      >
        <form
          action="#"
        >
          <div
            class="field"
          >
            <div
              class="control "
            >
              <label
                class="label inline-block "
                for="name"
              >
                Search by name
              </label>
              <input
                class="input is-primary"
                data-test=""
                id="name"
                name="name"
                placeholder="Firstname or Surname"
                type="text"
                value=""
              />
            </div>
          </div>
          <div
            class="field"
          >
            <div
              class="control "
            >
              <label
                class="label inline-block "
                for="address"
              >
                Search by address
              </label>
              <input
                class="input is-primary"
                data-test=""
                id="address"
                name="address"
                placeholder="Streetname, Village, Town or Postcode"
                type="text"
                value=""
              />
            </div>
          </div>
          <div
            class="field"
          >
            <div
              class="control"
            >
              <label
                class="label "
                for="identityCheck"
              >
                Search by ID Status
              </label>
              <select
                class="input is-primary "
                data-test=""
                name="identityCheck"
              >
                <option
                  value=""
                >
                  Please select…
                </option>
                <option
                  value="Pass"
                >
                  Pass
                </option>
                <option
                  value="Fail"
                >
                  Fail
                </option>
                <option
                  value="Pending"
                >
                  Pending
                </option>
                <option
                  value="Cancelled"
                >
                  Cancelled
                </option>
                <option
                  value="Warnings"
                >
                  Warnings
                </option>
                <option
                  value="Unchecked"
                >
                  Unchecked
                </option>
                <option
                  disabled=""
                  hidden=""
                  value=""
                >
                  Please select
                </option>
              </select>
            </div>
          </div>
          <button
            class="button   is-primary is-right"
            data-test=""
            type="submit"
          >
            Search
          </button>
        </form>
      </div>
    </section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
