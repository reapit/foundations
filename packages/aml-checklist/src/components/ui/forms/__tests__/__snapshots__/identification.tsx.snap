// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Identification Identification should match snapshot 1`] = `
<Formik
  initialValues={Object {}}
  onSubmit={[Function]}
  validationSchema={
    ObjectSchema {
      "_blacklist": RefSet {
        "list": Set {},
        "refs": Map {},
      },
      "_conditions": Array [],
      "_defaultDefault": [Function],
      "_deps": Array [],
      "_excludedEdges": Array [],
      "_exclusive": Object {},
      "_mutate": undefined,
      "_nodes": Array [
        "documentId",
      ],
      "_options": Object {
        "abortEarly": true,
        "recursive": true,
      },
      "_type": "object",
      "_typeError": [Function],
      "_whitelist": RefSet {
        "list": Set {},
        "refs": Map {},
      },
      "fields": Object {
        "documentId": StringSchema {
          "_blacklist": RefSet {
            "list": Set {},
            "refs": Map {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {
            "isValidBase64": false,
            "required": true,
          },
          "_mutate": undefined,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": RefSet {
            "list": Set {},
            "refs": Map {},
          },
          "tests": Array [
            [Function],
            [Function],
          ],
          "transforms": Array [
            [Function],
          ],
          "type": "string",
        },
      },
      "tests": Array [],
      "transforms": Array [
        [Function],
      ],
      "type": "object",
    }
  }
>
  <Component />
</Formik>
`;

exports[`Identification renderFormHandler should match snapshot when DISABLED false 1`] = `
<div>
  <Form>
    <Connect(Component)
      id="typeId"
      labelText="ID Type"
      name="typeId"
    />
    <Component
      id="details"
      labelText="ID Reference"
      name="details"
      placeholder="ID Reference"
      required={true}
      type="text"
    />
    <Component
      id="expiry"
      labelText="Expiry Date"
      name="expiry"
      required={true}
    />
    <Component
      accept="image/*"
      allowClear={true}
      id="documentId"
      inputProps={
        Object {
          "disabled": false,
        }
      }
      isNarrowWidth={true}
      labelText="Upload File"
      name="documentId"
      onFilenameClick={[Function]}
      required={true}
    />
    <div
      className="field pb-2"
    >
      <div
        className="columns undefined"
      >
        <div
          className="column"
        >
          <div
            className="undefined flex items-center"
          >
            <span>
              RPS Ref:
            </span>
            <span
              className="ml-1"
            >
              AYL19000001
            </span>
          </div>
        </div>
        <div
          className="column undefined"
        >
          <Component
            className="mr-2"
            disabled={false}
            loading={false}
            type="submit"
            variant="primary"
          >
            Save
          </Component>
          <Component
            className="mr-2"
            disabled={false}
            onClick={[MockFunction]}
            type="button"
            variant="primary"
          >
            Previous
          </Component>
          <Component
            disabled={false}
            type="button"
            variant="primary"
          >
            Next
          </Component>
        </div>
      </div>
    </div>
    <p
      className="is-size-6"
    >
      * Indicates fields that are required in order to ‘Complete’ this section.
    </p>
  </Form>
</div>
`;

exports[`Identification renderFormHandler should match snapshot when DISABLED true 1`] = `
<div>
  <p
    className="mb-4"
  >
    *Please ensure the Primary ID has been completed before adding a Secondary ID
  </p>
  <Form>
    <Connect(Component)
      id="typeId"
      labelText="ID Type"
      name="typeId"
    />
    <Component
      id="details"
      labelText="ID Reference"
      name="details"
      placeholder="ID Reference"
      required={true}
      type="text"
    />
    <Component
      id="expiry"
      labelText="Expiry Date"
      name="expiry"
      required={true}
    />
    <Component
      accept="image/*"
      allowClear={true}
      id="documentId"
      inputProps={
        Object {
          "disabled": true,
        }
      }
      isNarrowWidth={true}
      labelText="Upload File"
      name="documentId"
      onFilenameClick={[Function]}
      required={true}
    />
    <div
      className="field pb-2"
    >
      <div
        className="columns undefined"
      >
        <div
          className="column"
        >
          <div
            className="undefined flex items-center"
          >
            <span>
              RPS Ref:
            </span>
            <span
              className="ml-1"
            >
              AYL19000001
            </span>
          </div>
        </div>
        <div
          className="column undefined"
        >
          <Component
            className="mr-2"
            disabled={true}
            loading={false}
            type="submit"
            variant="primary"
          >
            Save
          </Component>
          <Component
            className="mr-2"
            disabled={false}
            onClick={[MockFunction]}
            type="button"
            variant="primary"
          >
            Previous
          </Component>
          <Component
            disabled={true}
            type="button"
            variant="primary"
          >
            Next
          </Component>
        </div>
      </div>
    </div>
    <p
      className="is-size-6"
    >
      * Indicates fields that are required in order to ‘Complete’ this section.
    </p>
  </Form>
</div>
`;
