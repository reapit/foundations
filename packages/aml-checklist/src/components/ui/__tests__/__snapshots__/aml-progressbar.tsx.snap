// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AMLProgressBar AMLProgressBar should match snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <div
        class="fade-in"
      >
        <section
          class="section has-padding has-background"
          data-test=""
        >
          <div
            class="level"
            data-test=""
          >
            <div
              class="level-left"
              data-test=""
            >
              <div
                class="level-item"
                data-test=""
              >
                <section
                  class="section is-flex is-flex-column has-background"
                  data-test=""
                >
                  <h3
                    class="title is-3 mb-5"
                    id=""
                  >
                    <a
                      class="dynamic-link "
                      href="#"
                    >
                      Mrs H Phillips
                    </a>
                  </h3>
                  <h5
                    class="subtitle is-5"
                    id=""
                  />
                </section>
              </div>
            </div>
            <div
              class="level-right"
              data-test=""
            >
              <div
                class="level-item"
                data-test=""
              >
                <button
                  class="button   is-primary "
                  data-test=""
                  type="button"
                >
                  Update Status
                </button>
              </div>
            </div>
          </div>
          <div
            class="progress-bar"
          >
            <div
              class="filler"
              style="width: 40%;"
            />
          </div>
          <div
            class="has-text-right"
          >
            2
            /
            5
             
            <span>
              Completed
            </span>
          </div>
        </section>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <div
      class="fade-in"
    >
      <section
        class="section has-padding has-background"
        data-test=""
      >
        <div
          class="level"
          data-test=""
        >
          <div
            class="level-left"
            data-test=""
          >
            <div
              class="level-item"
              data-test=""
            >
              <section
                class="section is-flex is-flex-column has-background"
                data-test=""
              >
                <h3
                  class="title is-3 mb-5"
                  id=""
                >
                  <a
                    class="dynamic-link "
                    href="#"
                  >
                    Mrs H Phillips
                  </a>
                </h3>
                <h5
                  class="subtitle is-5"
                  id=""
                />
              </section>
            </div>
          </div>
          <div
            class="level-right"
            data-test=""
          >
            <div
              class="level-item"
              data-test=""
            >
              <button
                class="button   is-primary "
                data-test=""
                type="button"
              >
                Update Status
              </button>
            </div>
          </div>
        </div>
        <div
          class="progress-bar"
        >
          <div
            class="filler"
            style="width: 40%;"
          />
        </div>
        <div
          class="has-text-right"
        >
          2
          /
          5
           
          <span>
            Completed
          </span>
        </div>
      </section>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
