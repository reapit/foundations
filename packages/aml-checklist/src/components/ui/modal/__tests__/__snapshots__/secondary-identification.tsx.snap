// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SecondaryIdentification SecondaryIdentification should match snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <form
        action="#"
      >
        <div
          class="field"
        >
          <div
            class="control"
          >
            <label
              class="label required-label"
              for="typeId"
            >
              ID Type
            </label>
            <select
              class="input is-primary "
              data-test=""
              name="typeId"
            >
              <option
                disabled=""
                hidden=""
                value=""
              >
                Please select
              </option>
            </select>
          </div>
        </div>
        <div
          class="field"
        >
          <div
            class="control "
          >
            <label
              class="label inline-block required-label"
              for="details"
            >
              ID Reference
            </label>
            <input
              class="input is-primary"
              data-test=""
              id="details"
              name="details"
              placeholder="ID Reference"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          class="field"
        >
          <div
            class="control "
          >
            <label
              class="label inline-block required-label"
              for="expiry"
            >
              Expiry Date
            </label>
            <input
              class="input is-primary"
              data-test=""
              id="expiry"
              name="expiry"
              placeholder=""
              type="date"
              value=""
            />
          </div>
        </div>
        <div
          class="file is-primary  field pb-2"
        >
          <div
            class="control file-input-container is-full-width"
          >
            <label
              class="file-label"
              data-test="file-input-label"
              for="documentId"
            >
              <input
                accept=""
                capture="camera"
                class="file-input"
                data-test=""
                id="documentId"
                type="file"
              />
              <span
                class="file-cta required-label"
              >
                Upload File
              </span>
            </label>
          </div>
        </div>
        <div
          class="field pb-2"
        >
          <div
            class="columns undefined"
          >
            <div
              class="column"
            >
              <div
                class="undefined flex items-center"
              >
                <span>
                  RPS Ref:
                </span>
                <span
                  class="ml-1"
                >
                  AYL19000001
                </span>
              </div>
            </div>
            <div
              class="is-centered buttons mx-auto"
            >
              <button
                class="button   is-success mr-2"
                data-test=""
                type="submit"
              >
                Save
              </button>
              <button
                class="button   is-secondary mr-2"
                data-test=""
                type="button"
              >
                Previous
              </button>
              <button
                class="button   is-primary "
                data-test=""
                type="button"
              >
                Next
              </button>
            </div>
          </div>
        </div>
        <p
          class="is-size-6"
        >
          * Indicates fields that are required in order to ‘Complete’ this section.
        </p>
      </form>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <form
      action="#"
    >
      <div
        class="field"
      >
        <div
          class="control"
        >
          <label
            class="label required-label"
            for="typeId"
          >
            ID Type
          </label>
          <select
            class="input is-primary "
            data-test=""
            name="typeId"
          >
            <option
              disabled=""
              hidden=""
              value=""
            >
              Please select
            </option>
          </select>
        </div>
      </div>
      <div
        class="field"
      >
        <div
          class="control "
        >
          <label
            class="label inline-block required-label"
            for="details"
          >
            ID Reference
          </label>
          <input
            class="input is-primary"
            data-test=""
            id="details"
            name="details"
            placeholder="ID Reference"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="field"
      >
        <div
          class="control "
        >
          <label
            class="label inline-block required-label"
            for="expiry"
          >
            Expiry Date
          </label>
          <input
            class="input is-primary"
            data-test=""
            id="expiry"
            name="expiry"
            placeholder=""
            type="date"
            value=""
          />
        </div>
      </div>
      <div
        class="file is-primary  field pb-2"
      >
        <div
          class="control file-input-container is-full-width"
        >
          <label
            class="file-label"
            data-test="file-input-label"
            for="documentId"
          >
            <input
              accept=""
              capture="camera"
              class="file-input"
              data-test=""
              id="documentId"
              type="file"
            />
            <span
              class="file-cta required-label"
            >
              Upload File
            </span>
          </label>
        </div>
      </div>
      <div
        class="field pb-2"
      >
        <div
          class="columns undefined"
        >
          <div
            class="column"
          >
            <div
              class="undefined flex items-center"
            >
              <span>
                RPS Ref:
              </span>
              <span
                class="ml-1"
              >
                AYL19000001
              </span>
            </div>
          </div>
          <div
            class="is-centered buttons mx-auto"
          >
            <button
              class="button   is-success mr-2"
              data-test=""
              type="submit"
            >
              Save
            </button>
            <button
              class="button   is-secondary mr-2"
              data-test=""
              type="button"
            >
              Previous
            </button>
            <button
              class="button   is-primary "
              data-test=""
              type="button"
            >
              Next
            </button>
          </div>
        </div>
      </div>
      <p
        class="is-size-6"
      >
        * Indicates fields that are required in order to ‘Complete’ this section.
      </p>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
