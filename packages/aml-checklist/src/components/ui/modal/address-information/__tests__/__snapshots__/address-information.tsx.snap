// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddressInformation AddressInput should render correctly 1`] = `
<div
  key="primaryAddress"
>
  <Component
    id="primaryAddress[type]"
    labelText="Type"
    name="primaryAddress[type]"
    type="hidden"
  />
  <Component
    id="primaryAddress[buildingName]"
    labelText="Building Name"
    name="primaryAddress[buildingName]"
    type="text"
  />
  <Component
    id="primaryAddress[buildingNumber]"
    labelText="Building Number"
    name="primaryAddress[buildingNumber]"
    type="text"
  />
  <Component
    id="primaryAddress[line1]"
    labelText="Line 1"
    name="primaryAddress[line1]"
    required={true}
    type="text"
  />
  <Component
    id="primaryAddress[line2]"
    labelText="Line 2"
    name="primaryAddress[line2]"
    type="text"
  />
  <Component
    id="primaryAddress[line3]"
    labelText="Line 3"
    name="primaryAddress[line3]"
    required={true}
    type="text"
  />
  <Component
    id="primaryAddress[line4]"
    labelText="Line 4"
    name="primaryAddress[line4]"
    type="text"
  />
  <Component
    id="primaryAddress[postcode]"
    labelText="Post Code"
    name="primaryAddress[postcode]"
    required={true}
    type="text"
  />
  <Component
    id="metadata.primaryAddress[year]"
    labelText="Number of Years at Address"
    name="metadata.primaryAddress[year]"
    options={
      Array [
        Object {
          "label": "1",
          "value": "1",
        },
        Object {
          "label": "2",
          "value": "2",
        },
        Object {
          "label": "3",
          "value": "3",
        },
        Object {
          "label": "4",
          "value": "4",
        },
        Object {
          "label": "5",
          "value": "5",
        },
        Object {
          "label": "6",
          "value": "6",
        },
        Object {
          "label": "7",
          "value": "7",
        },
        Object {
          "label": "8",
          "value": "8",
        },
        Object {
          "label": "9",
          "value": "9",
        },
        Object {
          "label": "10",
          "value": "10",
        },
        Object {
          "label": "11",
          "value": "11",
        },
        Object {
          "label": "12",
          "value": "12",
        },
        Object {
          "label": "13",
          "value": "13",
        },
        Object {
          "label": "14",
          "value": "14",
        },
        Object {
          "label": "15",
          "value": "15",
        },
        Object {
          "label": "16",
          "value": "16",
        },
        Object {
          "label": "17",
          "value": "17",
        },
        Object {
          "label": "18",
          "value": "18",
        },
        Object {
          "label": "19",
          "value": "19",
        },
        Object {
          "label": "20",
          "value": "20",
        },
        Object {
          "label": "21",
          "value": "21",
        },
        Object {
          "label": "22",
          "value": "22",
        },
        Object {
          "label": "23",
          "value": "23",
        },
        Object {
          "label": "24",
          "value": "24",
        },
        Object {
          "label": "25",
          "value": "25",
        },
        Object {
          "label": "26",
          "value": "26",
        },
        Object {
          "label": "27",
          "value": "27",
        },
        Object {
          "label": "28",
          "value": "28",
        },
        Object {
          "label": "29",
          "value": "29",
        },
        Object {
          "label": "30",
          "value": "30",
        },
        Object {
          "label": "31",
          "value": "31",
        },
        Object {
          "label": "32",
          "value": "32",
        },
        Object {
          "label": "33",
          "value": "33",
        },
        Object {
          "label": "34",
          "value": "34",
        },
        Object {
          "label": "35",
          "value": "35",
        },
        Object {
          "label": "36",
          "value": "36",
        },
        Object {
          "label": "37",
          "value": "37",
        },
        Object {
          "label": "38",
          "value": "38",
        },
        Object {
          "label": "39",
          "value": "39",
        },
        Object {
          "label": "40",
          "value": "40",
        },
        Object {
          "label": "41",
          "value": "41",
        },
        Object {
          "label": "42",
          "value": "42",
        },
        Object {
          "label": "43",
          "value": "43",
        },
        Object {
          "label": "44",
          "value": "44",
        },
        Object {
          "label": "45",
          "value": "45",
        },
        Object {
          "label": "46",
          "value": "46",
        },
        Object {
          "label": "47",
          "value": "47",
        },
        Object {
          "label": "48",
          "value": "48",
        },
        Object {
          "label": "49",
          "value": "49",
        },
        Object {
          "label": "50",
          "value": "50",
        },
        Object {
          "label": "51",
          "value": "51",
        },
        Object {
          "label": "52",
          "value": "52",
        },
        Object {
          "label": "53",
          "value": "53",
        },
        Object {
          "label": "54",
          "value": "54",
        },
        Object {
          "label": "55",
          "value": "55",
        },
        Object {
          "label": "56",
          "value": "56",
        },
        Object {
          "label": "57",
          "value": "57",
        },
        Object {
          "label": "58",
          "value": "58",
        },
        Object {
          "label": "59",
          "value": "59",
        },
        Object {
          "label": "60",
          "value": "60",
        },
        Object {
          "label": "61",
          "value": "61",
        },
        Object {
          "label": "62",
          "value": "62",
        },
        Object {
          "label": "63",
          "value": "63",
        },
        Object {
          "label": "64",
          "value": "64",
        },
        Object {
          "label": "65",
          "value": "65",
        },
        Object {
          "label": "66",
          "value": "66",
        },
        Object {
          "label": "67",
          "value": "67",
        },
        Object {
          "label": "68",
          "value": "68",
        },
        Object {
          "label": "69",
          "value": "69",
        },
        Object {
          "label": "70",
          "value": "70",
        },
        Object {
          "label": "71",
          "value": "71",
        },
        Object {
          "label": "72",
          "value": "72",
        },
        Object {
          "label": "73",
          "value": "73",
        },
        Object {
          "label": "74",
          "value": "74",
        },
        Object {
          "label": "75",
          "value": "75",
        },
        Object {
          "label": "76",
          "value": "76",
        },
        Object {
          "label": "77",
          "value": "77",
        },
        Object {
          "label": "78",
          "value": "78",
        },
        Object {
          "label": "79",
          "value": "79",
        },
        Object {
          "label": "80",
          "value": "80",
        },
        Object {
          "label": "81",
          "value": "81",
        },
        Object {
          "label": "82",
          "value": "82",
        },
        Object {
          "label": "83",
          "value": "83",
        },
        Object {
          "label": "84",
          "value": "84",
        },
        Object {
          "label": "85",
          "value": "85",
        },
        Object {
          "label": "86",
          "value": "86",
        },
        Object {
          "label": "87",
          "value": "87",
        },
        Object {
          "label": "88",
          "value": "88",
        },
        Object {
          "label": "89",
          "value": "89",
        },
        Object {
          "label": "90",
          "value": "90",
        },
        Object {
          "label": "91",
          "value": "91",
        },
        Object {
          "label": "92",
          "value": "92",
        },
        Object {
          "label": "93",
          "value": "93",
        },
        Object {
          "label": "94",
          "value": "94",
        },
        Object {
          "label": "95",
          "value": "95",
        },
        Object {
          "label": "96",
          "value": "96",
        },
        Object {
          "label": "97",
          "value": "97",
        },
        Object {
          "label": "98",
          "value": "98",
        },
        Object {
          "label": "99",
          "value": "99",
        },
        Object {
          "label": "100",
          "value": "100",
        },
      ]
    }
    required={true}
  />
  <Component
    id="metadata.primaryAddress[month]"
    labelText="Number of Months at Address"
    name="metadata.primaryAddress[month]"
    options={
      Array [
        Object {
          "label": "1",
          "value": "1",
        },
        Object {
          "label": "2",
          "value": "2",
        },
        Object {
          "label": "3",
          "value": "3",
        },
        Object {
          "label": "4",
          "value": "4",
        },
        Object {
          "label": "5",
          "value": "5",
        },
        Object {
          "label": "6",
          "value": "6",
        },
        Object {
          "label": "7",
          "value": "7",
        },
        Object {
          "label": "8",
          "value": "8",
        },
        Object {
          "label": "9",
          "value": "9",
        },
        Object {
          "label": "10",
          "value": "10",
        },
        Object {
          "label": "11",
          "value": "11",
        },
        Object {
          "label": "12",
          "value": "12",
        },
      ]
    }
    required={true}
  />
  <Component
    id="metadata.primaryAddress[documentType]"
    labelText="Document Type"
    name="metadata.primaryAddress[documentType]"
    options={
      Array [
        Object {
          "label": "Please Select",
          "value": "",
        },
        Object {
          "label": "Mortgage Statement or Mortgage Redemption Statement",
          "value": "Mortgage Statement or Mortgage Redemption Statement",
        },
        Object {
          "label": "Recent Utility Bill – Gas, Electricity, Water, Telephone (Not mobile phones)",
          "value": "Recent Utility Bill – Gas, Electricity, Water, Telephone (Not mobile phones)",
        },
        Object {
          "label": "Current Council Tax Bill",
          "value": "Current Council Tax Bill",
        },
        Object {
          "label": "Current Full UK Driving Licence",
          "value": "Current Full UK Driving Licence",
        },
        Object {
          "label": "Current UK / EU Photocard Driving Licence with Counterpart",
          "value": "Current UK / EU Photocard Driving Licence with Counterpart",
        },
        Object {
          "label": "House or motor insurance certificate",
          "value": "House or motor insurance certificate",
        },
        Object {
          "label": "Current State Pension notification letter",
          "value": "Current State Pension notification letter",
        },
        Object {
          "label": "Current Benefits Agency letter",
          "value": "Current Benefits Agency letter",
        },
        Object {
          "label": "Bank / Building Society / Statement",
          "value": "Bank / Building Society / Statement",
        },
        Object {
          "label": "Solicitor letter confirming completion of house purchase",
          "value": "Solicitor letter confirming completion of house purchase",
        },
        Object {
          "label": "Credit Card Statements from main provider",
          "value": "Credit Card Statements from main provider",
        },
        Object {
          "label": "HMRC Tax notification documentation (this does not include P60’s)",
          "value": "HMRC Tax notification documentation (this does not include P60’s)",
        },
        Object {
          "label": "Account, investment or insurance documents",
          "value": "Account, investment or insurance documents",
        },
        Object {
          "label": "Letter from Council Confirming Electoral Roll Listing",
          "value": "Letter from Council Confirming Electoral Roll Listing",
        },
      ]
    }
    required={true}
  />
  <Component
    accept="image/*"
    allowClear={true}
    id="metadata.primaryAddress[documentImage]"
    isNarrowWidth={true}
    labelText="Upload File"
    name="metadata.primaryAddress[documentImage]"
    required={true}
  />
</div>
`;

exports[`AddressInformation should match snapshot 1`] = `
<div>
  <Formik
    initialValues={
      Object {
        "metadata": Object {
          "primaryAddress": Object {
            "documentImage": "",
          },
          "secondaryAddress": Object {
            "documentImage": "",
          },
        },
        "primaryAddress": Object {
          "buildingName": "aa",
          "buildingNumber": "37",
          "countryId": "GB",
          "line1": "Kingsway Place",
          "line2": "London",
          "line3": "a",
          "line4": "a",
          "postcode": "EC1R 0LU",
          "type": "primary",
        },
        "secondaryAddress": Object {
          "buildingName": "cuong",
          "buildingNumber": "1",
          "countryId": "GB",
          "line1": "Line1",
          "line2": "Line2",
          "line3": "Line3",
          "line4": "Line4",
          "postcode": "EC1R 0LU",
          "type": "secondary",
        },
      }
    }
    onSubmit={[MockFunction]}
    validationSchema={
      ObjectSchema {
        "_blacklist": RefSet {
          "list": Set {},
          "refs": Map {},
        },
        "_conditions": Array [],
        "_defaultDefault": [Function],
        "_deps": Array [],
        "_excludedEdges": Array [],
        "_exclusive": Object {},
        "_mutate": undefined,
        "_nodes": Array [
          "metadata",
        ],
        "_options": Object {
          "abortEarly": true,
          "recursive": true,
        },
        "_type": "object",
        "_typeError": [Function],
        "_whitelist": RefSet {
          "list": Set {},
          "refs": Map {},
        },
        "fields": Object {
          "metadata": ObjectSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_defaultDefault": [Function],
            "_deps": Array [],
            "_excludedEdges": Array [],
            "_exclusive": Object {},
            "_mutate": undefined,
            "_nodes": Array [
              "secondaryAddress",
              "primaryAddress",
            ],
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "object",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "fields": Object {
              "primaryAddress": ObjectSchema {
                "_blacklist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_conditions": Array [],
                "_defaultDefault": [Function],
                "_deps": Array [],
                "_excludedEdges": Array [],
                "_exclusive": Object {},
                "_mutate": undefined,
                "_nodes": Array [
                  "documentImage",
                ],
                "_options": Object {
                  "abortEarly": true,
                  "recursive": true,
                },
                "_type": "object",
                "_typeError": [Function],
                "_whitelist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "fields": Object {
                  "documentImage": StringSchema {
                    "_blacklist": RefSet {
                      "list": Set {},
                      "refs": Map {},
                    },
                    "_conditions": Array [],
                    "_deps": Array [],
                    "_exclusive": Object {
                      "isValidBase64": false,
                      "required": true,
                    },
                    "_mutate": undefined,
                    "_options": Object {
                      "abortEarly": true,
                      "recursive": true,
                    },
                    "_type": "string",
                    "_typeError": [Function],
                    "_whitelist": RefSet {
                      "list": Set {},
                      "refs": Map {},
                    },
                    "tests": Array [
                      [Function],
                      [Function],
                    ],
                    "transforms": Array [
                      [Function],
                    ],
                    "type": "string",
                  },
                },
                "tests": Array [],
                "transforms": Array [
                  [Function],
                ],
                "type": "object",
              },
              "secondaryAddress": ObjectSchema {
                "_blacklist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_conditions": Array [],
                "_defaultDefault": [Function],
                "_deps": Array [],
                "_excludedEdges": Array [],
                "_exclusive": Object {},
                "_mutate": undefined,
                "_nodes": Array [
                  "documentImage",
                ],
                "_options": Object {
                  "abortEarly": true,
                  "recursive": true,
                },
                "_type": "object",
                "_typeError": [Function],
                "_whitelist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "fields": Object {
                  "documentImage": StringSchema {
                    "_blacklist": RefSet {
                      "list": Set {},
                      "refs": Map {},
                    },
                    "_conditions": Array [],
                    "_deps": Array [],
                    "_exclusive": Object {
                      "isValidBase64": false,
                      "required": true,
                    },
                    "_mutate": undefined,
                    "_options": Object {
                      "abortEarly": true,
                      "recursive": true,
                    },
                    "_type": "string",
                    "_typeError": [Function],
                    "_whitelist": RefSet {
                      "list": Set {},
                      "refs": Map {},
                    },
                    "tests": Array [
                      [Function],
                      [Function],
                    ],
                    "transforms": Array [
                      [Function],
                    ],
                    "type": "string",
                  },
                },
                "tests": Array [],
                "transforms": Array [
                  [Function],
                ],
                "type": "object",
              },
            },
            "tests": Array [],
            "transforms": Array [
              [Function],
            ],
            "type": "object",
          },
        },
        "tests": Array [],
        "transforms": Array [
          [Function],
        ],
        "type": "object",
      }
    }
  >
    <Component />
  </Formik>
</div>
`;
