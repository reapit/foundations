// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Card should match a snapshot and render children with full props 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div>
              <mock-styled.span
                classname=""
              >
                <svg />
              </mock-styled.span>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname=""
              >
                <svg />
              </mock-styled.span>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname=""
              >
                <svg />
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.mock-styled.div
            classname=""
          >
            <img
              alt="https://via.placeholder.com/72x72.svg"
              src="https://via.placeholder.com/72x72.svg"
            />
          </mock-styled.mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.h5>
              Main Heading
            </mock-styled.h5>
            <mock-styled.h6>
              Main Subheading
            </mock-styled.h6>
            <mock-styled.h6>
              Main Subheading Additional
            </mock-styled.h6>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 0.75rem;
"
        >
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  margin-top: 0.75rem;
"
        >
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname=""
              >
                <svg />
              </mock-styled.span>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div>
                <mock-styled.span
                  classname=""
                >
                  <svg />
                </mock-styled.span>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.span
                  classname=""
                >
                  <svg />
                </mock-styled.span>
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.span
                  classname=""
                >
                  <svg />
                </mock-styled.span>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.h5>
            List Card Heading
          </mock-styled.h5>
          <mock-styled.h6>
            List Card Sub Heading
          </mock-styled.h6>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              Applicant
            </mock-styled.div>
            <mock-styled.div>
              Bob Smith
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              Property
            </mock-styled.div>
            <mock-styled.div>
              Some Address
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div
      classname=""
    >
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.mock-styled.div
          classname=""
        >
          <img
            alt="https://via.placeholder.com/72x72.svg"
            src="https://via.placeholder.com/72x72.svg"
          />
        </mock-styled.mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.h5>
            Main Heading
          </mock-styled.h5>
          <mock-styled.h6>
            Main Subheading
          </mock-styled.h6>
          <mock-styled.h6>
            Main Subheading Additional
          </mock-styled.h6>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 0.75rem;
"
      >
        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  margin-top: 0.75rem;
"
      >
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div>
              <mock-styled.span
                classname=""
              >
                <svg />
              </mock-styled.span>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname=""
              >
                <svg />
              </mock-styled.span>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname=""
              >
                <svg />
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.h5>
          List Card Heading
        </mock-styled.h5>
        <mock-styled.h6>
          List Card Sub Heading
        </mock-styled.h6>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Applicant
          </mock-styled.div>
          <mock-styled.div>
            Bob Smith
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            Property
          </mock-styled.div>
          <mock-styled.div>
            Some Address
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Card should match a snapshot and render children with no props 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div
        classname=""
      />
    </div>
  </body>,
  "container": <div>
    <mock-styled.div
      classname=""
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`CardContextMenu should match a snapshot and render children with full props 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div>
      <mock-styled.div>
        <mock-styled.span
          classname=""
        >
          <svg />
        </mock-styled.span>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`CardContextMenu should match a snapshot and render children with no props 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div />
  </body>,
  "container": <div />,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
