// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`KeyValueList component should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.span
            classname="mock-css."
            style="font-size: 20px;"
          >
            <svg
              style="font-size: 20px;"
            />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  flex-direction: column;
"
        >
          <mock-styled.mock-styled.div
            classname="mock-css."
          >
            Name
          </mock-styled.mock-styled.div>
          <mock-styled.mock-styled.div
            classname=""
          >
            John Doe
          </mock-styled.mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.span
            classname="mock-css."
            style="font-size: 20px;"
          >
            <svg
              style="font-size: 20px;"
            />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  flex-direction: column;
"
        >
          <mock-styled.mock-styled.div
            classname="mock-css."
          >
            Email
          </mock-styled.mock-styled.div>
          <mock-styled.mock-styled.div
            classname=""
          >
            email@example.com
          </mock-styled.mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.span
            classname="mock-css."
            style="font-size: 20px;"
          >
            <svg
              style="font-size: 20px;"
            />
          </mock-styled.span>
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  flex-direction: column;
"
        >
          <mock-styled.mock-styled.div
            classname="mock-css."
          >
            Address
          </mock-styled.mock-styled.div>
          <mock-styled.mock-styled.div
            classname=""
          >
            1234 Main St, Foo, Bar, 12345
          </mock-styled.mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div
      classname=""
    >
      <mock-styled.div
        classname=""
      >
        <mock-styled.span
          classname="mock-css."
          style="font-size: 20px;"
        >
          <svg
            style="font-size: 20px;"
          />
        </mock-styled.span>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  flex-direction: column;
"
      >
        <mock-styled.mock-styled.div
          classname="mock-css."
        >
          Name
        </mock-styled.mock-styled.div>
        <mock-styled.mock-styled.div
          classname=""
        >
          John Doe
        </mock-styled.mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div
      classname=""
    >
      <mock-styled.div
        classname=""
      >
        <mock-styled.span
          classname="mock-css."
          style="font-size: 20px;"
        >
          <svg
            style="font-size: 20px;"
          />
        </mock-styled.span>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  flex-direction: column;
"
      >
        <mock-styled.mock-styled.div
          classname="mock-css."
        >
          Email
        </mock-styled.mock-styled.div>
        <mock-styled.mock-styled.div
          classname=""
        >
          email@example.com
        </mock-styled.mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
    <mock-styled.div
      classname=""
    >
      <mock-styled.div
        classname=""
      >
        <mock-styled.span
          classname="mock-css."
          style="font-size: 20px;"
        >
          <svg
            style="font-size: 20px;"
          />
        </mock-styled.span>
      </mock-styled.div>
      <mock-styled.div
        classname="mock-css.
  flex-direction: column;
"
      >
        <mock-styled.mock-styled.div
          classname="mock-css."
        >
          Address
        </mock-styled.mock-styled.div>
        <mock-styled.mock-styled.div
          classname=""
        >
          1234 Main St, Foo, Bar, 12345
        </mock-styled.mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`KeyValueList component should match a snapshot for a large grid 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              classname=""
            >
              <mock-styled.span
                classname="mock-css."
                style="font-size: 20px;"
              >
                <svg
                  style="font-size: 20px;"
                />
              </mock-styled.span>
            </mock-styled.div>
            <mock-styled.div
              classname="mock-css.
  flex-direction: column;
"
            >
              <mock-styled.mock-styled.div
                classname="mock-css."
              >
                Name
              </mock-styled.mock-styled.div>
              <mock-styled.mock-styled.div
                classname=""
              >
                John Doe
              </mock-styled.mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              classname=""
            >
              <mock-styled.span
                classname="mock-css."
                style="font-size: 20px;"
              >
                <svg
                  style="font-size: 20px;"
                />
              </mock-styled.span>
            </mock-styled.div>
            <mock-styled.div
              classname="mock-css.
  flex-direction: column;
"
            >
              <mock-styled.mock-styled.div
                classname="mock-css."
              >
                Email
              </mock-styled.mock-styled.div>
              <mock-styled.mock-styled.div
                classname=""
              >
                email@example.com
              </mock-styled.mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              classname=""
            >
              <mock-styled.span
                classname="mock-css."
                style="font-size: 20px;"
              >
                <svg
                  style="font-size: 20px;"
                />
              </mock-styled.span>
            </mock-styled.div>
            <mock-styled.div
              classname="mock-css.
  flex-direction: column;
"
            >
              <mock-styled.mock-styled.div
                classname="mock-css."
              >
                Address
              </mock-styled.mock-styled.div>
              <mock-styled.mock-styled.div
                classname=""
              >
                1234 Main St, Foo, Bar, 12345
              </mock-styled.mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div
      classname=""
    >
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname=""
          >
            <mock-styled.span
              classname="mock-css."
              style="font-size: 20px;"
            >
              <svg
                style="font-size: 20px;"
              />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  flex-direction: column;
"
          >
            <mock-styled.mock-styled.div
              classname="mock-css."
            >
              Name
            </mock-styled.mock-styled.div>
            <mock-styled.mock-styled.div
              classname=""
            >
              John Doe
            </mock-styled.mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname=""
          >
            <mock-styled.span
              classname="mock-css."
              style="font-size: 20px;"
            >
              <svg
                style="font-size: 20px;"
              />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  flex-direction: column;
"
          >
            <mock-styled.mock-styled.div
              classname="mock-css."
            >
              Email
            </mock-styled.mock-styled.div>
            <mock-styled.mock-styled.div
              classname=""
            >
              email@example.com
            </mock-styled.mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname=""
          >
            <mock-styled.span
              classname="mock-css."
              style="font-size: 20px;"
            >
              <svg
                style="font-size: 20px;"
              />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  flex-direction: column;
"
          >
            <mock-styled.mock-styled.div
              classname="mock-css."
            >
              Address
            </mock-styled.mock-styled.div>
            <mock-styled.mock-styled.div
              classname=""
            >
              1234 Main St, Foo, Bar, 12345
            </mock-styled.mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`KeyValueList component should match a snapshot for a small grid 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              classname=""
            >
              <mock-styled.span
                classname="mock-css."
                style="font-size: 20px;"
              >
                <svg
                  style="font-size: 20px;"
                />
              </mock-styled.span>
            </mock-styled.div>
            <mock-styled.div
              classname="mock-css.
  flex-direction: column;
"
            >
              <mock-styled.mock-styled.div
                classname="mock-css."
              >
                Name
              </mock-styled.mock-styled.div>
              <mock-styled.mock-styled.div
                classname=""
              >
                John Doe
              </mock-styled.mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              classname=""
            >
              <mock-styled.span
                classname="mock-css."
                style="font-size: 20px;"
              >
                <svg
                  style="font-size: 20px;"
                />
              </mock-styled.span>
            </mock-styled.div>
            <mock-styled.div
              classname="mock-css.
  flex-direction: column;
"
            >
              <mock-styled.mock-styled.div
                classname="mock-css."
              >
                Email
              </mock-styled.mock-styled.div>
              <mock-styled.mock-styled.div
                classname=""
              >
                email@example.com
              </mock-styled.mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname=""
          >
            <mock-styled.div
              classname=""
            >
              <mock-styled.span
                classname="mock-css."
                style="font-size: 20px;"
              >
                <svg
                  style="font-size: 20px;"
                />
              </mock-styled.span>
            </mock-styled.div>
            <mock-styled.div
              classname="mock-css.
  flex-direction: column;
"
            >
              <mock-styled.mock-styled.div
                classname="mock-css."
              >
                Address
              </mock-styled.mock-styled.div>
              <mock-styled.mock-styled.div
                classname=""
              >
                1234 Main St, Foo, Bar, 12345
              </mock-styled.mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div
      classname=""
    >
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname=""
          >
            <mock-styled.span
              classname="mock-css."
              style="font-size: 20px;"
            >
              <svg
                style="font-size: 20px;"
              />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  flex-direction: column;
"
          >
            <mock-styled.mock-styled.div
              classname="mock-css."
            >
              Name
            </mock-styled.mock-styled.div>
            <mock-styled.mock-styled.div
              classname=""
            >
              John Doe
            </mock-styled.mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname=""
          >
            <mock-styled.span
              classname="mock-css."
              style="font-size: 20px;"
            >
              <svg
                style="font-size: 20px;"
              />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  flex-direction: column;
"
          >
            <mock-styled.mock-styled.div
              classname="mock-css."
            >
              Email
            </mock-styled.mock-styled.div>
            <mock-styled.mock-styled.div
              classname=""
            >
              email@example.com
            </mock-styled.mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div
          classname=""
        >
          <mock-styled.div
            classname=""
          >
            <mock-styled.span
              classname="mock-css."
              style="font-size: 20px;"
            >
              <svg
                style="font-size: 20px;"
              />
            </mock-styled.span>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  flex-direction: column;
"
          >
            <mock-styled.mock-styled.div
              classname="mock-css."
            >
              Address
            </mock-styled.mock-styled.div>
            <mock-styled.mock-styled.div
              classname=""
            >
              1234 Main St, Foo, Bar, 12345
            </mock-styled.mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
