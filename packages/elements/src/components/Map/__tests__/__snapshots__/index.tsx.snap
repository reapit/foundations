// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Map Map should match snapshot 1`] = `
<GoogleMapsLoader
  params={
    Object {
      "key": "MOCK_API_KEY",
      "libraries": "places",
    }
  }
  render={[Function]}
/>
`;

exports[`Map renderMap should run correctly 1`] = `
<div>
  <div
    style={
      Object {
        "height": "90vh",
      }
    }
  >
    <t
      autoFitBounds={false}
      boundsOffset={0.002}
      center={Object {}}
      component={[Function]}
      coordinates={
        Array [
          Object {
            "position": Object {
              "lat": 0,
              "lng": 0,
            },
          },
          Object {
            "position": Object {
              "lat": 1,
              "lng": 1,
            },
          },
        ]
      }
      googleMaps={
        Object {
          "Animation": Object {
            "BOUNCE": 1,
            "DROP": 2,
            "Go": 4,
            "Lo": 3,
          },
          "BicyclingLayer": [MockFunction],
          "Circle": [MockFunction],
          "ControlPosition": Object {
            "BOTTOM": 11,
            "BOTTOM_CENTER": 11,
            "BOTTOM_LEFT": 10,
            "BOTTOM_RIGHT": 12,
            "CENTER": 13,
            "LEFT": 5,
            "LEFT_BOTTOM": 6,
            "LEFT_CENTER": 4,
            "LEFT_TOP": 5,
            "RIGHT": 7,
            "RIGHT_BOTTOM": 9,
            "RIGHT_CENTER": 8,
            "TOP": 2,
            "TOP_CENTER": 2,
            "TOP_LEFT": 1,
            "TOP_RIGHT": 3,
          },
          "Data": [MockFunction],
          "DirectionsRenderer": [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "DirectionsService": [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "DirectionsStatus": Object {
            "INVALID_REQUEST": "INVALID_REQUEST",
            "MAX_WAYPOINTS_EXCEEDED": "MAX_WAYPOINTS_EXCEEDED",
            "NOT_FOUND": "NOT_FOUND",
            "OK": "OK",
            "OVER_QUERY_LIMIT": "OVER_QUERY_LIMIT",
            "REQUEST_DENIED": "REQUEST_DENIED",
            "UNKNOWN_ERROR": "UNKNOWN_ERROR",
            "ZERO_RESULTS": "ZERO_RESULTS",
          },
          "DirectionsTravelMode": Object {
            "BICYCLING": "BICYCLING",
            "DRIVING": "DRIVING",
            "TRANSIT": "TRANSIT",
            "WALKING": "WALKING",
          },
          "DirectionsUnitSystem": Object {
            "IMPERIAL": 1,
            "METRIC": 0,
          },
          "DistanceMatrixElementStatus": Object {
            "NOT_FOUND": "NOT_FOUND",
            "OK": "OK",
            "ZERO_RESULTS": "ZERO_RESULTS",
          },
          "DistanceMatrixService": [Function],
          "DistanceMatrixStatus": Object {
            "INVALID_REQUEST": "INVALID_REQUEST",
            "MAX_DIMENSIONS_EXCEEDED": "MAX_DIMENSIONS_EXCEEDED",
            "MAX_ELEMENTS_EXCEEDED": "MAX_ELEMENTS_EXCEEDED",
            "OK": "OK",
            "OVER_QUERY_LIMIT": "OVER_QUERY_LIMIT",
            "REQUEST_DENIED": "REQUEST_DENIED",
            "UNKNOWN_ERROR": "UNKNOWN_ERROR",
          },
          "ElevationService": [Function],
          "ElevationStatus": Object {
            "Co": "DATA_NOT_AVAILABLE",
            "INVALID_REQUEST": "INVALID_REQUEST",
            "OK": "OK",
            "OVER_QUERY_LIMIT": "OVER_QUERY_LIMIT",
            "REQUEST_DENIED": "REQUEST_DENIED",
            "UNKNOWN_ERROR": "UNKNOWN_ERROR",
          },
          "FusionTablesLayer": [MockFunction],
          "Geocoder": [Function],
          "GeocoderLocationType": Object {
            "APPROXIMATE": "APPROXIMATE",
            "GEOMETRIC_CENTER": "GEOMETRIC_CENTER",
            "RANGE_INTERPOLATED": "RANGE_INTERPOLATED",
            "ROOFTOP": "ROOFTOP",
          },
          "GeocoderStatus": Object {
            "ERROR": "ERROR",
            "INVALID_REQUEST": "INVALID_REQUEST",
            "OK": "OK",
            "OVER_QUERY_LIMIT": "OVER_QUERY_LIMIT",
            "REQUEST_DENIED": "REQUEST_DENIED",
            "UNKNOWN_ERROR": "UNKNOWN_ERROR",
            "ZERO_RESULTS": "ZERO_RESULTS",
          },
          "GroundOverlay": [Function],
          "ImageMapType": [Function],
          "InfoWindow": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "content": "<div style=\\"max-width: 200px;\\" id=\\"coordinate-0-0\\">
                  <div></div>
                </div>",
                },
              ],
              Array [
                Object {
                  "content": "<div style=\\"max-width: 200px;\\" id=\\"coordinate-1-1\\">
                  <div></div>
                </div>",
                },
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "KmlLayer": [Function],
          "KmlLayerStatus": Object {
            "DOCUMENT_NOT_FOUND": "DOCUMENT_NOT_FOUND",
            "DOCUMENT_TOO_LARGE": "DOCUMENT_TOO_LARGE",
            "FETCH_ERROR": "FETCH_ERROR",
            "INVALID_DOCUMENT": "INVALID_DOCUMENT",
            "INVALID_REQUEST": "INVALID_REQUEST",
            "LIMITS_EXCEEDED": "LIMITS_EXECEEDED",
            "OK": "OK",
            "TIMED_OUT": "TIMED_OUT",
            "UNKNOWN": "UNKNOWN",
          },
          "LatLng": [MockFunction] {
            "calls": Array [
              Array [
                0,
                0,
              ],
              Array [
                0,
                0,
              ],
              Array [
                0,
                0,
              ],
              Array [
                0,
                0,
              ],
              Array [
                0,
                0,
              ],
              Array [
                0,
                0,
              ],
              Array [
                undefined,
                undefined,
              ],
              Array [
                0,
                0,
              ],
              Array [
                0,
                0,
              ],
              Array [
                51.507351,
                -0.127758,
              ],
              Array [
                0,
                0,
              ],
              Array [
                0,
                0,
              ],
              Array [
                51.507351,
                -0.127758,
              ],
              Array [
                0,
                0,
              ],
              Array [
                51.507351,
                -0.127758,
              ],
              Array [
                0,
                0,
              ],
              Array [
                0,
                0,
              ],
              Array [
                0,
                0,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "LatLngBounds": [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "MVCArray": [Function],
          "MVCObject": [MockFunction],
          "Map": [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "MapTypeControlStyle": Object {
            "DEFAULT": 0,
            "DROPDOWN_MENU": 2,
            "HORIZONTAL_BAR": 1,
            "INSET": 3,
            "INSET_LARGE": 4,
          },
          "MapTypeId": Object {
            "HYBRID": "hybrid",
            "ROADMAP": "roadmap",
            "SATELLITE": "satellite",
            "TERRAIN": "terrain",
          },
          "MapTypeRegistry": [Function],
          "Marker": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "label": "mock marker",
                  "map": mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "fitBounds": [MockFunction fitBounds],
                    "get": [MockFunction get],
                    "getBounds": [MockFunction getBounds],
                    "listeners": Object {},
                    "mapDiv": undefined,
                    "notify": [MockFunction notify],
                    "opts": undefined,
                    "panToBounds": [MockFunction panToBounds],
                    "set": [MockFunction set],
                    "setCenter": [MockFunction setCenter],
                    "setClickableIcons": [MockFunction setClickableIcons],
                    "setHeading": [MockFunction setHeading],
                    "setMapTypeId": [MockFunction setMapTypeId],
                    "setOptions": [MockFunction setOptions],
                    "setStreetView": [MockFunction setStreetView],
                    "setTilt": [MockFunction setTilt],
                    "setValues": [MockFunction setValues],
                    "setZoom": [MockFunction setZoom],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "position": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
              ],
              Array [
                Object {
                  "label": Object {
                    "fontSize": "1.5rem",
                    "fontWeight": "500",
                    "text": "1",
                  },
                  "map": mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "fitBounds": [MockFunction fitBounds],
                    "get": [MockFunction get],
                    "getBounds": [MockFunction getBounds],
                    "listeners": Object {},
                    "mapDiv": undefined,
                    "notify": [MockFunction notify],
                    "opts": undefined,
                    "panToBounds": [MockFunction panToBounds],
                    "set": [MockFunction set],
                    "setCenter": [MockFunction setCenter],
                    "setClickableIcons": [MockFunction setClickableIcons],
                    "setHeading": [MockFunction setHeading],
                    "setMapTypeId": [MockFunction setMapTypeId],
                    "setOptions": [MockFunction setOptions],
                    "setStreetView": [MockFunction setStreetView],
                    "setTilt": [MockFunction setTilt],
                    "setValues": [MockFunction setValues],
                    "setZoom": [MockFunction setZoom],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "position": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
              ],
              Array [
                Object {
                  "label": Object {
                    "fontSize": "1.5rem",
                    "fontWeight": "500",
                    "text": "2",
                  },
                  "map": mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "fitBounds": [MockFunction fitBounds],
                    "get": [MockFunction get],
                    "getBounds": [MockFunction getBounds],
                    "listeners": Object {},
                    "mapDiv": undefined,
                    "notify": [MockFunction notify],
                    "opts": undefined,
                    "panToBounds": [MockFunction panToBounds],
                    "set": [MockFunction set],
                    "setCenter": [MockFunction setCenter],
                    "setClickableIcons": [MockFunction setClickableIcons],
                    "setHeading": [MockFunction setHeading],
                    "setMapTypeId": [MockFunction setMapTypeId],
                    "setOptions": [MockFunction setOptions],
                    "setStreetView": [MockFunction setStreetView],
                    "setTilt": [MockFunction setTilt],
                    "setValues": [MockFunction setValues],
                    "setZoom": [MockFunction setZoom],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "position": Object {
                    "lat": 1,
                    "lng": 1,
                  },
                },
              ],
              Array [
                Object {
                  "label": "mock marker",
                  "map": mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "fitBounds": [MockFunction fitBounds],
                    "get": [MockFunction get],
                    "getBounds": [MockFunction getBounds],
                    "listeners": Object {},
                    "mapDiv": undefined,
                    "notify": [MockFunction notify],
                    "opts": undefined,
                    "panToBounds": [MockFunction panToBounds],
                    "set": [MockFunction set],
                    "setCenter": [MockFunction setCenter],
                    "setClickableIcons": [MockFunction setClickableIcons],
                    "setHeading": [MockFunction setHeading],
                    "setMapTypeId": [MockFunction setMapTypeId],
                    "setOptions": [MockFunction setOptions],
                    "setStreetView": [MockFunction setStreetView],
                    "setTilt": [MockFunction setTilt],
                    "setValues": [MockFunction setValues],
                    "setZoom": [MockFunction setZoom],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "position": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
              ],
              Array [
                Object {
                  "content": "Your location",
                  "map": mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "fitBounds": [MockFunction fitBounds],
                    "get": [MockFunction get],
                    "getBounds": [MockFunction getBounds],
                    "listeners": Object {},
                    "mapDiv": undefined,
                    "notify": [MockFunction notify],
                    "opts": undefined,
                    "panToBounds": [MockFunction panToBounds],
                    "set": [MockFunction set],
                    "setCenter": [MockFunction setCenter],
                    "setClickableIcons": [MockFunction setClickableIcons],
                    "setHeading": [MockFunction setHeading],
                    "setMapTypeId": [MockFunction setMapTypeId],
                    "setOptions": [MockFunction setOptions],
                    "setStreetView": [MockFunction setStreetView],
                    "setTilt": [MockFunction setTilt],
                    "setValues": [MockFunction setValues],
                    "setZoom": [MockFunction setZoom],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "position": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
              ],
              Array [
                Object {
                  "label": "mock marker",
                  "map": mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "fitBounds": [MockFunction fitBounds],
                    "get": [MockFunction get],
                    "getBounds": [MockFunction getBounds],
                    "listeners": Object {},
                    "mapDiv": undefined,
                    "notify": [MockFunction notify],
                    "opts": undefined,
                    "panToBounds": [MockFunction panToBounds],
                    "set": [MockFunction set],
                    "setCenter": [MockFunction setCenter],
                    "setClickableIcons": [MockFunction setClickableIcons],
                    "setHeading": [MockFunction setHeading],
                    "setMapTypeId": [MockFunction setMapTypeId],
                    "setOptions": [MockFunction setOptions],
                    "setStreetView": [MockFunction setStreetView],
                    "setTilt": [MockFunction setTilt],
                    "setValues": [MockFunction setValues],
                    "setZoom": [MockFunction setZoom],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "position": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
              ],
              Array [
                Object {
                  "label": "mock marker",
                  "map": mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "fitBounds": [MockFunction fitBounds],
                    "get": [MockFunction get],
                    "getBounds": [MockFunction getBounds],
                    "listeners": Object {},
                    "mapDiv": undefined,
                    "notify": [MockFunction notify],
                    "opts": undefined,
                    "panToBounds": [MockFunction panToBounds],
                    "set": [MockFunction set],
                    "setCenter": [MockFunction setCenter],
                    "setClickableIcons": [MockFunction setClickableIcons],
                    "setHeading": [MockFunction setHeading],
                    "setMapTypeId": [MockFunction setMapTypeId],
                    "setOptions": [MockFunction setOptions],
                    "setStreetView": [MockFunction setStreetView],
                    "setTilt": [MockFunction setTilt],
                    "setValues": [MockFunction setValues],
                    "setZoom": [MockFunction setZoom],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "position": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
              ],
              Array [
                Object {
                  "label": "mock marker",
                  "map": mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "fitBounds": [MockFunction fitBounds],
                    "get": [MockFunction get],
                    "getBounds": [MockFunction getBounds],
                    "listeners": Object {},
                    "mapDiv": undefined,
                    "notify": [MockFunction notify],
                    "opts": undefined,
                    "panToBounds": [MockFunction panToBounds],
                    "set": [MockFunction set],
                    "setCenter": [MockFunction setCenter],
                    "setClickableIcons": [MockFunction setClickableIcons],
                    "setHeading": [MockFunction setHeading],
                    "setMapTypeId": [MockFunction setMapTypeId],
                    "setOptions": [MockFunction setOptions],
                    "setStreetView": [MockFunction setStreetView],
                    "setTilt": [MockFunction setTilt],
                    "setValues": [MockFunction setValues],
                    "setZoom": [MockFunction setZoom],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "position": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
              ],
              Array [
                Object {
                  "label": "mock marker",
                  "map": mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "fitBounds": [MockFunction fitBounds] {
                      "calls": Array [
                        Array [
                          mockConstructor {
                            "addListener": [MockFunction addListener],
                            "bindTo": [MockFunction bindTo],
                            "extend": [MockFunction extend] {
                              "calls": Array [
                                Array [
                                  undefined,
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "get": [MockFunction get],
                            "getCenter": [MockFunction getCenter] {
                              "calls": Array [
                                Array [],
                                Array [],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "getPosition": [MockFunction getPosition],
                            "listeners": Object {},
                            "notify": [MockFunction notify],
                            "set": [MockFunction set],
                            "setValues": [MockFunction setValues],
                            "unbind": [MockFunction unbind],
                            "unbindAll": [MockFunction unbindAll],
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "get": [MockFunction get],
                    "getBounds": [MockFunction getBounds],
                    "listeners": Object {},
                    "mapDiv": undefined,
                    "notify": [MockFunction notify],
                    "opts": undefined,
                    "panToBounds": [MockFunction panToBounds],
                    "set": [MockFunction set],
                    "setCenter": [MockFunction setCenter] {
                      "calls": Array [
                        Array [
                          undefined,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "setClickableIcons": [MockFunction setClickableIcons],
                    "setHeading": [MockFunction setHeading],
                    "setMapTypeId": [MockFunction setMapTypeId],
                    "setOptions": [MockFunction setOptions],
                    "setStreetView": [MockFunction setStreetView],
                    "setTilt": [MockFunction setTilt],
                    "setValues": [MockFunction setValues],
                    "setZoom": [MockFunction setZoom],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "position": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
              ],
              Array [
                Object {
                  "label": "mock marker",
                  "map": mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "fitBounds": [MockFunction fitBounds],
                    "get": [MockFunction get],
                    "getBounds": [MockFunction getBounds],
                    "listeners": Object {},
                    "mapDiv": undefined,
                    "notify": [MockFunction notify],
                    "opts": undefined,
                    "panToBounds": [MockFunction panToBounds],
                    "set": [MockFunction set],
                    "setCenter": [MockFunction setCenter] {
                      "calls": Array [
                        Array [
                          mockConstructor {
                            "addListener": [MockFunction addListener],
                            "bindTo": [MockFunction bindTo],
                            "get": [MockFunction get],
                            "lat": [MockFunction lat],
                            "listeners": Object {},
                            "lng": [MockFunction lng],
                            "notify": [MockFunction notify],
                            "set": [MockFunction set],
                            "setMap": [MockFunction setMap],
                            "setValues": [MockFunction setValues],
                            "unbind": [MockFunction unbind],
                            "unbindAll": [MockFunction unbindAll],
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "setClickableIcons": [MockFunction setClickableIcons],
                    "setHeading": [MockFunction setHeading],
                    "setMapTypeId": [MockFunction setMapTypeId],
                    "setOptions": [MockFunction setOptions],
                    "setStreetView": [MockFunction setStreetView],
                    "setTilt": [MockFunction setTilt],
                    "setValues": [MockFunction setValues],
                    "setZoom": [MockFunction setZoom] {
                      "calls": Array [
                        Array [
                          10,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "position": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
              ],
              Array [
                Object {
                  "label": "mock marker",
                  "map": mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "fitBounds": [MockFunction fitBounds],
                    "get": [MockFunction get],
                    "getBounds": [MockFunction getBounds],
                    "listeners": Object {},
                    "mapDiv": undefined,
                    "notify": [MockFunction notify],
                    "opts": undefined,
                    "panToBounds": [MockFunction panToBounds],
                    "set": [MockFunction set],
                    "setCenter": [MockFunction setCenter],
                    "setClickableIcons": [MockFunction setClickableIcons],
                    "setHeading": [MockFunction setHeading],
                    "setMapTypeId": [MockFunction setMapTypeId],
                    "setOptions": [MockFunction setOptions],
                    "setStreetView": [MockFunction setStreetView],
                    "setTilt": [MockFunction setTilt],
                    "setValues": [MockFunction setValues],
                    "setZoom": [MockFunction setZoom] {
                      "calls": Array [
                        Array [
                          10,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "position": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
              ],
              Array [
                Object {
                  "label": "mock marker",
                  "map": mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "fitBounds": [MockFunction fitBounds],
                    "get": [MockFunction get],
                    "getBounds": [MockFunction getBounds],
                    "listeners": Object {},
                    "mapDiv": undefined,
                    "notify": [MockFunction notify],
                    "opts": undefined,
                    "panToBounds": [MockFunction panToBounds],
                    "set": [MockFunction set],
                    "setCenter": [MockFunction setCenter] {
                      "calls": Array [
                        Array [
                          mockConstructor {
                            "addListener": [MockFunction addListener],
                            "bindTo": [MockFunction bindTo],
                            "get": [MockFunction get],
                            "lat": [MockFunction lat],
                            "listeners": Object {},
                            "lng": [MockFunction lng],
                            "notify": [MockFunction notify],
                            "set": [MockFunction set],
                            "setMap": [MockFunction setMap],
                            "setValues": [MockFunction setValues],
                            "unbind": [MockFunction unbind],
                            "unbindAll": [MockFunction unbindAll],
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "setClickableIcons": [MockFunction setClickableIcons],
                    "setHeading": [MockFunction setHeading],
                    "setMapTypeId": [MockFunction setMapTypeId],
                    "setOptions": [MockFunction setOptions],
                    "setStreetView": [MockFunction setStreetView],
                    "setTilt": [MockFunction setTilt],
                    "setValues": [MockFunction setValues],
                    "setZoom": [MockFunction setZoom],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "position": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
              ],
              Array [
                Object {
                  "label": "mock marker",
                  "map": mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "fitBounds": [MockFunction fitBounds],
                    "get": [MockFunction get],
                    "getBounds": [MockFunction getBounds],
                    "listeners": Object {},
                    "mapDiv": undefined,
                    "notify": [MockFunction notify],
                    "opts": undefined,
                    "panToBounds": [MockFunction panToBounds],
                    "set": [MockFunction set],
                    "setCenter": [MockFunction setCenter] {
                      "calls": Array [
                        Array [
                          mockConstructor {
                            "addListener": [MockFunction addListener],
                            "bindTo": [MockFunction bindTo],
                            "get": [MockFunction get],
                            "lat": [MockFunction lat],
                            "listeners": Object {},
                            "lng": [MockFunction lng],
                            "notify": [MockFunction notify],
                            "set": [MockFunction set],
                            "setMap": [MockFunction setMap],
                            "setValues": [MockFunction setValues],
                            "unbind": [MockFunction unbind],
                            "unbindAll": [MockFunction unbindAll],
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "setClickableIcons": [MockFunction setClickableIcons],
                    "setHeading": [MockFunction setHeading],
                    "setMapTypeId": [MockFunction setMapTypeId],
                    "setOptions": [MockFunction setOptions],
                    "setStreetView": [MockFunction setStreetView],
                    "setTilt": [MockFunction setTilt],
                    "setValues": [MockFunction setValues],
                    "setZoom": [MockFunction setZoom] {
                      "calls": Array [
                        Array [
                          8,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "position": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
              ],
              Array [
                Object {
                  "label": "mock marker",
                  "map": mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "fitBounds": [MockFunction fitBounds],
                    "get": [MockFunction get],
                    "getBounds": [MockFunction getBounds],
                    "listeners": Object {},
                    "mapDiv": undefined,
                    "notify": [MockFunction notify],
                    "opts": undefined,
                    "panToBounds": [MockFunction panToBounds],
                    "set": [MockFunction set],
                    "setCenter": [MockFunction setCenter],
                    "setClickableIcons": [MockFunction setClickableIcons],
                    "setHeading": [MockFunction setHeading],
                    "setMapTypeId": [MockFunction setMapTypeId],
                    "setOptions": [MockFunction setOptions],
                    "setStreetView": [MockFunction setStreetView],
                    "setTilt": [MockFunction setTilt],
                    "setValues": [MockFunction setValues],
                    "setZoom": [MockFunction setZoom],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "position": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
              ],
              Array [
                Object {
                  "label": "mock marker",
                  "map": mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "fitBounds": [MockFunction fitBounds],
                    "get": [MockFunction get],
                    "getBounds": [MockFunction getBounds],
                    "listeners": Object {},
                    "mapDiv": undefined,
                    "notify": [MockFunction notify],
                    "opts": undefined,
                    "panToBounds": [MockFunction panToBounds],
                    "set": [MockFunction set],
                    "setCenter": [MockFunction setCenter],
                    "setClickableIcons": [MockFunction setClickableIcons],
                    "setHeading": [MockFunction setHeading],
                    "setMapTypeId": [MockFunction setMapTypeId],
                    "setOptions": [MockFunction setOptions],
                    "setStreetView": [MockFunction setStreetView],
                    "setTilt": [MockFunction setTilt],
                    "setValues": [MockFunction setValues],
                    "setZoom": [MockFunction setZoom],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "position": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
              ],
              Array [
                Object {
                  "label": "mock marker",
                  "map": mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "fitBounds": [MockFunction fitBounds],
                    "get": [MockFunction get],
                    "getBounds": [MockFunction getBounds],
                    "listeners": Object {},
                    "mapDiv": undefined,
                    "notify": [MockFunction notify],
                    "opts": undefined,
                    "panToBounds": [MockFunction panToBounds],
                    "set": [MockFunction set],
                    "setCenter": [MockFunction setCenter],
                    "setClickableIcons": [MockFunction setClickableIcons],
                    "setHeading": [MockFunction setHeading],
                    "setMapTypeId": [MockFunction setMapTypeId],
                    "setOptions": [MockFunction setOptions],
                    "setStreetView": [MockFunction setStreetView],
                    "setTilt": [MockFunction setTilt],
                    "setValues": [MockFunction setValues],
                    "setZoom": [MockFunction setZoom],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "position": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "MarkerImage": [Function],
          "MaxZoomService": [Function],
          "MaxZoomStatus": Object {
            "ERROR": "ERROR",
            "OK": "OK",
          },
          "NavigationControlStyle": Object {
            "ANDROID": 2,
            "DEFAULT": 0,
            "Mo": 4,
            "SMALL": 1,
            "ZOOM_PAN": 3,
            "ik": 5,
          },
          "OverlayView": [Function],
          "Point": [Function],
          "Polygon": [Function],
          "Polyline": [Function],
          "Rectangle": [Function],
          "SaveWidget": [Function],
          "ScaleControlStyle": Object {
            "DEFAULT": 0,
          },
          "Size": [Function],
          "StreetViewCoverageLayer": [Function],
          "StreetViewPanorama": [Function],
          "StreetViewPreference": Object {
            "BEST": "best",
            "NEAREST": "nearest",
          },
          "StreetViewService": [Function],
          "StreetViewSource": Object {
            "DEFAULT": "default",
            "OUTDOOR": "outdoor",
          },
          "StreetViewStatus": Object {
            "OK": "OK",
            "UNKNOWN_ERROR": "UNKNOWN_ERROR",
            "ZERO_RESULTS": "ZERO_RESULTS",
          },
          "StrokePosition": Object {
            "CENTER": 0,
            "INSIDE": 1,
            "OUTSIDE": 2,
          },
          "StyledMapType": [Function],
          "SymbolPath": Object {
            "BACKWARD_CLOSED_ARROW": 3,
            "BACKWARD_OPEN_ARROW": 4,
            "CIRCLE": 0,
            "FORWARD_CLOSED_ARROW": 1,
            "FORWARD_OPEN_ARROW": 2,
          },
          "TrafficLayer": [MockFunction],
          "TrafficModel": Object {
            "BEST_GUESS": "bestguess",
            "OPTIMISTIC": "optimistic",
            "PESSIMISTIC": "pessimistic",
          },
          "TransitLayer": [MockFunction],
          "TransitMode": Object {
            "BUS": "BUS",
            "RAIL": "RAIL",
            "SUBWAY": "SUBWAY",
            "TRAIN": "TRAIN",
            "TRAM": "TRAM",
          },
          "TransitRoutePreference": Object {
            "FEWER_TRANSFERS": "FEWER_TRANSFERS",
            "LESS_WALKING": "LESS_WALKING",
          },
          "TravelMode": Object {
            "BICYCLING": "BICYCLING",
            "DRIVING": "DRIVING",
            "TRANSIT": "TRANSIT",
            "WALKING": "WALKING",
          },
          "UnitSystem": Object {
            "IMPERIAL": 1,
            "METRIC": 0,
          },
          "ZoomControlStyle": Object {
            "DEFAULT": 0,
            "LARGE": 2,
            "SMALL": 1,
            "ik": 3,
          },
          "__gjsload__": [Function],
          "event": Object {
            "addListener": [MockFunction addListener] {
              "calls": Array [
                Array [
                  mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "get": [MockFunction get],
                    "getPosition": [MockFunction getPosition],
                    "listeners": Object {},
                    "notify": [MockFunction notify],
                    "opts": Object {
                      "label": Object {
                        "fontSize": "1.5rem",
                        "fontWeight": "500",
                        "text": "1",
                      },
                      "map": mockConstructor {
                        "addListener": [MockFunction addListener],
                        "bindTo": [MockFunction bindTo],
                        "fitBounds": [MockFunction fitBounds],
                        "get": [MockFunction get],
                        "getBounds": [MockFunction getBounds],
                        "listeners": Object {},
                        "mapDiv": undefined,
                        "notify": [MockFunction notify],
                        "opts": undefined,
                        "panToBounds": [MockFunction panToBounds],
                        "set": [MockFunction set],
                        "setCenter": [MockFunction setCenter],
                        "setClickableIcons": [MockFunction setClickableIcons],
                        "setHeading": [MockFunction setHeading],
                        "setMapTypeId": [MockFunction setMapTypeId],
                        "setOptions": [MockFunction setOptions],
                        "setStreetView": [MockFunction setStreetView],
                        "setTilt": [MockFunction setTilt],
                        "setValues": [MockFunction setValues],
                        "setZoom": [MockFunction setZoom],
                        "unbind": [MockFunction unbind],
                        "unbindAll": [MockFunction unbindAll],
                      },
                      "position": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                    },
                    "set": [MockFunction set],
                    "setMap": [MockFunction setMap],
                    "setOpacity": [MockFunction setOpacity],
                    "setOptions": [MockFunction setOptions],
                    "setPosition": [MockFunction setPosition],
                    "setShape": [MockFunction setShape],
                    "setTitle": [MockFunction setTitle],
                    "setValues": [MockFunction setValues],
                    "setVisible": [MockFunction setVisible],
                    "setZIndex": [MockFunction setZIndex],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "click",
                  [Function],
                ],
                Array [
                  mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "get": [MockFunction get],
                    "listeners": Object {},
                    "notify": [MockFunction notify],
                    "open": [MockFunction open],
                    "opts": Object {
                      "content": "<div style=\\"max-width: 200px;\\" id=\\"coordinate-0-0\\">
                  <div></div>
                </div>",
                    },
                    "set": [MockFunction set],
                    "setContent": [MockFunction setContent],
                    "setValues": [MockFunction setValues],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "domready",
                  [Function],
                ],
                Array [
                  mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "get": [MockFunction get],
                    "getPosition": [MockFunction getPosition],
                    "listeners": Object {},
                    "notify": [MockFunction notify],
                    "opts": Object {
                      "label": Object {
                        "fontSize": "1.5rem",
                        "fontWeight": "500",
                        "text": "2",
                      },
                      "map": mockConstructor {
                        "addListener": [MockFunction addListener],
                        "bindTo": [MockFunction bindTo],
                        "fitBounds": [MockFunction fitBounds],
                        "get": [MockFunction get],
                        "getBounds": [MockFunction getBounds],
                        "listeners": Object {},
                        "mapDiv": undefined,
                        "notify": [MockFunction notify],
                        "opts": undefined,
                        "panToBounds": [MockFunction panToBounds],
                        "set": [MockFunction set],
                        "setCenter": [MockFunction setCenter],
                        "setClickableIcons": [MockFunction setClickableIcons],
                        "setHeading": [MockFunction setHeading],
                        "setMapTypeId": [MockFunction setMapTypeId],
                        "setOptions": [MockFunction setOptions],
                        "setStreetView": [MockFunction setStreetView],
                        "setTilt": [MockFunction setTilt],
                        "setValues": [MockFunction setValues],
                        "setZoom": [MockFunction setZoom],
                        "unbind": [MockFunction unbind],
                        "unbindAll": [MockFunction unbindAll],
                      },
                      "position": Object {
                        "lat": 1,
                        "lng": 1,
                      },
                    },
                    "set": [MockFunction set],
                    "setMap": [MockFunction setMap],
                    "setOpacity": [MockFunction setOpacity],
                    "setOptions": [MockFunction setOptions],
                    "setPosition": [MockFunction setPosition],
                    "setShape": [MockFunction setShape],
                    "setTitle": [MockFunction setTitle],
                    "setValues": [MockFunction setValues],
                    "setVisible": [MockFunction setVisible],
                    "setZIndex": [MockFunction setZIndex],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "click",
                  [Function],
                ],
                Array [
                  mockConstructor {
                    "addListener": [MockFunction addListener],
                    "bindTo": [MockFunction bindTo],
                    "get": [MockFunction get],
                    "listeners": Object {},
                    "notify": [MockFunction notify],
                    "open": [MockFunction open],
                    "opts": Object {
                      "content": "<div style=\\"max-width: 200px;\\" id=\\"coordinate-1-1\\">
                  <div></div>
                </div>",
                    },
                    "set": [MockFunction set],
                    "setContent": [MockFunction setContent],
                    "setValues": [MockFunction setValues],
                    "unbind": [MockFunction unbind],
                    "unbindAll": [MockFunction unbindAll],
                  },
                  "domready",
                  [Function],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            "clearInstanceListeners": [MockFunction clearInstanceListeners],
          },
        }
      }
      onLoaded={[Function]}
      zoom={10}
    />
  </div>
</div>
`;

exports[`Map renderMap should run correctly when error 1`] = `
<div>
  <div>
    <Component />
  </div>
</div>
`;

exports[`Map renderMap should run correctly when error network 1`] = `
<div>
  <div>
    <Component />
  </div>
</div>
`;
