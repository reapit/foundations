// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ControlledSearchableDropdown component should display default value 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-searchable-dropdown-container"
      >
        <input
          id="some-id"
          readonly=""
          style="display: none;"
          value="4"
        />
        <span
          class="el-searchable-dropdown-search-input-add-on el-input-add-on"
        >
          <span
            class="el-icon"
          >
            <svg />
          </span>
        </span>
        <input
          class="el-searchable-dropdown-search-input el-input"
          data-testid="search-input"
          value="Forth"
        />
        <span
          class="el-searchable-dropdown-close-button el-icon"
        >
          <svg />
        </span>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-searchable-dropdown-container"
    >
      <input
        id="some-id"
        readonly=""
        style="display: none;"
        value="4"
      />
      <span
        class="el-searchable-dropdown-search-input-add-on el-input-add-on"
      >
        <span
          class="el-icon"
        >
          <svg />
        </span>
      </span>
      <input
        class="el-searchable-dropdown-search-input el-input"
        data-testid="search-input"
        value="Forth"
      />
      <span
        class="el-searchable-dropdown-close-button el-icon"
      >
        <svg />
      </span>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`ControlledSearchableDropdown component should match a snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-searchable-dropdown-container"
      >
        <input
          id="some-id"
          readonly=""
          style="display: none;"
          value=""
        />
        <span
          class="el-searchable-dropdown-search-input-add-on el-input-add-on"
        >
          <span
            class="el-icon"
          >
            <svg />
          </span>
        </span>
        <input
          class="el-searchable-dropdown-search-input el-input"
          data-testid="search-input"
          value=""
        />
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-searchable-dropdown-container"
    >
      <input
        id="some-id"
        readonly=""
        style="display: none;"
        value=""
      />
      <span
        class="el-searchable-dropdown-search-input-add-on el-input-add-on"
      >
        <span
          class="el-icon"
        >
          <svg />
        </span>
      </span>
      <input
        class="el-searchable-dropdown-search-input el-input"
        data-testid="search-input"
        value=""
      />
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SearchableDropdown component should match a snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-searchable-dropdown-container"
      >
        <input
          id="some-id"
          readonly=""
          style="display: none;"
          value=""
        />
        <span
          class="el-searchable-dropdown-search-input-add-on el-input-add-on"
        >
          <span
            class="el-icon"
          >
            <svg />
          </span>
        </span>
        <input
          class="el-searchable-dropdown-search-input el-input"
          data-testid="search-input"
          value=""
        />
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-searchable-dropdown-container"
    >
      <input
        id="some-id"
        readonly=""
        style="display: none;"
        value=""
      />
      <span
        class="el-searchable-dropdown-search-input-add-on el-input-add-on"
      >
        <span
          class="el-icon"
        >
          <svg />
        </span>
      </span>
      <input
        class="el-searchable-dropdown-search-input el-input"
        data-testid="search-input"
        value=""
      />
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SearchableDropdownSearchLabel component should match a snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <label
        class="el-searchable-dropdown-search-label el-label"
      >
        I am a label
      </label>
    </div>
  </body>,
  "container": <div>
    <label
      class="el-searchable-dropdown-search-label el-label"
    >
      I am a label
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
