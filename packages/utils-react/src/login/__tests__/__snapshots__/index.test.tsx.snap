// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.span
            classname="mock-css.
  margin-bottom: 1.25rem;
"
            style="height: 40px; width: 200px;"
          >
            <svg
              style="height: 40px; width: 200px;"
            />
          </mock-styled.span>
          <mock-styled.div
            classname="mock-css.
  flex-direction: column;
"
          >
            <mock-styled.h2
              classname="mock-css."
            >
              Welcome
            </mock-styled.h2>
            <mock-styled.p
              classname="mock-css."
            >
              test app
            </mock-styled.p>
          </mock-styled.div>
          <mock-styled.div
            classname="mock-css.
  margin-bottom: 3rem;
"
          >
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.button
                classname="mock-css."
              >
                <mock-styled.div />
                Login With Reapit
              </mock-styled.button>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div>
      <mock-styled.div>
        <mock-styled.span
          classname="mock-css.
  margin-bottom: 1.25rem;
"
          style="height: 40px; width: 200px;"
        >
          <svg
            style="height: 40px; width: 200px;"
          />
        </mock-styled.span>
        <mock-styled.div
          classname="mock-css.
  flex-direction: column;
"
        >
          <mock-styled.h2
            classname="mock-css."
          >
            Welcome
          </mock-styled.h2>
          <mock-styled.p
            classname="mock-css."
          >
            test app
          </mock-styled.p>
        </mock-styled.div>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 3rem;
"
        >
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.button
              classname="mock-css."
            >
              <mock-styled.div />
              Login With Reapit
            </mock-styled.button>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
