// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PaymentRequestModal should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <form>
        <p
          class="el-text-base el-body-text el-has-grey-text"
        >
          The below form will send an email request for payment to your customer with an embedded link to our card processing page. You should set an expiry for this payment request and an email address to receive the request. The default expiry is a week.
        </p>
        <div
          class="el-form-layout-has-margin el-form-layout"
        >
          <div
            class="mocked-styled-135 el-input-wrap-full"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <input
                aria-label="Input type email"
                class="mocked-styled-38 el-input"
                id="test-static-id"
                name="receipientEmail"
                type="email"
              />
              <label
                class="mocked-styled-41 el-label"
                for="test-static-id"
              >
                Receipient Email
              </label>
            </div>
          </div>
          <div
            class="mocked-styled-135 el-input-wrap-full"
          >
            <div
              class="mocked-styled-40 el-input-group"
            >
              <input
                aria-label="Input type date format dd/mm/yyy max date of 2019-11-10 min date of 2019-10-10"
                class="mocked-styled-38 el-input"
                id="test-static-id"
                max="2019-11-10"
                min="2019-10-10"
                name="sessionExpiresAt"
                type="date"
              />
              <label
                class="mocked-styled-41 el-label"
                for="test-static-id"
              >
                Payment Expiry Date - Max 1 month from today
              </label>
            </div>
          </div>
        </div>
        <div
          class="mocked-styled-2 el-button-group"
        >
          <div
            class="el-button-group-align-right el-button-group-inner"
          >
            <button
              class="el-intent-neutral el-button"
              type="button"
            >
              <div
                class="mocked-styled-0 el-button-loader"
              />
              Cancel
            </button>
            <button
              class="el-intent-primary el-button"
              type="submit"
            >
              <div
                class="mocked-styled-0 el-button-loader"
              />
              Send Payment Request
            </button>
          </div>
        </div>
      </form>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <form>
      <p
        class="el-text-base el-body-text el-has-grey-text"
      >
        The below form will send an email request for payment to your customer with an embedded link to our card processing page. You should set an expiry for this payment request and an email address to receive the request. The default expiry is a week.
      </p>
      <div
        class="el-form-layout-has-margin el-form-layout"
      >
        <div
          class="mocked-styled-135 el-input-wrap-full"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <input
              aria-label="Input type email"
              class="mocked-styled-38 el-input"
              id="test-static-id"
              name="receipientEmail"
              type="email"
            />
            <label
              class="mocked-styled-41 el-label"
              for="test-static-id"
            >
              Receipient Email
            </label>
          </div>
        </div>
        <div
          class="mocked-styled-135 el-input-wrap-full"
        >
          <div
            class="mocked-styled-40 el-input-group"
          >
            <input
              aria-label="Input type date format dd/mm/yyy max date of 2019-11-10 min date of 2019-10-10"
              class="mocked-styled-38 el-input"
              id="test-static-id"
              max="2019-11-10"
              min="2019-10-10"
              name="sessionExpiresAt"
              type="date"
            />
            <label
              class="mocked-styled-41 el-label"
              for="test-static-id"
            >
              Payment Expiry Date - Max 1 month from today
            </label>
          </div>
        </div>
      </div>
      <div
        class="mocked-styled-2 el-button-group"
      >
        <div
          class="el-button-group-align-right el-button-group-inner"
        >
          <button
            class="el-intent-neutral el-button"
            type="button"
          >
            <div
              class="mocked-styled-0 el-button-loader"
            />
            Cancel
          </button>
          <button
            class="el-intent-primary el-button"
            type="submit"
          >
            <div
              class="mocked-styled-0 el-button-loader"
            />
            Send Payment Request
          </button>
        </div>
      </div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
