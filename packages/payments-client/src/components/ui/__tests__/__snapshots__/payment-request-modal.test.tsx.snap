// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PaymentRequestModal should match a snapshot 1`] = `
<ModalV2
  destroyOnClose={true}
  isCentered={true}
  onClose={[Function]}
  title="Request Payment of Â£100.00 for PAY20000001"
  visible={true}
>
  <Formik
    initialValues={
      Object {
        "_eTag": "",
        "keyExpiresAt": 2019-10-17T22:39:51.389Z,
        "paymentAmount": 100,
        "paymentCurrency": "GBP",
        "paymentId": "PAY20000001",
        "paymentReason": "Tenancy Check Fee",
        "receipientEmail": "example@email.com",
        "recipientName": "Mr John Smith",
      }
    }
    onSubmit={[Function]}
    validationSchema={
      ObjectSchema {
        "_blacklist": ReferenceSet {
          "list": Set {},
          "refs": Map {},
        },
        "_excludedEdges": Array [],
        "_mutate": undefined,
        "_nodes": Array [
          "keyExpiresAt",
          "receipientEmail",
        ],
        "_sortErrors": [Function],
        "_typeError": [Function],
        "_whitelist": ReferenceSet {
          "list": Set {},
          "refs": Map {},
        },
        "conditions": Array [],
        "deps": Array [],
        "exclusiveTests": Object {},
        "fields": Object {
          "keyExpiresAt": StringSchema {
            "_blacklist": ReferenceSet {
              "list": Set {},
              "refs": Map {},
            },
            "_blacklistError": undefined,
            "_mutate": undefined,
            "_typeError": [Function],
            "_whitelist": ReferenceSet {
              "list": Set {},
              "refs": Map {},
            },
            "_whitelistError": undefined,
            "conditions": Array [],
            "deps": Array [],
            "exclusiveTests": Object {
              "required": true,
            },
            "spec": Object {
              "abortEarly": true,
              "nullable": false,
              "presence": "required",
              "recursive": true,
              "strict": false,
              "strip": false,
            },
            "tests": Array [
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
            "type": "string",
          },
          "receipientEmail": StringSchema {
            "_blacklist": ReferenceSet {
              "list": Set {},
              "refs": Map {},
            },
            "_blacklistError": undefined,
            "_typeError": [Function],
            "_whitelist": ReferenceSet {
              "list": Set {},
              "refs": Map {},
            },
            "_whitelistError": undefined,
            "conditions": Array [],
            "deps": Array [],
            "exclusiveTests": Object {
              "matches": false,
              "required": true,
            },
            "spec": Object {
              "abortEarly": true,
              "nullable": false,
              "presence": "required",
              "recursive": true,
              "strict": false,
              "strip": false,
            },
            "tests": Array [
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
            "type": "string",
          },
        },
        "spec": Object {
          "abortEarly": true,
          "nullable": false,
          "presence": "optional",
          "recursive": true,
          "strict": false,
          "strip": false,
        },
        "tests": Array [],
        "transforms": Array [
          [Function],
        ],
        "type": "object",
      }
    }
  >
    <Form
      className="form"
    >
      <FormSection>
        <FormHeading>
          Send request for payment
        </FormHeading>
        <FormSubHeading>
          The below form will send an email request for payment to your customer with an embedded link to our card processing page. You should set an expiry for this payment request and an email address to receive the request. The default expiry is a week.
        </FormSubHeading>
        <Input
          id="receipientEmail"
          labelText="Recpient Email Address"
          name="receipientEmail"
          placeholder="email@example.com"
          type="text"
        />
        <DatePicker
          id="keyExpiresAt"
          labelText="Payment Request Expiry"
          name="keyExpiresAt"
          reactDatePickerProps={
            Object {
              "minDate": 2019-10-11T22:39:51.389Z,
            }
          }
        />
        <ButtonGroup
          hasSpacing={true}
          isCentered={true}
        >
          <Button
            onClick={[Function]}
            type="button"
            variant="secondary"
          >
            Cancel
          </Button>
          <Button
            disabled={false}
            loading={false}
            type="submit"
            variant="primary"
          >
            Send Payment Request
          </Button>
        </ButtonGroup>
      </FormSection>
    </Form>
  </Formik>
</ModalV2>
`;
