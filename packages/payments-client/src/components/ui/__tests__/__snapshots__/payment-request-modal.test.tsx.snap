// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PaymentRequestModal should match a snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="ant-scrolling-effect"
    style="overflow: hidden; overflow-x: hidden; overflow-y: hidden;"
  >
    <div>
      <div
        class="el-snack-holder"
      />
    </div>
    <div>
      <div
        class="rc-dialog-root"
      >
        <div
          class="rc-dialog-mask"
        />
        <div
          class="rc-dialog-wrap modal-centered"
          tabindex="-1"
        >
          <div
            aria-labelledby="test-id"
            aria-modal="true"
            class="rc-dialog modal-container"
            role="dialog"
          >
            <div
              aria-hidden="true"
              style="width: 0px; height: 0px; overflow: hidden; outline: none;"
              tabindex="0"
            />
            <div
              class="rc-dialog-content"
            >
              <button
                aria-label="Close"
                class="rc-dialog-close"
                type="button"
              >
                <span
                  aria-label="close"
                  class="delete"
                />
              </button>
              <div
                class="rc-dialog-header"
              >
                <div
                  class="rc-dialog-title"
                  id="test-id"
                >
                  <h4
                    class="modal-card-title is-4 pt-2 pb-2"
                  >
                    Request Payment of Â£100.00 for PAY20000001
                  </h4>
                </div>
              </div>
              <div
                class="rc-dialog-body"
              >
                <form
                  action="#"
                  class="form"
                >
                  <div
                    class="form-section"
                  >
                    <div
                      class="form-heading"
                    >
                      Send request for payment
                    </div>
                    <div
                      class="form-subheading"
                    >
                      The below form will send an email request for payment to your customer with an embedded link to our card processing page. You should set an expiry for this payment request and an email address to receive the request. The default expiry is a week.
                    </div>
                    <div
                      class="field"
                    >
                      <div
                        class="control "
                      >
                        <label
                          class="label inline-block "
                          for="receipientEmail"
                        >
                          Recpient Email Address
                        </label>
                        <input
                          class="input is-primary"
                          data-test=""
                          id="receipientEmail"
                          name="receipientEmail"
                          placeholder="email@example.com"
                          type="text"
                          value="example@email.com"
                        />
                      </div>
                    </div>
                    <div
                      class="field"
                    >
                      <div
                        class="control"
                      >
                        <label
                          class="label "
                          for="keyExpiresAt"
                        >
                          Payment Request Expiry
                        </label>
                        <div
                          class="react-datepicker-wrapper"
                        >
                          <div
                            class="react-datepicker__input-container"
                          >
                            <input
                              class="input is-primary input is-primary"
                              id="keyExpiresAt"
                              name="keyExpiresAt"
                              type="input"
                              value="17/10/2019"
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      class="is-centered buttons mx-auto"
                    >
                      <button
                        class="button   is-secondary "
                        data-test=""
                        type="button"
                      >
                        Cancel
                      </button>
                      <button
                        class="button   is-primary "
                        data-test=""
                        type="submit"
                      >
                        Send Payment Request
                      </button>
                    </div>
                  </div>
                </form>
              </div>
            </div>
            <div
              aria-hidden="true"
              style="width: 0px; height: 0px; overflow: hidden; outline: none;"
              tabindex="0"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
