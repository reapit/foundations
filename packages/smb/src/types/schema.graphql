type Query {
  GetContacts: ContactModel
  # GetContacts(Name: String, Address: String, NegotiatorId: [String!], OfficeId: [String!], Active: Boolean, PageNumber: Int, PageSize: Int, SortBy: String, api_version: String, IdentityCheck: [String!], MarketingConsent: [String!]): PagedResult_ContactModel_!
  # GetContactById(id: String!, api_version: String): ContactModel!
  # GetIdChecks(id: String!, pageNumber: Int, pageSize: Int, api_version: String): PagedResult_ContactIdentityCheckModel_!
  # GetIdCheckById(id: String!, checkId: String!, api_version: String): ContactIdentityCheckModel!
}

"""Model representing the physical address of a building or premise"""
type ContactAddressModel {
  """
  Gets the type of address (primary/secondary/home/work/forwarding/company/previous)
  """
  type: String

  """Gets the building name"""
  buildingName: String

  """Gets the building number"""
  buildingNumber: String

  """Gets the first line of the address"""
  line1: String

  """Gets the second line of the address"""
  line2: String

  """Gets the third line of the address"""
  line3: String

  """Gets the fourth line of the address"""
  line4: String

  """Gets the postcode"""
  postcode: String

  """Gets the ISO-3166 country code associated with the address"""
  countryId: String
}

"""
Model representing a single contact detail (eg mobile telephone number)
"""
type ContactCommunicationModel {
  """
  Gets the label representing the type of detail (eg. mobile, email address)
  """
  label: String

  """
  Gets the communication detail (eg. 07999 876543, developers@reapit.com)
  """
  detail: String
}

"""Represents an attempt to verify an individual contacts identity"""
type ContactIdentityCheckModel {
  """Gets the unique identifier"""
  id: String

  """Gets the unique identifier of the contact associated to the id check"""
  contactId: String

  """Gets the date and time that the identity check was created"""
  created: String

  """Gets the date and time that the identity check was last modified"""
  modified: String

  """
  Gets the date that the identity check was performed
  Note that this can be different to the date that the check was created
  """
  checkDate: String

  """
  Gets the status of this identity check  (pass/fail/pending/cancelled/warnings/unchecked)
  """
  status: String

  """
  Gets the id of the negotiator that performed the identity check
  Note that this can be different to the negotiator that created the check
  """
  negotiatorId: String

  """
  Gets the details of the documents that have been provided for this identity check
  """
  documents: [ContactIdentityDocumentModel!]

  """
  Gets a listing of additional metadata that has been set against this identity check
  """
  metadata: JSON
  _links: JSON
  _embedded: JSON
}

"""Represents the details of a document added to an identity check"""
type ContactIdentityDocumentModel {
  """Gets the id of the document type that describes this document"""
  typeId: String

  """Gets the date that this document expires"""
  expiry: String

  """
  Gets the textual details of the identity document (eg. passport number)
  """
  details: String

  """
  Gets the location of the physical file that relates to this document (eg. scan of driving license)
  """
  fileUrl: String
  _links: JSON
  _embedded: JSON
}

"""Model representing the details of a person"""
type ContactModel {
  """Gets the unique identifier"""
  id: String

  """Gets the date and time that the contact was created"""
  created: String

  """Gets the date and time that the contact was last modified"""
  modified: String

  """Gets the title of this contact (eg. Mr, Mrs, Miss, Dr)"""
  title: String

  """Gets the forename of this contact"""
  forename: String

  """Gets the surname of this contact"""
  surname: String

  """Gets the date of birth of this contact"""
  dateOfBirth: String

  """Gets a flag to indicate if this contact has been marked as active"""
  active: Boolean

  """
  Gets the marketing consent status of this contact (grant/deny/notAsked)
  """
  marketingConsent: String

  """
  Gets the status of the last identity check performed against this contact (pass/fail/pending/cancelled/warnings/unchecked)
  """
  identityCheck: String

  """Gets a collection of the contacts communication details"""
  communications: [ContactCommunicationModel!]

  """
  Gets a collection of addresses (maximum 3) that this contact has been associated to
  """
  addresses: [ContactAddressModel!]

  """Gets a collection of office ids that are related to this contact"""
  officeIds: [String!]

  """Gets a collection of negotiator ids that are related to this contact"""
  negotiatorIds: [String!]

  """
  Gets a listing of additional metadata that has been set against this contact
  """
  metadata: JSON
  _links: JSON
  _embedded: JSON
}

"""Model to create a contact address"""
input CreateContactAddressModelInput {
  """
  Sets the type of address (primary/secondary/home/work/forwarding/company/previous)
  """
  type: String

  """Sets the building name"""
  buildingName: String

  """Sets the building number"""
  buildingNumber: String

  """Sets the first line of the address"""
  line1: String

  """Sets the second line of the address"""
  line2: String

  """Sets the third line of the address"""
  line3: String

  """Sets the fourth line of the address"""
  line4: String

  """Sets the postcode"""
  postcode: String

  """Sets the ISO-3166 country code associated with the address"""
  countryId: String
}

"""
Model to create a communication detail for a contact (eg. an email address)
"""
input CreateContactCommunicationModelInput {
  """Sets the label representing the type of detail (eg E-mail)"""
  label: String

  """
  Sets the contact detail (eg the actual telephone number or email address)
  """
  detail: String
}

"""Model to create an identity check"""
input CreateContactIdentityCheckModelInput {
  """
  Sets the date that the identity check was performed
  Note that this can be different to the date that the check was created
  """
  checkDate: String

  """
  Sets the status of this identity check  (pass/fail/pending/cancelled/warnings/unchecked)
  """
  status: String

  """
  Sets the id of the negotiator that performed the identity check
  Note that this can be different to the negotiator that created the check
  """
  negotiatorId: String

  """
  Sets the details of the documents that have been provided for this identity check
  """
  documents: [CreateContactIdentityDocumentModelInput!]

  """Sets a JSON fragment to attach to this identity check as metadata"""
  metadata: JSON
}

"""Model to create an identity check document"""
input CreateContactIdentityDocumentModelInput {
  """Sets the id of the document type that describes this document"""
  typeId: String

  """Sets the date that this document expires"""
  expiry: String

  """
  Sets the textual details of the identity document (eg. passport number)
  """
  details: String

  """
  Sets the location of the physical file that relates to this document (eg. scan of driving license)
  """
  fileUrl: String
}

"""Model to create a new contact record"""
input CreateContactModelInput {
  """Sets the title of this contact (eg. Mr, Mrs, Miss, Dr)"""
  title: String

  """Sets the forename of this contact"""
  forename: String

  """Sets the surname of this contact"""
  surname: String

  """Sets the date of birth of this contact"""
  dateOfBirth: String

  """
  Sets a flag to indicate if this contact has been marked as active (default true)
  """
  active: Boolean

  """
  Sets the marketing consent status of this contact (grant/deny/notAsked)
  """
  marketingConsent: String

  """
  Sets a collection of the contacts communication details
  Eg. Email address, mobile number, landline
  """
  communications: [CreateContactCommunicationModelInput!]

  """Sets a collection of office ids that are related to this contact"""
  officeIds: [String!]

  """Sets a collection of negotiator ids that are related to this contact"""
  negotiatorIds: [String!]

  """
  Sets a collection of addresses that this contact has been associated to
  A maximum of three addresses can be associated to a contact
  """
  addresses: [CreateContactAddressModelInput!]

  """Sets a JSON fragment to attach to this contact as metadata"""
  metadata: JSON
}

scalar JSON

# type Mutation {
#   CreateContact(model: CreateContactModelInput, api_version: String): JSON!
#   UpdateContact(id: String!, model: UpdateContactModelInput, api_version: String): JSON!
#   CreateIdentityCheck(id: String!, model: CreateContactIdentityCheckModelInput, api_version: String): JSON!
#   UpdateIdentityCheck(id: String!, checkId: String!, model: UpdateContactIdentityCheckModelInput, api_version: String): JSON!
# }

type PagedResult_ContactIdentityCheckModel_ {
  _embedded: [ContactIdentityCheckModel!]
  pageNumber: Int
  pageSize: Int
  pageCount: Int
  totalCount: Int
  _links: JSON
}

type PagedResult_ContactModel_ {
  _embedded: [ContactModel!]
  pageNumber: Int
  pageSize: Int
  pageCount: Int
  totalCount: Int
  _links: JSON
}

"""Model to update a contact address"""
input UpdateContactAddressModelInput {
  """
  Sets the type of address (primary/secondary/home/work/forwarding/company/previous)
  """
  type: String

  """Sets the building name"""
  buildingName: String

  """Sets the building number"""
  buildingNumber: String

  """Sets the first line of the address"""
  line1: String

  """Sets the second line of the address"""
  line2: String

  """Sets the third line of the address"""
  line3: String

  """Sets the fourth line of the address"""
  line4: String

  """Sets the postcode"""
  postcode: String

  """Sets the ISO-3166 country code associated with the address"""
  countryId: String
}

"""
Model to update a communication detail for a contact (eg. an email address)
"""
input UpdateContactCommunicationModelInput {
  """Sets the label representing the type of detail (eg E-mail)"""
  label: String

  """
  Sets the contact detail (eg the actual telephone number or email address)
  """
  detail: String
}

"""Model to update an existing identity check"""
input UpdateContactIdentityCheckModelInput {
  """
  Sets the date that the identity check was performed
  Note that this can be different to the date that the check was created
  """
  checkDate: String

  """
  Sets the status of this identity check  (pass/fail/pending/cancelled/warnings/unchecked)
  """
  status: String

  """
  Sets the id of the negotiator that performed the identity check
  Note that this can be different to the negotiator that created the check
  """
  negotiatorId: String

  """
  Sets the details of the documents that have been provided for this identity check
  """
  documents: [UpdateContactIdentityDocumentModelInput!]

  """Sets a JSON fragment to attach to this identity check as metadata"""
  metadata: JSON
}

"""Model to update an identity document"""
input UpdateContactIdentityDocumentModelInput {
  """Sets the id of the document type that describes this document"""
  typeId: String

  """Sets the date that this document expires"""
  expiry: String

  """
  Sets the textual details of the identity document (eg. passport number)
  """
  details: String

  """
  Sets the location of the physical file that relates to this document (eg. scan of driving license)
  """
  fileUrl: String
}

"""Model to update a contact record"""
input UpdateContactModelInput {
  """Sets the title of this contact (eg. Mr, Mrs, Miss, Dr)"""
  title: String

  """Sets the forename of this contact"""
  forename: String

  """Sets the surname of this contact"""
  surname: String

  """Sets the date of birth of this contact"""
  dateOfBirth: String

  """Sets a flag to indicate if this contact has been marked as active"""
  active: Boolean

  """
  Sets the marketing consent status of this contact (grant/deny/notAsked)
  """
  marketingConsent: String

  """
  Sets a collection of the contacts communication details
  Eg. Email address, mobile number, landline
  """
  communications: [UpdateContactCommunicationModelInput!]
  officeIds: [String!]

  """Sets a collection of negotiator ids that are related to this contact"""
  negotiatorIds: [String!]

  """
  Sets a collection of addresses that this contact has been associated to
  A maximum of three addresses can be associated to a contact
  """
  addresses: [UpdateContactAddressModelInput!]

  """Sets a JSON fragment to attach to this contact as metadata"""
  metadata: JSON
}

