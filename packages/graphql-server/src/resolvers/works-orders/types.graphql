enum WorksOrdersEmbed {
  company
  documents
  negotiator
  property
  tenancy
  type
}

enum WorkOrdersStatus {
  pendingApproval
  pendingQuote
  raised
  raisedToChase
  landlordToComplete
  complete
  cancelled
}

type Query {
  GetWorksOrders(
    pageSize: Int
    pageNumber: Int
    sortBy: String
    embed: [WorksOrdersEmbed]
    id: [String]
    companyId: [String]
    negotiatorId: [String]
    propertyId: [String]
    status: [WorkOrdersStatus]
    tenancyId: [String]
    typeId: [String]
    completedFrom: String
    completedTo: String
    createdFrom: String
    createdTo: String
    requiredFrom: String
    requiredTo: String
    metadata: [String]
  ): PagedResultWorksOrders!
}

type PagedResultWorksOrdersEmbeddedItem {
  id: String
  worksOrderId: String
  created: String
  modified: String
  notes: String
  chargeTo: String
  estimate: Int
  estimateType: String
  netAmount: Int
  vatAmount: Int
  grossAmount: Int
  _eTag: String
  _links: JSON
  _embedded: JSON
}

type PagedResultWorksOrdersEmbedded {
  id: String
  created: String
  modified: String
  companyId: String
  propertyId: String
  tenancyId: String
  negotiatorId: String
  typeId: String
  status: String
  description: String
  reporter: String
  booked: String
  required: String
  completed: String
  totalNetAmount: Int
  totalVatAmount: Int
  totalGrossAmount: Int
  metadata: [String!]
  _eTag: String
  _links: JSON
  _embedded: JSON
  items: PagedResultWorksOrdersEmbeddedItem
}

type PagedResultWorksOrders {
  _embedded: [PagedResultWorksOrdersEmbedded!]
  pageNumber: Int
  pageSize: Int
  pageCount: Int
  totalPageCount: Int
  totalCount: Int
  _links: JSON
}
