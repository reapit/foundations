"""
Request body used to create a new office
"""
input CreateOfficeModelInput {
  """
  The name of the office
  """
  name: String

  """
  The name of the office manager
  """
  manager: String

  """
  The address of the office
  """
  address: CreateOfficeModelInput_addressInput

  """
  The work phone number of the office
  """
  workPhone: String

  """
  The email address of the office
  """
  email: String

  """
  App specific metadata to set against the office
  """
  metadata: JSON
}

"""
The address of the office
"""
input CreateOfficeModelInput_addressInput {
  """
  The building name
  """
  buildingName: String

  """
  The building number
  """
  buildingNumber: String

  """
  The first line of the address
  """
  line1: String

  """
  The second line of the address
  """
  line2: String

  """
  The third line of the address
  """
  line3: String

  """
  The fourth line of the address
  """
  line4: String

  """
  The postcode
  """
  postcode: String

  """
  The ISO-3166 country code that the address resides within
  """
  countryId: String
}

scalar JSON

type Mutation {
  CreateOffice(model: CreateOfficeModelInput): JSON!
  UpdateOffice(id: String!, model: UpdateOfficeModelInput): JSON!
}

"""
Representation of an office
"""
type OfficeModel {
  """
  The unique identifier of the office
  """
  id: String

  """
  The date and time when the office was created
  """
  created: String

  """
  The date and time when the office was last modified
  """
  modified: String

  """
  The name of the office
  """
  name: String

  """
  The name of the office manager
  """
  manager: String

  """
  The address of the office
  """
  address: OfficeModel_address

  """
  The work phone number of the office
  """
  workPhone: String

  """
  The email address of the office
  """
  email: String

  """
  App specific metadata that has been set against the office
  """
  metadata: JSON

  """
  The ETag for the current version of the office. Used for managing update concurrency
  """
  _eTag: String
  _links: JSON
  _embedded: JSON
}

"""
The address of the office
"""
type OfficeModel_address {
  """
  The building name
  """
  buildingName: String

  """
  The building number
  """
  buildingNumber: String

  """
  The first line of the address
  """
  line1: String

  """
  The second line of the address
  """
  line2: String

  """
  The third line of the address
  """
  line3: String

  """
  The fourth line of the address
  """
  line4: String

  """
  The postcode
  """
  postcode: String

  """
  The ISO-3166 country code that the address resides within
  """
  countryId: String
}

type PagedResult_OfficeModel_ {
  _embedded: [OfficeModel!]
  pageNumber: Int
  pageSize: Int
  pageCount: Int
  totalCount: Int
  _links: JSON
}

type Query {
  GetOffices(
    PageSize: Int
    PageNumber: Int
    SortBy: String
    Id: [String!]
    Address: String
    Name: String
  ): PagedResult_OfficeModel_!
  GetOfficeById(id: String!): OfficeModel!
}

"""
Request body used to update an existing office
"""
input UpdateOfficeModelInput {
  """
  The name of the office
  """
  name: String

  """
  The name of the office manager
  """
  manager: String

  """
  The address of the office
  """
  address: UpdateOfficeModelInput_addressInput

  """
  The work phone number of the office
  """
  workPhone: String

  """
  The email address of the office
  """
  email: String

  """
  App specific metadata to set against the office
  """
  metadata: JSON
}

"""
The address of the office
"""
input UpdateOfficeModelInput_addressInput {
  """
  The building name
  """
  buildingName: String

  """
  The building number
  """
  buildingNumber: String

  """
  The first line of the address
  """
  line1: String

  """
  The second line of the address
  """
  line2: String

  """
  The third line of the address
  """
  line3: String

  """
  The fourth line of the address
  """
  line4: String

  """
  The postcode
  """
  postcode: String

  """
  The ISO-3166 country code that the address resides within
  """
  countryId: String
}
