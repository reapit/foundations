"""
Representation of a company
"""
type CompanyModel {
  id: String
  created: String
  modified: String
  name: String
  branch: String
  notes: String
  active: Boolean
  vatRegistered: Boolean
  typeIds: [String!]
  supplierTypeId: String
  workPhone: String
  mobilePhone: String
  email: String
  address: CompanyModel_address
  metadata: JSON
  _eTag: String
  _links: JSON
  _embedded: JSON
}

type CompanyModel_address {
  buildingName: String
  buildingNumber: String
  line1: String
  line2: String
  line3: String
  line4: String
  postcode: String
  country: String
}

scalar JSON

type PagedResultCompanyModel_ {
  _embedded: [CompanyModel!]
  pageNumber: Int
  pageSize: Int
  pageCount: Int
  totalPageCount: Int
  totalCount: Int
  _links: JSON
}

type PagedResultCompanyRoleModel_ {
  _embedded: [CompanyRoleModel!]
  pageNumber: Int
  pageSize: Int
  pageCount: Int
  totalPageCount: Int
  totalCount: Int
  _links: JSON
}

type CompanyRoleModel {
  id: String
  created: String
  modified: String
  companyId: String
  associatedType: String
  associatedId: String
  _links: JSON
  _embedded: JSON
}

input CompanyModelAddressInput {
  type: String
  buildingName: String
  buildingNumber: String
  line1: String
  line2: String
  line3: String
  line4: String
  postcode: String
  countryId: String
}

type Query {
  GetCompanyById(id: String!, embed: [String!]): CompanyModel!

  GetCompanies(
    pageSize: Int
    pageNumber: Int
    sortBy: String
    embed: [String!]
    id: [String!]
    address: String
    branch: String
    name: String
    typeId: String
    createdFrom: String
    createdTo: String
    metadata: [String!]
  ): PagedResultCompanyModel_!

  GetCompanyRoles(id: String!, pageSize: Int, pageNumber: Int): PagedResultCompanyRoleModel_!
}

type Mutation {
  UpdateCompany(
    _eTag: String!
    id: String!
    name: String
    branch: String
    notes: String
    active: Boolean
    vatRegistered: Boolean
    typeIds: [String!]
    supplierTypeId: String
    workPhone: String
    mobilePhone: String
    email: String
    address: CompanyModelAddressInput
    metadata: JSON
  ): CompanyModel!

  CreateCompany(
    name: String
    branch: String
    notes: String
    active: Boolean
    vatRegistered: Boolean
    typeIds: [String!]
    supplierTypeId: String
    workPhone: String
    mobilePhone: String
    email: String
    address: CompanyModelAddressInput
    metadata: JSON
  ): CompanyModel!
}
