"""Request body used to create a new property"""
input CreatePropertyModelInput {
  """The marketing mode of the property (selling/letting/sellingAndLetting)"""
  marketingMode: String

  """The unique identifier of the department"""
  departmentId: String

  """
  The strapline description containing a short summary about the property
  """
  strapline: String

  """The brief description of the property"""
  description: String

  """
  The summary of accommodation, typically short phrases or bullet points describing the key features of the property
  """
  summary: String

  """The address of the property"""
  address: CreatePropertyModelInput_addressInput

  """The total number of bedrooms in the property"""
  bedrooms: Int

  """The total number of reception rooms in the property"""
  receptions: Int

  """The total number of bathrooms in the property"""
  bathrooms: Int

  """The council tax banding of the property (A/B/C/D/E/F/G/H)"""
  councilTax: String

  """
  A flag denoting whether or not this property can be advertised on the internet
  """
  internetAdvertising: Boolean

  """The arrangements regarding viewing the property"""
  viewingArrangements: String

  """
  The url of a video associated with this property, such as a virtual tour
  """
  videoUrl: String

  """The caption for the video url associated with this property"""
  videoCaption: String

  """Details of the EPC statistics"""
  epc: CreatePropertyModelInput_epcInput

  """Details of the external land area associated to this property"""
  externalArea: CreatePropertyModelInput_externalAreaInput

  """Details of the internal dimensions of the property"""
  internalArea: CreatePropertyModelInput_internalAreaInput

  """Selling specific details about the property"""
  selling: CreatePropertyModelInput_sellingInput

  """Letting specific details about the property"""
  letting: CreatePropertyModelInput_lettingInput

  """The property type attributes"""
  type: [String!]

  """The property style attributes"""
  style: [String!]

  """The property situation attributes"""
  situation: [String!]

  """The property parking attributes"""
  parking: [String!]

  """The property age attributes"""
  age: [String!]

  """The property locality attributes"""
  locality: [String!]

  """Details of each room in the property"""
  rooms: [CreatePropertyRoomModelInput!]

  """The unique identifier of the negotiator managing the property"""
  negotiatorId: String

  """A collection of unique identifiers of offices attached to the property"""
  officeIds: [String!]

  """The unique identifier of the area that the property resides in"""
  areaId: String

  """App specific metadata to set against the property"""
  metadata: JSON
}

"""The address of the property"""
input CreatePropertyModelInput_addressInput {
  """The building name"""
  buildingName: String

  """The building number"""
  buildingNumber: String

  """The first line of the address"""
  line1: String

  """The second line of the address"""
  line2: String

  """The third line of the address"""
  line3: String

  """The fourth line of the address"""
  line4: String

  """The postcode"""
  postcode: String

  """The ISO-3166 country code that the address resides within"""
  countryId: String

  """The geolocation coordinates associated with the address"""
  geolocation: CreatePropertyModelInput_addressInput_geolocationInput
}

"""The geolocation coordinates associated with the address"""
input CreatePropertyModelInput_addressInput_geolocationInput {
  """The latitude coordinate of the coordinate pair"""
  latitude: Float

  """The longitude coordinate of the coordinate pair"""
  longitude: Float
}

"""Details of the EPC statistics"""
input CreatePropertyModelInput_epcInput {
  """
  A flag denoting whether or not this property is exempt from requiring an EPC certificate
  """
  exempt: Boolean

  """The current energy efficiency rating"""
  eer: Int

  """The potential energy efficiency rating"""
  eerPotential: Int

  """The current environmental impact rating"""
  eir: Int

  """The potential environmental impact rating"""
  eirPotential: Int
}

"""Details of the external land area associated to this property"""
input CreatePropertyModelInput_externalAreaInput {
  """The unit of area (acres/hectares)"""
  type: String

  """The minimum area bound"""
  min: Float

  """The maximum area bound"""
  max: Float
}

"""Details of the internal dimensions of the property"""
input CreatePropertyModelInput_internalAreaInput {
  """The unit of area (squareFeet/squareMetres)"""
  type: String

  """The minimum area bound"""
  min: Float

  """The maximum area bound"""
  max: Float
}

"""Letting specific details about the property"""
input CreatePropertyModelInput_lettingInput {
  """The date the property was marked as to let"""
  instructed: String

  """The date the property is available from"""
  availableFrom: String

  """The date the property is available to"""
  availableTo: String

  """The rent being charged for the property"""
  rent: Float

  """The frequency at which rent will be collected (weekly/monthly/yearly)"""
  rentFrequency: String

  """
  The furnishing state that the property can be offered in (furnished/unfurnished/partFurnished)
  """
  furnishing: [String!]

  """
  The role that the agent will be performing for this lettings property (managed/rentCollection/collectFirstPayment/collectRentToDate/lettingOnly/introducingTenant)
  """
  agentRole: String

  """The acceptable letting terms (short/long/any)"""
  term: String

  """
  The current status of the let (valuation/toLet/toLetUnavailable/underOffer/underOfferUnavailable/arrangingTenancyUnavailable/arrangingTenancy/tenancyCurrentUnavailable/tenancyCurrent/tenancyFinished/tenancyCancelled/sold/letByOtherAgent/letPrivately/provisional/withdrawn)
  """
  status: String
}

"""Selling specific details about the property"""
input CreatePropertyModelInput_sellingInput {
  """The date that the property was marked as for sale"""
  instructed: String

  """The marketing price of the property"""
  price: Int

  """
  The price qualifier (askingPrice/priceOnApplication/guidePrice/offersInRegion/offersOver/offersInExcess/fixedPrice/priceReducedTo)
  """
  qualifier: String

  """
  The current status of the sale (preAppraisal/valuation/paidValuation/forSale/forSaleUnavailable/underOffer/underOfferUnavailable/reserved/exchanged/completed/soldExternally/withdrawn)
  """
  status: String

  """The date the property sale was completed"""
  completed: String

  """The date the property was exchanged"""
  exchanged: String

  """Details about the tenure of the property"""
  tenure: CreatePropertyModelInput_sellingInput_tenureInput
}

"""Details about the tenure of the property"""
input CreatePropertyModelInput_sellingInput_tenureInput {
  """
  The type of tenure that applies to the property (freehold/leasehold/shareOfFreehold/commonhold/tba)
  """
  type: String

  """The tenure expiration date"""
  expiry: String
}

"""
Request body to create a room in the Rooms collection of a new property
"""
input CreatePropertyRoomModelInput {
  """The name of the room"""
  name: String

  """Details about the dimensions of the room"""
  dimensions: String

  """Short description of the room"""
  description: String
}

scalar JSON

type Mutation {
  CreateProperty(model: CreatePropertyModelInput): JSON!
  UpdateProperty(If_Match: String!, id: String!, model: UpdatePropertyModelInput): JSON!
}

type PagedResult_PropertyModel_ {
  _embedded: [PropertyModel!]
  pageNumber: Int
  pageSize: Int
  pageCount: Int
  totalCount: Int
  _links: JSON
}

"""Representation of a property"""
type PropertyModel {
  """The unique identifier of the property"""
  id: String

  """The date and time when the property was created"""
  created: String

  """The date and time when the property was last modified"""
  modified: String

  """The marketing mode of the property (selling/letting/sellingAndLetting)"""
  marketingMode: String

  """The currency that applies to monetary amounts exposed in the model"""
  currency: String

  """The address of the property"""
  address: PropertyModel_address

  """The unique identifier of the area that the property resides in"""
  areaId: String

  """
  The strapline description containing a short summary about the property
  """
  strapline: String

  """The brief description of the property"""
  description: String

  """
  The summary of accommodation, typically short phrases or bullet points describing the key features of the property
  """
  summary: String

  """The unique identifier of the department"""
  departmentId: String

  """The unique identifier of the negotiator managing the property"""
  negotiatorId: String

  """The total number of bedrooms in the property"""
  bedrooms: Int

  """The total number of reception rooms in the property"""
  receptions: Int

  """The total number of bathrooms in the property"""
  bathrooms: Int

  """The council tax banding of the property (A/B/C/D/E/F/G/H)"""
  councilTax: String

  """
  A flag denoting whether or not this property can be advertised on the internet
  """
  internetAdvertising: Boolean

  """The arrangements regarding viewing the property"""
  viewingArrangements: String

  """
  The url of a video associated with this property, such as a virtual tour
  """
  videoUrl: String

  """The caption for the video url associated with this property"""
  videoCaption: String

  """Details of the external land area associated to this property"""
  externalArea: PropertyModel_externalArea

  """Details of the internal dimensions of the property"""
  internalArea: PropertyModel_internalArea

  """Details of the EPC statistics"""
  epc: PropertyModel_epc

  """Selling specific details about the property"""
  selling: PropertyModel_selling

  """Letting specific details about the property"""
  letting: PropertyModel_letting

  """The property type attributes"""
  type: [String!]

  """The property style attributes"""
  style: [String!]

  """The property situation attributes"""
  situation: [String!]

  """The property parking attributes"""
  parking: [String!]

  """The property age attributes"""
  age: [String!]

  """The property locality attributes"""
  locality: [String!]

  """Details of each room in the property"""
  rooms: [PropertyRoomModel!]

  """A collection of unique identifiers of offices attached to the property"""
  officeIds: [String!]

  """App specific metadata that has been set against the property"""
  metadata: JSON

  """
  The ETag for the current version of the property. Used for managing update concurrency
  """
  _eTag: String
  _links: JSON
  _embedded: JSON
}

"""The address of the property"""
type PropertyModel_address {
  """The building name"""
  buildingName: String

  """The building number"""
  buildingNumber: String

  """The first line of the address"""
  line1: String

  """The second line of the address"""
  line2: String

  """The third line of the address"""
  line3: String

  """The fourth line of the address"""
  line4: String

  """The postcode"""
  postcode: String

  """The ISO-3166 country code that the address resides within"""
  countryId: String

  """The geolocation coordinates associated with the address"""
  geolocation: PropertyModel_address_geolocation
}

"""The geolocation coordinates associated with the address"""
type PropertyModel_address_geolocation {
  """The latitude coordinate of the coordinate pair"""
  latitude: Float

  """The longitude coordinate of the coordinate pair"""
  longitude: Float
}

"""Details of the EPC statistics"""
type PropertyModel_epc {
  """
  A flag denoting whether or not this property is exempt from requiring an EPC certificate
  """
  exempt: Boolean

  """The current energy efficiency rating"""
  eer: Int

  """The potential energy efficiency rating"""
  eerPotential: Int

  """The current environmental impact rating"""
  eir: Int

  """The potential environmental impact rating"""
  eirPotential: Int
}

"""Details of the external land area associated to this property"""
type PropertyModel_externalArea {
  """The unit of area (acres/hectares)"""
  type: String

  """The minimum area bound"""
  min: Float

  """The maximum area bound"""
  max: Float
}

"""Details of the internal dimensions of the property"""
type PropertyModel_internalArea {
  """The unit of area (squareFeet/squareMetres)"""
  type: String

  """The minimum area bound"""
  min: Float

  """The maximum area bound"""
  max: Float
}

"""Letting specific details about the property"""
type PropertyModel_letting {
  """The date the property was marked as to let"""
  instructed: String

  """The date the property is next available from"""
  availableFrom: String

  """The date the property is available to"""
  availableTo: String

  """The rent being charged for the property"""
  rent: Float

  """The frequency at which rent will be collected (weekly/monthly/yearly)"""
  rentFrequency: String

  """
  The furnishing state that the property can be offered in (furnished/unfurnished/partFurnished)
  """
  furnishing: [String!]

  """The acceptable letting terms (short/long/any)"""
  term: String

  """
  The current status of the let (valuation/toLet/toLetUnavailable/underOffer/underOfferUnavailable/arrangingTenancyUnavailable/arrangingTenancy/tenancyCurrentUnavailable/tenancyCurrent/tenancyFinished/tenancyCancelled/sold/letByOtherAgent/letPrivately/provisional/withdrawn)
  """
  status: String

  """
  The role that the agent will be performing for this lettings property (managed/rentCollection/collectFirstPayment/collectRentToDate/lettingOnly/introducingTenant)
  """
  agentRole: String

  """The unique identifier of the landlord letting the property"""
  landlordId: String
}

"""Selling specific details about the property"""
type PropertyModel_selling {
  """The date that the property was marked as for sale"""
  instructed: String

  """The marketing price of the property"""
  price: Float

  """
  The price qualifier (askingPrice/priceOnApplication/guidePrice/offersInRegion/offersOver/offersInExcess/fixedPrice/priceReducedTo)
  """
  qualifier: String

  """
  The current status of the sale (preAppraisal/valuation/paidValuation/forSale/forSaleUnavailable/underOffer/underOfferUnavailable/reserved/exchanged/completed/soldExternally/withdrawn)
  """
  status: String

  """The date the property sale was completed"""
  completed: String

  """The date the property was exchanged"""
  exchanged: String

  """Details about the tenure of the property"""
  tenure: PropertyModel_selling_tenure

  """The unique identifier of the vendor selling the property"""
  vendorId: String
}

"""Details about the tenure of the property"""
type PropertyModel_selling_tenure {
  """
  The type of tenure that applies to the property (freehold/leasehold/shareOfFreehold/commonhold/tba)
  """
  type: String

  """The tenure expiration date"""
  expiry: String
}

"""Representation of a single room in a property"""
type PropertyRoomModel {
  """The name of the room"""
  name: String

  """Details about the dimensions of the room"""
  dimensions: String

  """Short description of the room"""
  description: String
}

type Query {
  GetProperties(pageSize: Int, pageNumber: Int, sortBy: String, embed: [String!], id: [String!], age: [String!], agentRole: [String!], landlordId: [String!], lettingStatus: [String!], locality: [String!], parking: [String!], sellingStatus: [String!], situation: [String!], style: [String!], type: [String!], address: String, departmentId: String, marketingMode: [String!], bedroomsFrom: Int, bedroomsTo: Int, priceFrom: Int, priceTo: Int, rentFrom: Float, rentTo: Float, rentFrequency: [String!], internetAdvertising: Boolean): PagedResult_PropertyModel_!
  GetPropertyById(id: String!, embed: [String!]): PropertyModel!
}

"""Request body used to update an existing property"""
input UpdatePropertyModelInput {
  """
  The strapline description containing a short summary about the property
  """
  strapline: String

  """The brief description of the property"""
  description: String

  """
  The summary of accommodation, typically short phrases or bullet points describing the key features of the property
  """
  summary: String

  """The address of the property"""
  address: UpdatePropertyModelInput_addressInput

  """The total number of bedrooms in the property"""
  bedrooms: Int

  """The total number of reception rooms in the property"""
  receptions: Int

  """The total number of bathrooms in the property"""
  bathrooms: Int

  """The council tax banding of the property (A/B/C/D/E/F/G/H)"""
  councilTax: String

  """
  A flag denoting whether or not this property can be advertised on the internet
  """
  internetAdvertising: Boolean

  """The arrangements regarding viewing the property"""
  viewingArrangements: String

  """
  The url of a video associated with this property, such as a virtual tour
  """
  videoUrl: String

  """The caption for the video url associated with this property"""
  videoCaption: String

  """Details of the EPC statistics"""
  epc: UpdatePropertyModelInput_epcInput

  """Details of the external land area associated to this property"""
  externalArea: UpdatePropertyModelInput_externalAreaInput

  """Details of the internal dimensions of the property"""
  internalArea: UpdatePropertyModelInput_internalAreaInput

  """Selling specific details about the property"""
  selling: UpdatePropertyModelInput_sellingInput

  """Letting specific details about the property"""
  letting: UpdatePropertyModelInput_lettingInput

  """The property type attributes"""
  type: [String!]

  """The property style attributes"""
  style: [String!]

  """The property situation attributes"""
  situation: [String!]

  """The property parking attributes"""
  parking: [String!]

  """The property age attributes"""
  age: [String!]

  """The property locality attributes"""
  locality: [String!]

  """The unique identifier of the negotiator managing the property"""
  negotiatorId: String

  """A collection of unique identifiers of offices attached to the property"""
  officeIds: [String!]

  """The unique identifier of the area that the property resides in"""
  areaId: String

  """App specific metadata to set against the property"""
  metadata: JSON
}

"""The address of the property"""
input UpdatePropertyModelInput_addressInput {
  """The building name"""
  buildingName: String

  """The building number"""
  buildingNumber: String

  """The first line of the address"""
  line1: String

  """The second line of the address"""
  line2: String

  """The third line of the address"""
  line3: String

  """The fourth line of the address"""
  line4: String

  """The postcode"""
  postcode: String

  """The ISO-3166 country code that the address resides within"""
  countryId: String

  """The geolocation coordinates associated with the address"""
  geolocation: UpdatePropertyModelInput_addressInput_geolocationInput
}

"""The geolocation coordinates associated with the address"""
input UpdatePropertyModelInput_addressInput_geolocationInput {
  """The latitude coordinate of the coordinate pair"""
  latitude: Float

  """The longitude coordinate of the coordinate pair"""
  longitude: Float
}

"""Details of the EPC statistics"""
input UpdatePropertyModelInput_epcInput {
  """
  A flag denoting whether or not this property is exempt from requiring an EPC certificate
  """
  exempt: Boolean

  """The current energy efficiency rating"""
  eer: Int

  """The potential energy efficiency rating"""
  eerPotential: Int

  """The current environmental impact rating"""
  eir: Int

  """The potential environmental impact rating"""
  eirPotential: Int
}

"""Details of the external land area associated to this property"""
input UpdatePropertyModelInput_externalAreaInput {
  """The unit of area (acres/hectares)"""
  type: String

  """The minimum area bound"""
  min: Float

  """The maximum area bound"""
  max: Float
}

"""Details of the internal dimensions of the property"""
input UpdatePropertyModelInput_internalAreaInput {
  """The unit of area (squareFeet/squareMetres)"""
  type: String

  """The minimum area bound"""
  min: Float

  """The maximum area bound"""
  max: Float
}

"""Letting specific details about the property"""
input UpdatePropertyModelInput_lettingInput {
  """The date the property was marked as to let"""
  instructed: String

  """The date the property is next available from"""
  availableFrom: String

  """The date the property is available to"""
  availableTo: String

  """The rent being charged for the property"""
  rent: Float

  """The frequency at which rent will be collected (weekly/monthly/yearly)"""
  rentFrequency: String

  """
  The furnishing state that the property can be offered in (furnished/unfurnished/partFurnished)
  """
  furnishing: [String!]

  """The acceptable letting terms (short/long/any)"""
  term: String

  """
  The current status of the let (valuation/toLet/toLetUnavailable/underOffer/underOfferUnavailable/arrangingTenancyUnavailable/arrangingTenancy/tenancyCurrentUnavailable/tenancyCurrent/tenancyFinished/tenancyCancelled/sold/letByOtherAgent/letPrivately/provisional/withdrawn)
  """
  status: String

  """
  The role that the agent will be performing for this lettings property (managed/rentCollection/collectFirstPayment/collectRentToDate/lettingOnly/introducingTenant)
  """
  agentRole: String
}

"""Selling specific details about the property"""
input UpdatePropertyModelInput_sellingInput {
  """The date that the property was marked as for sale"""
  instructed: String

  """The marketing price of the property"""
  price: Int

  """
  The price qualifier (askingPrice/priceOnApplication/guidePrice/offersInRegion/offersOver/offersInExcess/fixedPrice/priceReducedTo)
  """
  qualifier: String

  """
  The current status of the sale (preAppraisal/valuation/paidValuation/forSale/forSaleUnavailable/underOffer/underOfferUnavailable/reserved/exchanged/completed/soldExternally/withdrawn)
  """
  status: String

  """The date the property sale was completed"""
  completed: String

  """The date the property was exchanged"""
  exchanged: String

  """Details about the tenure of the property"""
  tenure: UpdatePropertyModelInput_sellingInput_tenureInput
}

"""Details about the tenure of the property"""
input UpdatePropertyModelInput_sellingInput_tenureInput {
  """
  The type of tenure that applies to the property (freehold/leasehold/shareOfFreehold/commonhold/tba)
  """
  type: String

  """The tenure expiration date"""
  expiry: String
}

