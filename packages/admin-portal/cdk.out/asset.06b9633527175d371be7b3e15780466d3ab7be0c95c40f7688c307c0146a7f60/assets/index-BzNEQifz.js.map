{"version":3,"file":"index-BzNEQifz.js","sources":["../../src/components/usage/filter-form.tsx","../../src/components/usage/__styles__/index.ts","../../src/components/usage/usage-table.tsx","../../src/components/usage/index.tsx"],"sourcesContent":["import React, { Dispatch, FC, SetStateAction } from 'react'\nimport { UsageFilters } from '.'\nimport { useForm } from 'react-hook-form'\nimport {\n  FormLayout,\n  InputWrapFull,\n  Subtitle,\n  BodyText,\n  InputWrap,\n  InputGroup,\n  SearchableDropdown,\n  Label,\n  Select,\n} from '@reapit/elements'\nimport { fetchDevelopersList } from '../../services/developers'\nimport { AppSummaryModelPagedResult, InstallationModelPagedResult } from '@reapit/foundations-ts-definitions'\nimport dayjs from 'dayjs'\n\nexport interface FilterFormProps {\n  setUsageFilters: Dispatch<SetStateAction<UsageFilters>>\n  apps: AppSummaryModelPagedResult | null\n  installations: InstallationModelPagedResult | null\n}\n\nexport const FilterForm: FC<FilterFormProps> = ({ setUsageFilters, apps, installations }) => {\n  const { register, handleSubmit, getValues } = useForm<UsageFilters>({ mode: 'all' })\n\n  const { developerId, month, appId } = getValues()\n\n  return (\n    <form onChange={handleSubmit(setUsageFilters)}>\n      <FormLayout hasMargin>\n        <InputWrapFull>\n          <Subtitle>Filters</Subtitle>\n          <BodyText hasGreyText>Apply a filter to get started. Developer and month are required by default.</BodyText>\n        </InputWrapFull>\n        <InputWrap>\n          <SearchableDropdown\n            label=\"Company\"\n            id=\"developer-search-box\"\n            {...register('developerId')}\n            getResults={(company: string) =>\n              fetchDevelopersList({ company, status: 'confirmed' }).then((developers) => developers?.data ?? [])\n            }\n            getResultLabel={(result) => `${result.company} -  ${result.name}`}\n            getResultValue={(result) => result.id ?? ''}\n            placeholder=\"Search developer organisations\"\n          />\n        </InputWrap>\n        <InputWrap>\n          <InputGroup\n            {...register('month')}\n            label=\"Month\"\n            type=\"month\"\n            defaultValue={dayjs(new Date()).subtract(1, 'month').format('YYYY-MM')}\n          />\n        </InputWrap>\n        <InputWrap>\n          <InputGroup>\n            <Label>App</Label>\n            <Select {...register('appId')} disabled={!developerId || !month || !apps}>\n              <option value=\"\">Please Select</option>\n              {apps?.data?.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              ))}\n            </Select>\n          </InputGroup>\n        </InputWrap>\n        <InputWrap>\n          <InputGroup>\n            <Label>Customer</Label>\n            <Select {...register('customerId')} disabled={!developerId || !month || !appId || !installations}>\n              <option value=\"\">Please Select</option>\n              {installations?.data?.map(({ customerName, id, client }) => (\n                <option key={id} value={client}>\n                  {customerName} (Code: {client})\n                </option>\n              ))}\n            </Select>\n          </InputGroup>\n        </InputWrap>\n      </FormLayout>\n    </form>\n  )\n}\n","import { css } from '@linaria/core'\n\nexport const threeColTable = css`\n  grid-template-columns: repeat(3, 1fr);\n`\n","import React, { FC } from 'react'\nimport { BillingBreakdownForMonthV2Model } from '@reapit/foundations-ts-definitions'\nimport {\n  PersistentNotification,\n  Table,\n  TableCell,\n  TableHeader,\n  TableHeadersRow,\n  TableRow,\n  Subtitle,\n  BodyText,\n  Grid,\n  Col,\n} from '@reapit/elements'\nimport { threeColTable } from './__styles__'\n\nexport interface UsageTableProps {\n  billing: BillingBreakdownForMonthV2Model | null\n}\n\nexport const UsageTable: FC<UsageTableProps> = ({ billing }) => {\n  const apiCalls = billing?.services?.find((item) => item.name === 'API Requests')?.items ?? []\n  return apiCalls.length ? (\n    <>\n      <Grid>\n        <Col>\n          <Subtitle>Billable Amount</Subtitle>\n          <BodyText hasGreyText>£{billing?.totalCost?.toFixed(2).padStart(2, '0')}</BodyText>\n        </Col>\n        <Col>\n          <Subtitle>Actual Cost</Subtitle>\n          <BodyText hasGreyText>£{billing?.actualCost?.toFixed(2).padStart(2, '0')}</BodyText>\n        </Col>\n      </Grid>\n      <Subtitle>Breakdown</Subtitle>\n\n      <Table\n        rows={apiCalls.map(({ name, amount, cost, itemCount, items }) => ({\n          cells: [\n            {\n              label: 'Entity Name',\n              value: name ?? '',\n              icon: 'property',\n              cellHasDarkText: true,\n              narrowTable: {\n                showLabel: true,\n              },\n            },\n            {\n              label: 'Total Number Calls',\n              value: String(amount) ?? '',\n              icon: 'property',\n              cellHasDarkText: true,\n              narrowTable: {\n                showLabel: true,\n              },\n            },\n            {\n              label: 'Total Cost',\n              value: cost ? `£${cost.toFixed(2).padStart(2, '0')}` : '£0',\n              icon: 'property',\n              cellHasDarkText: true,\n              narrowTable: {\n                showLabel: true,\n              },\n            },\n            {\n              label: 'Total Number Endpoints',\n              value: String(itemCount) ?? '',\n              icon: 'property',\n              cellHasDarkText: true,\n              narrowTable: {\n                showLabel: true,\n              },\n            },\n          ],\n          expandableContent: {\n            content: (\n              <>\n                <Table>\n                  <TableHeadersRow className={threeColTable}>\n                    <TableHeader>Endpoint Name</TableHeader>\n                    <TableHeader>Endpoint Number Calls</TableHeader>\n                    <TableHeader>Endpoint Cost</TableHeader>\n                  </TableHeadersRow>\n                  {items?.map(({ name, amount, cost }) => (\n                    <TableRow className={threeColTable} key={name}>\n                      <TableCell>{name}</TableCell>\n                      <TableCell>{amount}</TableCell>\n                      <TableCell>{cost ? `£${cost}` : '£0'}</TableCell>\n                    </TableRow>\n                  ))}\n                </Table>\n              </>\n            ),\n          },\n        }))}\n      />\n    </>\n  ) : (\n    <div>\n      <PersistentNotification isExpanded isFullWidth isInline intent=\"primary\">\n        No results found for your selected filters\n      </PersistentNotification>\n    </div>\n  )\n}\n","import { Loader, PageContainer, Title } from '@reapit/elements'\nimport React, { FC, useState } from 'react'\nimport { FilterForm } from './filter-form'\nimport { UsageTable } from './usage-table'\nimport { useReapitGet, GetActionNames, getActions } from '@reapit/use-reapit-data'\nimport { reapitConnectBrowserSession } from '../../core/connect-session'\nimport {\n  AppSummaryModelPagedResult,\n  BillingBreakdownForMonthV2Model,\n  InstallationModelPagedResult,\n} from '@reapit/foundations-ts-definitions'\nimport { Statistics } from '../statistics'\n\nexport interface UsageFilters {\n  month?: string\n  developerId?: string\n  customerId?: string\n  appId?: string\n}\n\nexport const UsagePage: FC = () => {\n  const [usageFilters, setUsageFilters] = useState<UsageFilters>({})\n  const { month, developerId, appId, customerId } = usageFilters\n\n  const appIdFilter = appId ? { applicationId: appId } : {}\n  const customerIdFilter = customerId ? { customerId } : {}\n\n  const [billing, billingLoading] = useReapitGet<BillingBreakdownForMonthV2Model>({\n    reapitConnectBrowserSession,\n    action: getActions[GetActionNames.getBillingDataByMonth],\n    queryParams: {\n      developerId,\n      type: 'trafficEvents',\n      ...appIdFilter,\n      ...customerIdFilter,\n    },\n    uriParams: { month },\n    headers: {\n      ['api-version']: '2',\n    },\n    fetchWhenTrue: [month && developerId],\n  })\n\n  const [apps] = useReapitGet<AppSummaryModelPagedResult>({\n    reapitConnectBrowserSession,\n    action: getActions[GetActionNames.getApps],\n    queryParams: {\n      developerId,\n      pageSize: 999,\n    },\n    fetchWhenTrue: [month && developerId],\n  })\n\n  const [installations] = useReapitGet<InstallationModelPagedResult>({\n    reapitConnectBrowserSession,\n    action: getActions[GetActionNames.getInstallations],\n    queryParams: {\n      appId,\n      isInstalled: true,\n      pageSize: 999,\n    },\n    fetchWhenTrue: [month && developerId && appId],\n  })\n\n  const apiCalls = billing?.services?.find((item) => item.name === 'API Requests')?.items ?? []\n\n  return (\n    <PageContainer>\n      <Title>API Usage</Title>\n      <FilterForm setUsageFilters={setUsageFilters} apps={apps} installations={installations} />\n      <Statistics area=\"BILLING\" data={apiCalls} />\n      {billingLoading ? <Loader /> : <UsageTable billing={billing} />}\n    </PageContainer>\n  )\n}\n\nexport default UsagePage\n"],"names":["FilterForm","setUsageFilters","apps","installations","register","handleSubmit","getValues","useForm","developerId","month","appId","jsx","jsxs","FormLayout","InputWrapFull","Subtitle","BodyText","InputWrap","SearchableDropdown","company","fetchDevelopersList","developers","result","InputGroup","dayjs","Label","Select","id","name","customerName","client","threeColTable","UsageTable","billing","apiCalls","item","Fragment","Grid","Col","Table","amount","cost","itemCount","items","TableHeadersRow","TableHeader","TableRow","TableCell","PersistentNotification","UsagePage","usageFilters","useState","customerId","appIdFilter","customerIdFilter","billingLoading","useReapitGet","reapitConnectBrowserSession","getActions","GetActionNames","PageContainer","Title","Statistics","Loader"],"mappings":"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"}