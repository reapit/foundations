{"version":3,"file":"index-C6vlA0sq.js","sources":["../../../utils-common/src/pipeline-helpers/index.ts","../../../foundations-ts-definitions/deployment-schema/index.ts","../../src/components/iaas/index.tsx"],"sourcesContent":["import { Intent } from '@reapit/elements'\nimport { PipelineRunnerType } from '@reapit/foundations-ts-definitions'\n\nexport const buildStatusToIntent = (status: string): Intent => {\n  switch (status) {\n    case 'PROVISIONING':\n      return 'primary'\n    case 'SUCCEEDED':\n    case 'COMPLETED':\n      return 'success'\n    case 'IN_PROGRESS':\n    case 'QUEUED':\n      return 'neutral'\n    case 'FAILED':\n    case 'DELETING':\n    case 'DELETED':\n    case 'FAILED_TO_PROVISION':\n    case 'SCHEDULED_FOR_DELETION':\n      return 'danger'\n    case 'PRE_PROVISIONED':\n    case 'READY_FOR_DEPLOYMENT':\n    default:\n      return 'pending'\n  }\n}\n\nexport const runnerTypeToReadable = (type: PipelineRunnerType): string => {\n  switch (type) {\n    case 'BUILD':\n      return 'Pulled from repo'\n    case 'RELEASE':\n      return 'Built from zip'\n    case 'REPO':\n      return 'Git pushed'\n    default:\n      return 'Unknown'\n  }\n}\n\nexport const buildStatusToReadable = (status: string): string =>\n  status\n    .split('_')\n    .map((str) => `${str.charAt(0).toUpperCase()}${str.slice(1).toLowerCase()}`)\n    .join(' ')\n\nexport const pipelineViewable = (status: string): boolean =>\n  ![\n    'DELETING',\n    'SCHEDULED_FOR_DELETION',\n    'DELETED',\n    'PRE_PROVISIONED',\n    'PROVISIONING',\n    'PROVISION_REQUEST',\n    'FAILED_TO_PROVISION',\n    'READY_FOR_DEPLOYMENT',\n  ].includes(status)\n","import { CodeBuild } from 'aws-sdk'\n\nexport const pipelineDeploymentDisabled = [\n  'PROVISIONING',\n  'PROVISION_REQUEST',\n  'FAILED_TO_PROVISION',\n  'PRE_PROVISIONED',\n  'DELETING',\n  'DELETED',\n  'SCHEDULED_FOR_DELETION',\n  'DELETION_REQUEST',\n  'CREATED',\n]\nexport const pipelineNotDeletable = [\n  'IN_PROGRESS',\n  'DELETING',\n  'PROVISION_REQUEST',\n  'PROVISIONING',\n  'QUEUED',\n  'SCHEDULED_FOR_DELETION',\n  'DELETION_REQUEST',\n  'CREATED',\n  'DELETED',\n]\n\nexport const pipelineProvisioning = ['PROVISIONING', 'PROVISION_REQUEST']\n\nexport const pipelinePreprovisionedFlow = ['PRE_PROVISIONED', 'PROVISIONING', 'PROVISION_REQUEST', 'FAILED_TO_PROVISION']\n\nexport type PipelineProvisionBuildStatuses =\n  | 'PRE_PROVISIONED'\n  | 'PROVISIONING'\n  | 'PROVISION_REQUEST'\n  | 'FAILED_TO_PROVISION'\n\nexport type PipelineDeployingBuildStatues = 'QUEUED' | 'COMPLETED' | 'FAILED'\n\nexport type PipelineDeleteBuildStatuses = 'DELETED' | 'DELETING' | 'SCHEDULED_FOR_DELETION' | 'DELETION_REQUEST'\n\nexport type PipelineBuildStatus =\n  | 'CREATED'\n  | ('READY_FOR_DEPLOYMENT' &\n      PipelineDeleteBuildStatuses &\n      PipelineDeployingBuildStatues &\n      PipelineProvisionBuildStatuses)\n  | CodeBuild.StatusType\n\n\nexport interface GithubRepositoryInterface {\n  repositoryUrl?: string\n  installationId?: number\n  repositoryId?: number\n}\n\nexport interface PipelineModelInterface {\n  id?: string\n  name?: string\n  organisationId?: string\n  created?: string\n  modified?: string\n  developerId?: string\n  appType?: AppTypeEnum\n  buildCommand?: string\n  testCommand?: string\n  packageManager?: PackageManagerEnum\n  repository?: GithubRepositoryInterface\n  branch?: string\n  outDir?: string\n  buildStatus?: PipelineBuildStatus | string\n  appId?: string\n  subDomain?: string\n  bitbucketClientId?: string\n}\n\nexport interface PipelineRunnerModelInterface {\n  id?: string\n  pipelineId?: string\n  created?: string\n  modified?: string\n  appType?: AppTypeEnum\n  type?: PipelineRunnerType\n  buildCommand?: string\n  packageManager?: PackageManagerEnum\n  tasks?: TaskModelInterface[]\n  buildStatus?: CodeBuild.StatusType\n  s3BuildLogsLocation?: string\n  buildVersion?: string\n  currentlyDeployed?: boolean\n}\n\nexport interface TaskModelInterface {\n  id?: string\n  pipelineRunnerId?: string\n  created?: string\n  modified?: string\n  functionName?: CodeBuild.BuildPhaseType\n  buildStatus?: CodeBuild.StatusType\n  startTime?: Date\n  endTime?: Date\n  elapsedTime?: string\n}\n\nexport enum PackageManagerEnum {\n  NPM = 'npm',\n  YARN = 'yarn',\n  YARN_BERRY = 'yarn-berry',\n}\n\nexport enum AppTypeEnum {\n  NODE = 'node',\n  REACT = 'react',\n}\n\nexport enum PipelineRunnerType {\n  BUILD = 'BUILD',\n  RELEASE = 'RELEASE',\n  REPO = 'REPO',\n}\n","import { reapitConnectBrowserSession } from '../../core/connect-session'\nimport { useReapitConnect } from '@reapit/connect-session'\nimport {\n  BodyText,\n  Button,\n  ButtonGroup,\n  elMb11,\n  FormLayout,\n  InputWrap,\n  Loader,\n  PageContainer,\n  Pagination,\n  SearchableDropdown,\n  StatusIndicator,\n  Table,\n  Title,\n  useModal,\n} from '@reapit/elements'\nimport { PipelineModelInterface, pipelineNotDeletable } from '@reapit/foundations-ts-definitions'\nimport { buildStatusToIntent, buildStatusToReadable } from '@reapit/utils-common'\nimport {\n  objectToQuery,\n  SendFunction,\n  useReapitGet,\n  useReapitUpdate,\n  GetActionNames,\n  getActions,\n  UpdateActionNames,\n  updateActions,\n} from '@reapit/use-reapit-data'\nimport React, { Dispatch, FC, SetStateAction, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { usePermissionsState } from '../../core/use-permissions-state'\nimport { fetchDevelopersList } from '../../services/developers'\n\ntype Pagination<T> = {\n  items: Array<T>\n  meta: {\n    currentPage: number\n    itemCount: number\n    itemsPerPage: number\n    totalItems: number\n    totalPages: number\n  }\n}\n\nexport type IaasFilterValues = {\n  developerId?: string\n}\n\nexport const handleDeletePipeline =\n  (deletePipeline: SendFunction<void, boolean>, closeModal: () => void, refreshPipelines: () => void) => () => {\n    const handleDelete = async () => {\n      const response = await deletePipeline()\n      if (response) {\n        closeModal()\n        refreshPipelines()\n      }\n    }\n\n    handleDelete()\n  }\n\nexport const handleOpenModal =\n  (setAppId: Dispatch<SetStateAction<string | null>>, openModal: () => void, appId?: string) => async () => {\n    if (appId) {\n      setAppId(appId)\n      openModal()\n    }\n  }\n\nexport const IaaS: FC = () => {\n  const { connectSession } = useReapitConnect(reapitConnectBrowserSession)\n  const [page, setPage] = useState<number>(1)\n  const [iaasFilters, setIaasFilters] = useState<IaasFilterValues>({})\n  const [appId, setAppId] = useState<string | null>(null)\n  const { Modal, openModal, closeModal } = useModal()\n  const { hasReadAccess } = usePermissionsState()\n\n  const queryParams = objectToQuery(iaasFilters)\n\n  const [pipelines, pipelinesLoading, , refreshPipelines] = useReapitGet<Pagination<PipelineModelInterface>>({\n    reapitConnectBrowserSession,\n    action: getActions[GetActionNames.paginatePipeline],\n    headers: {\n      Authorization: connectSession?.idToken as string,\n    },\n    fetchWhenTrue: [connectSession?.idToken],\n    queryParams: {\n      ...queryParams,\n      page,\n    },\n  })\n\n  const [, , deletePipeline] = useReapitUpdate<void, boolean>({\n    reapitConnectBrowserSession,\n    action: updateActions[UpdateActionNames.deletePipeline],\n    method: 'DELETE',\n    uriParams: {\n      appId,\n    },\n    headers: {\n      Authorization: connectSession?.idToken as string,\n    },\n  })\n\n  const { register, handleSubmit } = useForm<IaasFilterValues>({\n    mode: 'onChange',\n  })\n\n  return (\n    <PageContainer>\n      <Title>IaaS Pipelines</Title>\n      <form onChange={handleSubmit(setIaasFilters)}>\n        <FormLayout className={elMb11}>\n          <InputWrap>\n            <SearchableDropdown\n              id=\"developer-search-box\"\n              {...register('developerId')}\n              getResults={(company: string) =>\n                fetchDevelopersList({ company }).then((developers) => developers?.data ?? [])\n              }\n              getResultLabel={(result) => `${result.company} -  ${result.name}`}\n              getResultValue={(result) => result.id ?? ''}\n              placeholder=\"Search developer organisations\"\n            />\n          </InputWrap>\n        </FormLayout>\n      </form>\n      {pipelinesLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Table\n            className={elMb11}\n            numberColumns={4}\n            rows={pipelines?.items.map(({ name, id, buildStatus, repository }) => ({\n              cells: [\n                {\n                  label: 'Name',\n                  value: name,\n                  icon: 'insights',\n                  cellHasDarkText: true,\n                  narrowTable: {\n                    showLabel: true,\n                  },\n                },\n                {\n                  label: 'Build Status',\n                  value: (\n                    <>\n                      <StatusIndicator intent={buildStatusToIntent(buildStatus as string)} />\n                      {buildStatusToReadable(buildStatus as string)}\n                    </>\n                  ),\n                  narrowTable: {\n                    showLabel: true,\n                  },\n                },\n                {\n                  label: 'Repository',\n                  value: repository?.repositoryUrl,\n                  narrowTable: {\n                    showLabel: true,\n                  },\n                },\n              ],\n              ctaContent: {\n                headerContent: 'Delete Pipeline',\n                icon: pipelineNotDeletable.includes(buildStatus as string) || hasReadAccess ? undefined : 'trash',\n                onClick:\n                  pipelineNotDeletable.includes(buildStatus as string) || hasReadAccess\n                    ? undefined\n                    : handleOpenModal(setAppId, openModal, id),\n              },\n            }))}\n          />\n          <Modal title=\"Delete Pipeline\">\n            <BodyText hasGreyText>\n              Are you sure you want to delete this pipeline? This will tear down any infrastructure you have provisioned\n              and cannot be recovered.\n            </BodyText>\n            <ButtonGroup alignment=\"right\">\n              <Button onClick={closeModal}>Close</Button>\n              <Button intent=\"danger\" onClick={handleDeletePipeline(deletePipeline, closeModal, refreshPipelines)}>\n                Delete\n              </Button>\n            </ButtonGroup>\n          </Modal>\n          {pipelines && (\n            <Pagination\n              currentPage={pipelines.meta.currentPage ?? 1}\n              numberPages={pipelines.meta.totalPages ?? 1}\n              callback={setPage}\n            />\n          )}\n        </>\n      )}\n    </PageContainer>\n  )\n}\n\nexport default IaaS\n"],"names":["buildStatusToIntent","status","buildStatusToReadable","str","pipelineNotDeletable","handleDeletePipeline","deletePipeline","closeModal","refreshPipelines","handleOpenModal","setAppId","openModal","appId","IaaS","connectSession","useReapitConnect","reapitConnectBrowserSession","page","setPage","useState","iaasFilters","setIaasFilters","Modal","useModal","hasReadAccess","usePermissionsState","queryParams","objectToQuery","pipelines","pipelinesLoading","useReapitGet","getActions","GetActionNames","useReapitUpdate","updateActions","UpdateActionNames","register","handleSubmit","useForm","PageContainer","jsx","Title","FormLayout","elMb11","InputWrap","SearchableDropdown","company","fetchDevelopersList","developers","result","Loader","jsxs","Fragment","Table","name","id","buildStatus","repository","StatusIndicator","BodyText","ButtonGroup","Button","Pagination"],"mappings":"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"}