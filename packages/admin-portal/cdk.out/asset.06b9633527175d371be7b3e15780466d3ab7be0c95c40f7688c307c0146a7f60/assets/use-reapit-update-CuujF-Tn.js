import{n as K,o as N,r as O,aK as R,t as g}from"./vendor-_Ftg20Hp.js";import{b as f,h as y,c as k,d as A,N as B,l as D}from"./index-D0G8dB-d.js";const H=({action:r,method:S="POST",returnType:u="none",headers:E={},uriParams:t,withCredentials:v,reapitConnectBrowserSession:p})=>{const{error:C,success:M}=K(),P=N(),{successMessage:h,errorMessage:m}=r,w=O.useMemo(f(r,void 0,t),[t,r]),{mutateAsync:T,error:l,data:b,isSuccess:L,isLoading:x}=R([w,t],{mutationFn:async s=>{const{data:a,options:e}=s,i={...E,...(e==null?void 0:e.headers)??{}},n=e!=null&&e.uriParams?f(r,void 0,{...t,...e.uriParams})():w,c=await k(p,i);if(!c)throw new Error("Missing valid Reapit Connect Session, please try logging in again.");const d=await g(n,{method:S,headers:c,data:a,withCredentials:v});if(u==="response")return d.data;if(u==="location"&&d.headers){const o=d.headers.location;if(!o)throw new Error("Location was not returned by server");const G=o.includes(".prod.paas")?o.replace(".prod.paas",""):o;return(await g(G,{method:"GET",headers:c})).data}return!0},onSuccess:()=>{h&&M(h)},onError:async s=>{const a=await p.connectSession(),e=s.message===A,i=s.code===B;if(e||i||!a)return P("/login");const n=y(s,m);C(n,5e3),D(new Error(n),a)}}),F=l?y(l,m):null;return[x,b,(s,a)=>T({data:s,options:a}),L,F]};export{H as u};
