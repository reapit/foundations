{"version":3,"file":"index-CMuiY2GU.js","sources":["../../src/components/subscriptions/filter-form.tsx","../../src/components/subscriptions/index.tsx"],"sourcesContent":["import React, { Dispatch, FC, SetStateAction } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { FormLayout, InputWrap, InputGroup, Label, Select } from '@reapit/elements'\nimport { SubscriptionsFilters } from '.'\nimport debounce from 'just-debounce-it'\n\nexport interface FilterFormProps {\n  setSubscriptionsFilters: Dispatch<SetStateAction<SubscriptionsFilters>>\n}\n\nexport const FilterForm: FC<FilterFormProps> = ({ setSubscriptionsFilters }) => {\n  const { register, handleSubmit } = useForm<SubscriptionsFilters>({ mode: 'all' })\n\n  return (\n    <form onChange={handleSubmit(debounce(setSubscriptionsFilters, 500))}>\n      <FormLayout hasMargin>\n        <InputWrap>\n          <InputGroup {...register('organisationName')} label=\"Company Name\" />\n        </InputWrap>\n        <InputWrap>\n          <InputGroup {...register('userEmail')} type=\"email\" label=\"User Email\" />\n        </InputWrap>\n        <InputWrap>\n          <InputGroup>\n            <Label>Subscription Type</Label>\n            <Select {...register('subscriptionType')}>\n              <option value=\"\">Please Select</option>\n              <option value=\"applicationListing\">Application Listing</option>\n              <option value=\"developerRegistration\">Developer Registration</option>\n              <option value=\"developerEdition\">Developer Edition</option>\n            </Select>\n          </InputGroup>\n        </InputWrap>\n        <InputWrap>\n          <InputGroup>\n            <Label>Status</Label>\n            <Select {...register('status')}>\n              <option value=\"\">Please Select</option>\n              <option value=\"active\">Active</option>\n              <option value=\"cancelled\">Cancelled</option>\n            </Select>\n          </InputGroup>\n        </InputWrap>\n      </FormLayout>\n    </form>\n  )\n}\n","import React, { Dispatch, FC, SetStateAction, useEffect, useState } from 'react'\nimport ErrorBoundary from '../error-boundary'\nimport { toLocalTime } from '@reapit/utils-common'\nimport {\n  PageContainer,\n  Loader,\n  Title,\n  Pagination,\n  Table,\n  elMb11,\n  useModal,\n  BodyText,\n  ButtonGroup,\n  Button,\n} from '@reapit/elements'\nimport {\n  objectToQuery,\n  SendFunction,\n  useReapitGet,\n  useReapitUpdate,\n  UpdateActionNames,\n  updateActions,\n  GetActionNames,\n  getActions,\n} from '@reapit/use-reapit-data'\nimport { SubscriptionModelPagedResult } from '@reapit/foundations-ts-definitions'\nimport { reapitConnectBrowserSession } from '../../core/connect-session'\nimport { FilterForm } from './filter-form'\nimport { Statistics } from '../statistics'\nimport { usePermissionsState } from '../../core/use-permissions-state'\n\nexport interface SubscriptionsFilters {\n  subscriptionType?: string\n  organisationName?: string\n  userEmail?: string\n  status?: string\n}\n\nexport const handleCancelSub =\n  (cancelSub: SendFunction<void, boolean | null>, setCancelSubId: Dispatch<SetStateAction<string | null>>) =>\n  async () => {\n    const cancelled = await cancelSub()\n    if (cancelled) {\n      setCancelSubId(null)\n    }\n  }\n\nexport const handleCancelSubSuccess = (refetchSubs: () => void, closeModal: () => void, success?: boolean) => () => {\n  if (success) {\n    refetchSubs()\n    closeModal()\n  }\n}\n\nexport const handleSetSubId =\n  (setCancelSubId: Dispatch<SetStateAction<string | null>>, openModal: () => void, cancelSubId?: string) => () => {\n    if (cancelSubId) {\n      openModal()\n      setCancelSubId(cancelSubId)\n    }\n  }\n\nconst Subscriptions: FC = () => {\n  const [subscriptionsFilters, setSubscriptionsFilters] = useState<SubscriptionsFilters>({})\n  const [pageNumber, setPageNumber] = useState<number>(1)\n  const [pageSize, setPageSize] = useState<number>(12)\n  const [cancelSubId, setCancelSubId] = useState<string | null>(null)\n  const { Modal, openModal, closeModal } = useModal()\n  const { hasReadAccess } = usePermissionsState()\n\n  const [subscriptions, subscriptionsLoading, , refetchSubs] = useReapitGet<SubscriptionModelPagedResult>({\n    reapitConnectBrowserSession,\n    action: getActions[GetActionNames.getSubscriptions],\n    queryParams: {\n      ...objectToQuery(subscriptionsFilters),\n      userEmail: subscriptionsFilters.userEmail ? encodeURIComponent(subscriptionsFilters.userEmail ?? '') : undefined,\n      pageSize,\n      pageNumber,\n    },\n  })\n\n  const [, , cancelSub, cancelSubSuccess] = useReapitUpdate<void, null>({\n    reapitConnectBrowserSession,\n    action: updateActions[UpdateActionNames.deleteSubscription],\n    method: 'DELETE',\n    uriParams: {\n      subscriptionId: cancelSubId,\n    },\n  })\n\n  useEffect(handleCancelSubSuccess(refetchSubs, closeModal, cancelSubSuccess), [cancelSubSuccess])\n\n  return (\n    <ErrorBoundary>\n      <PageContainer>\n        <Title>Subscriptions</Title>\n        <FilterForm setSubscriptionsFilters={setSubscriptionsFilters} />\n        <Statistics area=\"SUBSCRIPTIONS\" data={subscriptions} setPageSize={setPageSize} />\n        {subscriptionsLoading ? (\n          <Loader />\n        ) : (\n          <>\n            <Table\n              className={elMb11}\n              numberColumns={10}\n              rows={subscriptions?.data?.map(\n                ({ id, type, summary, organisationName, user, created, renews, frequency, cost, cancelled }) => ({\n                  cells: [\n                    {\n                      label: 'Subcription Type',\n                      value: type,\n                      cellHasDarkText: true,\n                      narrowTable: {\n                        showLabel: true,\n                      },\n                    },\n                    {\n                      label: 'Summary',\n                      value: summary,\n                      narrowTable: {\n                        showLabel: true,\n                      },\n                    },\n                    {\n                      label: 'Company Name',\n                      value: organisationName,\n                      narrowTable: {\n                        showLabel: true,\n                      },\n                    },\n                    {\n                      label: 'User Email',\n                      value: user,\n                      narrowTable: {\n                        showLabel: true,\n                      },\n                    },\n                    {\n                      label: 'Start Date',\n                      value: toLocalTime(created),\n                      narrowTable: {\n                        showLabel: true,\n                      },\n                    },\n                    {\n                      label: 'Renews',\n                      value: renews ? toLocalTime(renews) : '-',\n                      narrowTable: {\n                        showLabel: true,\n                      },\n                    },\n                    {\n                      label: 'Frequency',\n                      value: frequency,\n                      narrowTable: {\n                        showLabel: true,\n                      },\n                    },\n                    {\n                      label: 'Cost',\n                      value: `Â£${cost}`,\n                      narrowTable: {\n                        showLabel: true,\n                      },\n                    },\n                    {\n                      label: 'Cancelled',\n                      value: cancelled ? toLocalTime(cancelled) : '-',\n                      narrowTable: {\n                        showLabel: true,\n                      },\n                    },\n                  ],\n                  ctaContent: {\n                    headerContent: 'Cancel',\n                    icon: cancelled || hasReadAccess ? undefined : 'trash',\n                    onClick: cancelled || hasReadAccess ? undefined : handleSetSubId(setCancelSubId, openModal, id),\n                  },\n                }),\n              )}\n            />\n            <Pagination\n              callback={setPageNumber}\n              currentPage={pageNumber}\n              numberPages={Math.ceil((subscriptions?.totalCount ?? 1) / 12)}\n            />\n            <Modal title=\"Cancel Subscription\">\n              <BodyText>Please confirm you wish to cancel this subscription</BodyText>\n              <ButtonGroup alignment=\"right\">\n                <Button type=\"button\" onClick={closeModal}>\n                  Close\n                </Button>\n                <Button intent=\"danger\" onClick={handleCancelSub(cancelSub, setCancelSubId)}>\n                  Cancel\n                </Button>\n              </ButtonGroup>\n            </Modal>\n          </>\n        )}\n      </PageContainer>\n    </ErrorBoundary>\n  )\n}\n\nexport default Subscriptions\n"],"names":["FilterForm","setSubscriptionsFilters","register","handleSubmit","useForm","jsx","debounce","jsxs","FormLayout","InputWrap","InputGroup","Label","Select","handleCancelSub","cancelSub","setCancelSubId","handleCancelSubSuccess","refetchSubs","closeModal","success","handleSetSubId","openModal","cancelSubId","Subscriptions","subscriptionsFilters","useState","pageNumber","setPageNumber","pageSize","setPageSize","Modal","useModal","hasReadAccess","usePermissionsState","subscriptions","subscriptionsLoading","useReapitGet","reapitConnectBrowserSession","getActions","GetActionNames","objectToQuery","cancelSubSuccess","useReapitUpdate","updateActions","UpdateActionNames","useEffect","ErrorBoundary","PageContainer","Title","Statistics","Loader","Fragment","Table","elMb11","id","type","summary","organisationName","user","created","renews","frequency","cost","cancelled","toLocalTime","Pagination","BodyText","ButtonGroup","Button"],"mappings":"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"}