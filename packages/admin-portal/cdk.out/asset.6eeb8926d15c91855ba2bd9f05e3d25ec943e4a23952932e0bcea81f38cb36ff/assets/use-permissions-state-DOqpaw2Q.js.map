{"version":3,"file":"use-permissions-state-DOqpaw2Q.js","sources":["../../../connect-session/src/react/index.ts","../../src/core/use-permissions-state.tsx"],"sourcesContent":["import React from 'react'\nimport { ReapitConnectHook, ReapitConnectSession } from '../types'\nimport { ReapitConnectBrowserSession } from '../browser'\n\nexport const useReapitConnect = (reapitConnectBrowserSession: ReapitConnectBrowserSession): ReapitConnectHook => {\n  const [connectSession, setConnectSession] = React.useState<ReapitConnectSession | null>(null)\n\n  React.useEffect(() => {\n    const connectGetSession = async () => {\n      const session = await reapitConnectBrowserSession.connectSession()\n      if (session) {\n        setConnectSession(session)\n      }\n    }\n\n    connectGetSession().catch((error) => console.error(error))\n  }, [reapitConnectBrowserSession])\n\n  const connectAuthorizeRedirect = React.useCallback(() => {\n    reapitConnectBrowserSession.connectAuthorizeRedirect()\n  }, [])\n\n  const connectLoginRedirect = React.useCallback(() => {\n    reapitConnectBrowserSession.connectLoginRedirect()\n  }, [])\n\n  const connectLogoutRedirect = React.useCallback(() => {\n    reapitConnectBrowserSession.connectLogoutRedirect()\n  }, [])\n\n  const connectIsDesktop = reapitConnectBrowserSession.connectIsDesktop\n\n  const connectHasSession = reapitConnectBrowserSession.connectHasSession\n\n  const connectInternalRedirect = reapitConnectBrowserSession.connectInternalRedirect\n\n  const connectClearSession = reapitConnectBrowserSession.connectClearSession\n\n  return {\n    connectSession,\n    connectAuthorizeRedirect,\n    connectLoginRedirect,\n    connectLogoutRedirect,\n    connectInternalRedirect,\n    connectIsDesktop,\n    connectHasSession,\n    connectClearSession,\n  }\n}\n","import React, {\n  FC,\n  createContext,\n  useContext,\n  useMemo,\n  useState,\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  PropsWithChildren,\n} from 'react'\nimport { ReapitConnectSession, useReapitConnect } from '@reapit/connect-session'\nimport { reapitConnectBrowserSession } from './connect-session'\nimport { elMt5, Loader, PageContainer, PersistentNotification } from '@reapit/elements'\n\nexport interface PermissionsStateHook {\n  hasReadAccess: boolean\n  hasWriteAccess: boolean\n}\n\nexport const handleAccessPermissions = (connectSession: ReapitConnectSession | null) => (): PermissionsStateHook => {\n  const groups = connectSession?.loginIdentity?.groups ?? []\n  const hasWriteAccess = groups.includes('ReapitEmployeeFoundationsAdmin')\n  const readAccess = groups.includes('ReapitEmployee')\n  const hasReadAccess = readAccess && !hasWriteAccess\n\n  return {\n    hasReadAccess,\n    hasWriteAccess,\n  }\n}\n\nexport const handleBannerTimeout = (setBannerVisible: Dispatch<SetStateAction<boolean>>) => () => {\n  const timeout = setTimeout(() => {\n    setBannerVisible(false)\n  }, 5000)\n\n  return () => clearTimeout(timeout)\n}\n\nexport const handleBannerClick =\n  (setBannerVisible: Dispatch<SetStateAction<boolean>>, bannerVisibile: boolean) => () => {\n    setBannerVisible(!bannerVisibile)\n  }\n\nexport const PermissionsStateContext = createContext<PermissionsStateHook>({} as PermissionsStateHook)\n\nconst { Provider } = PermissionsStateContext\n\nexport const PermissionsProvider: FC<PropsWithChildren> = ({ children }) => {\n  const { connectSession } = useReapitConnect(reapitConnectBrowserSession)\n  const [bannerVisible, setBannerVisible] = useState<boolean>(true)\n  const { hasReadAccess, hasWriteAccess } = useMemo(handleAccessPermissions(connectSession), [connectSession])\n\n  useEffect(handleBannerTimeout(setBannerVisible), [])\n\n  const hasNoAccess = !hasReadAccess && !hasWriteAccess\n\n  return !connectSession ? (\n    <Loader />\n  ) : hasNoAccess ? (\n    <PageContainer>\n      <PersistentNotification isFullWidth isInline isExpanded intent=\"danger\">\n        You do not have permission to access this application.\n      </PersistentNotification>\n    </PageContainer>\n  ) : (\n    <Provider\n      value={{\n        hasReadAccess,\n        hasWriteAccess,\n      }}\n    >\n      {hasReadAccess && (\n        <PersistentNotification\n          className={elMt5}\n          onClick={handleBannerClick(setBannerVisible, bannerVisible)}\n          isExpanded={bannerVisible}\n          intent=\"primary\"\n        >\n          You have read only access to the Admin Portal. This means some buttons and actions will be unavailable or\n          disabled while using the app.\n        </PersistentNotification>\n      )}\n      {children}\n    </Provider>\n  )\n}\n\nexport const usePermissionsState = (): PermissionsStateHook => {\n  return useContext(PermissionsStateContext)\n}\n"],"names":["useReapitConnect","reapitConnectBrowserSession","connectSession","setConnectSession","React","session","error","connectAuthorizeRedirect","connectLoginRedirect","connectLogoutRedirect","connectIsDesktop","connectHasSession","connectInternalRedirect","connectClearSession","handleAccessPermissions","groups","hasWriteAccess","handleBannerTimeout","setBannerVisible","timeout","handleBannerClick","bannerVisibile","PermissionsStateContext","createContext","Provider","PermissionsProvider","children","bannerVisible","useState","hasReadAccess","useMemo","useEffect","jsx","PageContainer","PersistentNotification","jsxs","elMt5","Loader","usePermissionsState","useContext"],"mappings":"6HAIa,MAAAA,EAAoBC,GAAgF,CAC/G,KAAM,CAACC,EAAgBC,CAAiB,EAAIC,EAAM,SAAsC,IAAI,EAE5FA,EAAM,UAAU,IAAM,EACM,SAAY,CAC9B,MAAAC,EAAU,MAAMJ,EAA4B,iBAC9CI,GACFF,EAAkBE,CAAO,CAC3B,GAGF,EAAoB,MAAOC,GAAU,QAAQ,MAAMA,CAAK,CAAC,CAAA,EACxD,CAACL,CAA2B,CAAC,EAE1B,MAAAM,EAA2BH,EAAM,YAAY,IAAM,CACvDH,EAA4B,yBAAyB,CACvD,EAAG,CAAE,CAAA,EAECO,EAAuBJ,EAAM,YAAY,IAAM,CACnDH,EAA4B,qBAAqB,CACnD,EAAG,CAAE,CAAA,EAECQ,EAAwBL,EAAM,YAAY,IAAM,CACpDH,EAA4B,sBAAsB,CACpD,EAAG,CAAE,CAAA,EAECS,EAAmBT,EAA4B,iBAE/CU,EAAoBV,EAA4B,kBAEhDW,EAA0BX,EAA4B,wBAEtDY,EAAsBZ,EAA4B,oBAEjD,MAAA,CACL,eAAAC,EACA,yBAAAK,EACA,qBAAAC,EACA,sBAAAC,EACA,wBAAAG,EACA,iBAAAF,EACA,kBAAAC,EACA,oBAAAE,CAAA,CAEJ,EC5BaC,EAA2BZ,GAAgD,IAA4B,CAClH,MAAMa,EAASb,GAAgB,eAAe,QAAU,CAAA,EAClDc,EAAiBD,EAAO,SAAS,gCAAgC,EAIhE,MAAA,CACL,cAJiBA,EAAO,SAAS,gBAAgB,GACf,CAACC,EAInC,eAAAA,CAAA,CAEJ,EAEaC,EAAuBC,GAAwD,IAAM,CAC1F,MAAAC,EAAU,WAAW,IAAM,CAC/BD,EAAiB,EAAK,GACrB,GAAI,EAEA,MAAA,IAAM,aAAaC,CAAO,CACnC,EAEaC,EACX,CAACF,EAAqDG,IAA4B,IAAM,CACtFH,EAAiB,CAACG,CAAc,CAClC,EAEWC,EAA0BC,EAAAA,cAAoC,CAAA,CAA0B,EAE/F,CAAE,SAAAC,CAAa,EAAAF,EAERG,EAA6C,CAAC,CAAE,SAAAC,KAAe,CAC1E,KAAM,CAAE,eAAAxB,CAAA,EAAmBF,EAAiBC,CAA2B,EACjE,CAAC0B,EAAeT,CAAgB,EAAIU,WAAkB,EAAI,EAC1D,CAAE,cAAAC,EAAe,eAAAb,CAAA,EAAmBc,EAAA,QAAQhB,EAAwBZ,CAAc,EAAG,CAACA,CAAc,CAAC,EAE3G6B,OAAAA,EAAAA,UAAUd,EAAoBC,CAAgB,EAAG,CAAE,CAAA,EAI3ChB,EAFY,CAAC2B,GAAiB,CAACb,EAKrCgB,EAAAA,IAACC,GACC,SAACD,EAAA,IAAAE,EAAA,CAAuB,YAAW,GAAC,SAAQ,GAAC,WAAU,GAAC,OAAO,SAAS,SAAA,yDAExE,EACF,EAEAC,EAAA,KAACX,EAAA,CACC,MAAO,CACL,cAAAK,EACA,eAAAb,CACF,EAEC,SAAA,CACCa,GAAAG,EAAA,IAACE,EAAA,CACC,UAAWE,EACX,QAAShB,EAAkBF,EAAkBS,CAAa,EAC1D,WAAYA,EACZ,OAAO,UACR,SAAA,yIAAA,CAGD,EAEDD,CAAA,CAAA,CAAA,EAzBFM,MAAAK,EAAA,CAAA,CAAO,CA4BZ,EAEaC,EAAsB,IAC1BC,EAAAA,WAAWjB,CAAuB"}