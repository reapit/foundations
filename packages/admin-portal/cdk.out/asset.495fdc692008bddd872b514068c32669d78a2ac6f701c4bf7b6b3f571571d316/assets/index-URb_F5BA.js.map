{"version":3,"file":"index-URb_F5BA.js","sources":["../../../utils-common/src/combine-address/index.ts"],"sourcesContent":["export interface AddressModel {\n  buildingName?: string\n  buildingNumber?: string\n  line1?: string\n  line2?: string\n  line3?: string\n  line4?: string\n  postcode?: string\n  country?: string\n  geolocation?: GeolocationModel\n}\n\nexport interface GeolocationModel {\n  latitude?: number\n  longitude?: number\n}\n\nexport const combineAddress = (address: AddressModel | undefined): string => {\n  let addressCombined = ''\n  if (!address) {\n    return addressCombined\n  }\n  if (address.buildingNumber) {\n    addressCombined = addressCombined.concat(`${address.buildingNumber}`)\n  }\n  if (address.buildingName) {\n    addressCombined = addressCombined.concat(` ${address.buildingName}`)\n  }\n  if (address.line1) {\n    addressCombined = addressCombined.concat(` ${address.line1}`)\n  }\n  if (address.line2) {\n    addressCombined = addressCombined.concat(` ${address.line2}`)\n  }\n  if (address.line3) {\n    addressCombined = addressCombined.concat(` ${address.line3}`)\n  }\n  if (address.line4) {\n    addressCombined = addressCombined.concat(` ${address.line4}`)\n  }\n  if (address.postcode) {\n    addressCombined = addressCombined.concat(` ${address.postcode}`)\n  }\n  if (address.country) {\n    addressCombined = addressCombined.concat(` ${address.country}`)\n  }\n  return addressCombined\n}\n"],"names":["combineAddress","address","addressCombined"],"mappings":"AAiBa,MAAAA,EAAkBC,GAA8C,CAC3E,IAAIC,EAAkB,GACtB,OAAKD,IAGDA,EAAQ,iBACVC,EAAkBA,EAAgB,OAAO,GAAGD,EAAQ,cAAc,EAAE,GAElEA,EAAQ,eACVC,EAAkBA,EAAgB,OAAO,IAAID,EAAQ,YAAY,EAAE,GAEjEA,EAAQ,QACVC,EAAkBA,EAAgB,OAAO,IAAID,EAAQ,KAAK,EAAE,GAE1DA,EAAQ,QACVC,EAAkBA,EAAgB,OAAO,IAAID,EAAQ,KAAK,EAAE,GAE1DA,EAAQ,QACVC,EAAkBA,EAAgB,OAAO,IAAID,EAAQ,KAAK,EAAE,GAE1DA,EAAQ,QACVC,EAAkBA,EAAgB,OAAO,IAAID,EAAQ,KAAK,EAAE,GAE1DA,EAAQ,WACVC,EAAkBA,EAAgB,OAAO,IAAID,EAAQ,QAAQ,EAAE,GAE7DA,EAAQ,UACVC,EAAkBA,EAAgB,OAAO,IAAID,EAAQ,OAAO,EAAE,IAEzDC,CACT"}