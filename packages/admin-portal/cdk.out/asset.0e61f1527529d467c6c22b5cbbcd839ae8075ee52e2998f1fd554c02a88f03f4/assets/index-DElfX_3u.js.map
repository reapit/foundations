{"version":3,"file":"index-DElfX_3u.js","sources":["../../../utils-react/src/html-renderer/__styles__/index.ts","../../../utils-react/src/html-renderer/utils.tsx","../../../utils-react/src/html-renderer/index.tsx","../../src/components/consents/resend-consent-modal.tsx","../../src/components/consents/index.tsx","../../src/components/approvals/__styles__/index.ts","../../src/components/approvals/diff-media.tsx","../../src/components/approvals/diff-checkbox.tsx","../../../../node_modules/diff/lib/index.es6.js","../../src/components/approvals/diff-viewer.tsx","../../src/components/approvals/diff-render-html.tsx","../../src/components/approvals/app-revision-comparison.tsx","../../src/components/approvals/index.tsx"],"sourcesContent":["import { styled } from '@linaria/react'\n\nexport const HtmlContentWrap = styled.div`\n  font-family: var(--font-sans-serif);\n  font-weight: normal;\n  color: var(--color-black);\n  font-size: var(--font-size-small);\n  line-height: 1.25rem;\n  letter-spacing: -1%;\n  margin-bottom: 0.25rem;\n  float: none;\n\n  * {\n    float: none;\n    line-height: 1.75rem;\n  }\n\n  p,\n  div,\n  ol,\n  ul {\n    color: var(--color-black);\n  }\n\n  h5 {\n    font-size: var(--font-size-subheading);\n    color: var(--color-black);\n    line-height: 1.5rem;\n    letter-spacing: 0%;\n    margin-bottom: 1.25rem;\n\n    b,\n    i {\n      color: var(--color-black);\n    }\n  }\n\n  li {\n    margin-bottom: 0.25rem;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  ul,\n  ol {\n    margin-left: 1rem;\n  }\n\n  ul {\n    list-style: disc;\n  }\n\n  ol {\n    list-style: numbered;\n  }\n\n  i {\n    font-style: italic;\n    color: var(--color-black);\n  }\n\n  b {\n    font-weight: bold;\n    color: var(--color-black);\n  }\n\n  &:after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n\n  @media (min-width: 768px) {\n    font-size: var(--font-size-default);\n  }\n`\n","import React from 'react'\n\nexport interface Element {\n  type: string\n  tagName?: string\n  children?: Element[]\n  attributes?: any\n  content?: string\n}\n\nconst sortContentType = (domItem: Element, index: number, diffing: boolean) => {\n  // using DOMParse to parse HTML entities like &nbsp;\n  return domItem.type === 'text'\n    ? new DOMParser().parseFromString(domItem.content || '', 'text/html').documentElement.textContent || null\n    : rendererModule.sortTags(domItem, index, diffing)\n}\n\nconst getChildren = (domTag: Element, diffing: boolean) => {\n  return domTag.children\n    ? domTag.children.map((child: Element, index: number) => rendererModule.sortContentType(child, index, diffing))\n    : null\n}\n\nconst getAttributes = (domTag: Element, index: number) => {\n  const attributes = domTag.attributes || []\n  // convert to react-compatible props\n  const reactPropsAttributes = Array.from(attributes as { [key: string]: any }[]).reduce(\n    (acc, { key, value }) => ({\n      ...acc,\n      [key]: value,\n    }),\n    {},\n  )\n  return { ...reactPropsAttributes, key: index, style: {} }\n}\n\nconst getAnchorAttrs = (attributes: { [key: string]: any }) => {\n  const href = attributes['href']\n  const dynamicHref = window['__REAPIT_MARKETPLACE_GLOBALS__'] ? `agencycloud://process/webpage?url=${href}` : href\n  return {\n    ...attributes,\n    href: dynamicHref,\n  }\n}\n\nconst sortTags = (domTag: Element, index: number, diffing: boolean) => {\n  const children = rendererModule.getChildren(domTag, diffing)\n  const attributes = rendererModule.getAttributes(domTag, index)\n\n  if (!children || !children.length) {\n    return null\n  }\n  switch (domTag.tagName) {\n    case 'p':\n      return <p {...attributes}>{children}</p>\n    case 'a':\n      return window['__REAPIT_MARKETPLACE_GLOBALS__'] ? (\n        <a {...getAnchorAttrs(attributes as { [key: string]: any })}>{children}</a>\n      ) : (\n        <a target=\"_blank\" rel=\"noopener\" {...getAnchorAttrs(attributes as { [key: string]: any })}>\n          {children}\n        </a>\n      )\n    case 'b':\n      return <b {...attributes}>{children}</b>\n    case 'u':\n      return <u {...attributes}>{children}</u>\n    case 'ul':\n      return <ul {...attributes}>{children}</ul>\n    case 'ol':\n      return <ol {...attributes}>{children}</ol>\n    case 'li':\n      return <li {...attributes}>{children}</li>\n    case 'h1':\n      return <h1 {...attributes}>{children}</h1>\n    case 'h2':\n      return <h2 {...attributes}>{children}</h2>\n    case 'h3':\n      return <h3 {...attributes}>{children}</h3>\n    case 'h4':\n      return <h4 {...attributes}>{children}</h4>\n    case 'h5':\n      return <h5 {...attributes}>{children}</h5>\n    case 'h6':\n      return <h6 {...attributes}>{children}</h6>\n    case 'i':\n      return <i {...attributes}>{children}</i>\n    case 'strike':\n      return <del {...attributes}>{children}</del>\n    case 'blockquote':\n      return <blockquote {...attributes}>{children}</blockquote>\n    case 'pre':\n      return <pre {...attributes}>{children}</pre>\n    case 'hr':\n      return <hr {...attributes} />\n    case 'ins':\n      return diffing ? <ins {...attributes}>{children}</ins> : <div {...attributes}>{children}</div>\n    case 'del':\n      return diffing ? (\n        <del className=\"del-diff\" {...attributes}>\n          {children}\n        </del>\n      ) : (\n        <div {...attributes}>{children}</div>\n      )\n    default:\n      return <div {...attributes}>{children}</div>\n  }\n}\n\nconst renderer = (domContent: Element[], diffing: boolean) =>\n  domContent.map((domItem: Element, index: number) => rendererModule.sortContentType(domItem, index, diffing))\n\nexport const rendererModule = {\n  sortContentType,\n  getChildren,\n  getAttributes,\n  sortTags,\n  renderer,\n}\nexport default renderer\n","import * as React from 'react'\nimport { parse } from 'himalaya'\nimport renderer from './utils'\nimport { HtmlContentWrap } from './__styles__'\n\nexport interface HTMLRenderProps {\n  html: string\n  diffing?: boolean\n  className?: string\n  image?: React.ReactNode\n}\n\nexport const HTMLRender: React.FC<HTMLRenderProps> = ({\n  html,\n  diffing = false,\n  className = 'html-render',\n  image,\n}: HTMLRenderProps) => {\n  const jsonElements = parse(html)\n  return (\n    <div className={className}>\n      {image}\n      <HtmlContentWrap>{renderer(jsonElements, diffing)}</HtmlContentWrap>\n    </div>\n  )\n}\n","import React, { FC } from 'react'\nimport { Button, ButtonGroup, elMb11, FormLayout, InputGroup, InputWrapFull } from '@reapit/elements'\nimport { ResendAppRevisionConsentModel } from '@reapit/foundations-ts-definitions'\nimport { object, string } from 'yup'\nimport { SendFunction } from '@reapit/use-reapit-data'\nimport { emailRegex } from '@reapit/utils-common'\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\ninterface ResendConsentModalProps {\n  email?: string\n  recipient?: string\n  resendEmail: SendFunction<ResendAppRevisionConsentModel, boolean>\n  closeModal: () => void\n}\n\ninterface ResendConsentForm {\n  recipient: string\n}\n\nexport const validationSchema = object().shape({\n  recipient: string().trim().required('Required').matches(emailRegex, 'Must be a valid email address'),\n})\n\nexport const handleResendEmail =\n  (resendEmail: SendFunction<ResendAppRevisionConsentModel, boolean>, email: string) => (values: ResendConsentForm) => {\n    resendEmail({\n      ...values,\n      actionedBy: email,\n    })\n  }\n\nexport const ResendConsentModal: FC<ResendConsentModalProps> = ({ email, closeModal, resendEmail, recipient }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<ResendConsentForm>({\n    resolver: yupResolver(validationSchema),\n    defaultValues: {\n      recipient,\n    },\n  })\n\n  return email ? (\n    <form onSubmit={handleSubmit(handleResendEmail(resendEmail, email))}>\n      <FormLayout className={elMb11}>\n        <InputWrapFull>\n          <InputGroup\n            {...register('recipient')}\n            label=\"Consent Recipient\"\n            placeholder=\"Email of the recipient\"\n            errorMessage={errors?.recipient?.message}\n            icon={errors?.recipient?.message ? 'asterisk' : null}\n            intent=\"danger\"\n          />\n        </InputWrapFull>\n      </FormLayout>\n      <ButtonGroup alignment=\"right\">\n        <Button onClick={closeModal}>Cancel</Button>\n        <Button intent=\"primary\" type=\"submit\">\n          Confirm\n        </Button>\n      </ButtonGroup>\n    </form>\n  ) : null\n}\n\nexport default ResendConsentModal\n","import React, { Dispatch, FC, SetStateAction, useEffect, useState } from 'react'\nimport {\n  Button,\n  ButtonGroup,\n  elMb11,\n  elMt5,\n  Loader,\n  PersistentNotification,\n  Subtitle,\n  Table,\n  useModal,\n} from '@reapit/elements'\nimport {\n  SendFunction,\n  useReapitGet,\n  useReapitUpdate,\n  GetActionNames,\n  getActions,\n  UpdateActionNames,\n  updateActions,\n} from '@reapit/use-reapit-data'\nimport { reapitConnectBrowserSession } from '../../core/connect-session'\nimport {\n  AppDetailModel,\n  AppRevisionConsentModel,\n  AppRevisionModel,\n  ApprovalModel,\n  CreateAppRevisionConsentsModel,\n  InstallationModelPagedResult,\n  ResendAppRevisionConsentModel,\n} from '@reapit/foundations-ts-definitions'\nimport dayjs from 'dayjs'\nimport { useReapitConnect } from '@reapit/connect-session'\nimport ResendConsentModal from './resend-consent-modal'\nimport { usePermissionsState } from '../../core/use-permissions-state'\n\nexport interface ConsentsProps {\n  approval: ApprovalModel | null\n}\n\nexport const handleSetConsentId =\n  (\n    setConsentId: Dispatch<SetStateAction<string | null>>,\n    setSelectedConsent: (consent?: AppRevisionConsentModel) => void,\n    consentId?: string,\n  ) =>\n  () => {\n    if (consentId) {\n      setConsentId(consentId)\n    }\n    setSelectedConsent(undefined)\n  }\n\nexport const handleSendConstents =\n  (\n    createConsentEmails: SendFunction<CreateAppRevisionConsentsModel, boolean>,\n    appConsentsRefresh: () => void,\n    developerEmail?: string,\n  ) =>\n  async () => {\n    const response = await createConsentEmails({ actionedBy: developerEmail })\n\n    if (response) {\n      appConsentsRefresh()\n    }\n  }\n\nexport const handleSetResendConsents =\n  (\n    setSelectedConsent: Dispatch<SetStateAction<AppRevisionConsentModel | null>>,\n    consent: AppRevisionConsentModel | null,\n    openModal: () => void,\n  ) =>\n  () => {\n    if (consent) {\n      setSelectedConsent(consent)\n      openModal()\n    }\n  }\n\nexport const handleCloseModal =\n  (\n    setSelectedConsent: Dispatch<SetStateAction<AppRevisionConsentModel | null>>,\n    closeModal: () => void,\n    emailResent?: boolean,\n  ) =>\n  () => {\n    if (emailResent) {\n      setSelectedConsent(null)\n      closeModal()\n    }\n  }\n\nexport const AppConsents: FC<ConsentsProps> = ({ approval }) => {\n  const { connectSession } = useReapitConnect(reapitConnectBrowserSession)\n  const { hasReadAccess } = usePermissionsState()\n  const [selectedConsent, setSelectedConsent] = useState<AppRevisionConsentModel | null>(null)\n  const { Modal, openModal, closeModal } = useModal()\n  const email = connectSession?.loginIdentity.email\n  const appId = approval?.appId\n  const revisionId = approval?.appRevisionId\n  const consentId = selectedConsent?.id\n\n  const [appDetail] = useReapitGet<AppDetailModel>({\n    reapitConnectBrowserSession,\n    action: getActions[GetActionNames.getAppById],\n    uriParams: {\n      appId,\n    },\n    fetchWhenTrue: [appId],\n  })\n\n  const [appRevision] = useReapitGet<AppRevisionModel>({\n    reapitConnectBrowserSession,\n    action: getActions[GetActionNames.getRevisionById],\n    uriParams: {\n      revisionId,\n      appId,\n    },\n    fetchWhenTrue: [revisionId, appId],\n  })\n\n  const developerId = appDetail?.developerId\n  const name = appDetail?.name\n  const pendingRevisions = appDetail?.pendingRevisions\n  const isListed = appRevision?.isListed\n\n  const [appConsents, appConsentsLoading, , appConsentsRefresh] = useReapitGet<AppRevisionConsentModel[]>({\n    reapitConnectBrowserSession,\n    action: getActions[GetActionNames.getRevisionConsents],\n    uriParams: {\n      appId,\n      revisionId,\n    },\n    fetchWhenTrue: [appId, revisionId, pendingRevisions, isListed],\n  })\n\n  const [, , createConsentEmails] = useReapitUpdate<CreateAppRevisionConsentsModel, boolean>({\n    reapitConnectBrowserSession,\n    action: updateActions[UpdateActionNames.createConsentEmails],\n    method: 'POST',\n    uriParams: {\n      appId,\n      revisionId,\n    },\n  })\n\n  const [installations] = useReapitGet<InstallationModelPagedResult>({\n    reapitConnectBrowserSession,\n    action: getActions[GetActionNames.getInstallations],\n    queryParams: {\n      appId,\n      pageNumber: 1,\n      pageSize: 999,\n      isInstalled: true,\n      developerId,\n    },\n    fetchWhenTrue: [developerId],\n  })\n\n  const [, , resendEmail, emailResent] = useReapitUpdate<ResendAppRevisionConsentModel, boolean>({\n    reapitConnectBrowserSession,\n    action: updateActions[UpdateActionNames.resendConsentEmail],\n    method: 'POST',\n    uriParams: {\n      appId,\n      revisionId,\n      consentId,\n    },\n  })\n\n  useEffect(handleCloseModal(setSelectedConsent, closeModal, emailResent), [emailResent])\n\n  if (!approval) return null\n\n  return (\n    <>\n      <Subtitle className={elMt5}>{name} Consents</Subtitle>\n      {appConsentsLoading ? (\n        <Loader />\n      ) : appConsents?.length ? (\n        <>\n          <Table\n            numberColumns={6}\n            rows={appConsents.map((consent) => ({\n              cells: [\n                {\n                  label: 'Client',\n                  value: installations?.data?.find((installation) => installation.id === consent.installationId)\n                    ?.customerName,\n                  icon: 'property',\n                  cellHasDarkText: true,\n                  narrowTable: {\n                    showLabel: true,\n                  },\n                },\n                {\n                  label: 'Email',\n                  value: consent.installedBy,\n                  narrowTable: {\n                    showLabel: true,\n                  },\n                },\n                {\n                  label: 'Date Sent',\n                  value: dayjs(consent.sentDate).format('DD/MM/YYYY HH:mm'),\n                  narrowTable: {\n                    showLabel: true,\n                  },\n                },\n                {\n                  label: 'Status',\n                  value: `${consent.status?.charAt(0).toUpperCase()}${consent.status?.slice(1)}`,\n                  narrowTable: {\n                    showLabel: true,\n                  },\n                },\n                {\n                  label: 'Date Accepted',\n                  value: consent.approvalDate ? dayjs(consent.approvalDate).format('DD/MM/YYYY HH:mm') : '-',\n                  narrowTable: {\n                    showLabel: true,\n                  },\n                },\n              ],\n              ctaContent: {\n                headerContent: 'Resend Email',\n                icon: hasReadAccess ? undefined : 'email',\n                onClick: hasReadAccess ? undefined : handleSetResendConsents(setSelectedConsent, consent, openModal),\n              },\n            }))}\n          />\n          <Modal title=\"Resent Consents For Client\">\n            <ResendConsentModal\n              resendEmail={resendEmail}\n              closeModal={closeModal}\n              email={email}\n              recipient={selectedConsent?.installedBy}\n            />\n          </Modal>\n        </>\n      ) : appDetail && appRevision ? (\n        <>\n          <div>\n            <PersistentNotification className={elMb11} intent=\"primary\" isExpanded isFullWidth isInline>\n              No record of any consents for this app - you can send these from the link below.\n            </PersistentNotification>\n          </div>\n          <ButtonGroup alignment=\"center\">\n            <Button onClick={handleSendConstents(createConsentEmails, appConsentsRefresh, email)} intent=\"primary\">\n              Send Requests\n            </Button>\n          </ButtonGroup>\n        </>\n      ) : null}\n    </>\n  )\n}\n","import { css } from '@linaria/core'\n\nexport const diffViewerContainer = css`\n  background-color: var(--color-grey-lightest);\n  border: 1px solid var(--color-grey-lightest);\n  font-size: var(--font-size-default);\n  border-radius: 3px;\n  padding: 10px;\n  color: var(--color-black);\n\n  span {\n    overflow-wrap: break-word;\n  }\n`\n\nexport const greenBackground = css`\n  background-color: var(--intent-success-light);\n`\n\nexport const redBackground = css`\n  background-color: var(--intent-danger-light);\n`\n\nexport const checkboxContainer = css`\n  background-color: var(--color-grey-lightest);\n  border: 1px solid var(--color-grey-lightest);\n  border-radius: 3px;\n  padding: 10px;\n  color: var(--color-black);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nexport const checkboxWrap = css`\n  padding: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4px;\n  pointer-events: none;\n`\n\nexport const arow = css`\n  font-size: 18px;\n  color: var(--color-grey-dark);\n`\n\nexport const diffMediaContainer = css`\n  background-color: var(--color-grey-lightest);\n  border: 1px solid var(--color-grey-lightest);\n  border-radius: 3px;\n  padding: 10px;\n  color: var(--color-black);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nexport const image = css`\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n`\n\nexport const diffBlock = css`\n  border-radius: 4px;\n  width: 88px;\n  height: 88px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const iconBlock = css`\n  width: 90px;\n  height: 90px;\n`\n\nexport const iconImage = css`\n  width: 80px;\n  height: 80px;\n`\n\nexport const mediaBlock = css`\n  width: 150px;\n  height: 210px;\n`\n\nexport const mediaImage = css`\n  width: 140px;\n  height: 200px;\n`\n\nexport const diffHtmlContainer = css`\n  background-color: var(--color-grey-lightest);\n  border: 1px solid var(--color-grey-lightest);\n  border-radius: 3px;\n  padding: 10px;\n  color: var(--color-black);\n  display: flex;\n  align-items: center;\n\n  & a {\n    color: var(--intent-secondary);\n    font-weight: bold;\n  }\n\n  & ul,\n  & ol {\n    margin-top: 0;\n    margin-left: 0;\n    list-style-position: inside;\n\n    & li div {\n      display: inline-block;\n    }\n  }\n\n  & p {\n    margin: 1rem 0;\n  }\n`\n\nexport const arrow = css`\n  font-size: 18px;\n  color: var(--color-grey-dark);\n`\n\nexport const diffRenderBlock = css`\n  overflow-wrap: break-word;\n  border-radius: 4px;\n  width: 48%;\n`\n","import React, { FC } from 'react'\nimport { cx } from '@linaria/core'\nimport {\n  diffMediaContainer,\n  image,\n  greenBackground,\n  redBackground,\n  diffBlock,\n  arrow,\n  iconBlock,\n  iconImage,\n  mediaBlock,\n  mediaImage,\n} from './__styles__'\n\nexport interface DiffMediaProps {\n  currentMedia?: string\n  changedMedia?: string\n  type?: string\n}\n\nexport const DiffMedia: FC<DiffMediaProps> = ({ currentMedia, changedMedia, type }) => {\n  const blockStyle = type === 'icon' ? iconBlock : mediaBlock\n  const imageStyle = type === 'icon' ? iconImage : mediaImage\n  const isDiff = currentMedia !== changedMedia\n  return (\n    <div className={diffMediaContainer}>\n      <div className={cx(diffBlock, type === 'icon' ? iconBlock : mediaBlock, isDiff && redBackground)}>\n        <div className={cx(image, imageStyle)} style={{ backgroundImage: `url(\"${currentMedia}\")` }} />\n      </div>\n      <span className={arrow}>&#8594;</span>\n      <div className={cx(diffBlock, blockStyle, isDiff && greenBackground)}>\n        <div className={cx(image, imageStyle)} style={{ backgroundImage: `url(\"${changedMedia}\")` }} />\n      </div>\n    </div>\n  )\n}\n","import React, { FC } from 'react'\nimport { cx } from '@linaria/core'\nimport { checkboxContainer, checkboxWrap, greenBackground, redBackground, arow } from './__styles__'\n\nexport interface DiffCheckboxProps {\n  currentChecked: boolean\n  changedChecked: boolean\n  dataTest?: string\n}\n\nexport const DiffCheckbox: FC<DiffCheckboxProps> = ({ currentChecked, changedChecked, dataTest }) => {\n  const changed = currentChecked !== changedChecked\n\n  return (\n    <div className={checkboxContainer} data-test={dataTest || ''}>\n      <span className={cx(checkboxWrap, changed && redBackground)}>\n        <input type=\"checkbox\" checked={currentChecked} readOnly data-test=\"current\" />\n      </span>\n      {changed && <span className={arow}>&#8594;</span>}\n      {changed && (\n        <span className={cx(checkboxWrap, greenBackground)}>\n          <input type=\"checkbox\" checked={changedChecked} readOnly data-test=\"changed\" />\n        </span>\n      )}\n    </div>\n  )\n}\n","function Diff() {}\nDiff.prototype = {\n  diff: function diff(oldString, newString) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var callback = options.callback;\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    this.options = options;\n    var self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function () {\n          callback(undefined, value);\n        }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    } // Allow subclasses to massage the input prior to running\n\n\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n    var newLen = newString.length,\n        oldLen = oldString.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      // Identity per the equality and tokenizer\n      return done([{\n        value: this.join(newString),\n        count: newString.length\n      }]);\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath = void 0;\n\n        var addPath = bestPath[diagonalPath - 1],\n            removePath = bestPath[diagonalPath + 1],\n            _oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen,\n            canRemove = removePath && 0 <= _oldPos && _oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        _oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && _oldPos + 1 >= oldLen) {\n          return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced.\n\n\n    if (callback) {\n      (function exec() {\n        setTimeout(function () {\n          // This should not happen, but we want to be safe.\n\n          /* istanbul ignore next */\n          if (editLength > maxEditLength) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      })();\n    } else {\n      while (editLength <= maxEditLength) {\n        var ret = execEditLength();\n\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n  pushComponent: function pushComponent(components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n    var newLen = newString.length,\n        oldLen = oldString.length,\n        newPos = basePath.newPos,\n        oldPos = newPos - diagonalPath,\n        commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  equals: function equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n    }\n  },\n  removeEmpty: function removeEmpty(array) {\n    var ret = [];\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n\n    return ret;\n  },\n  castInput: function castInput(value) {\n    return value;\n  },\n  tokenize: function tokenize(value) {\n    return value.split('');\n  },\n  join: function join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, components, newString, oldString, useLongestToken) {\n  var componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        var value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function (value, i) {\n          var oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n\n      if (componentPos && components[componentPos - 1].added) {\n        var tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  } // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n\n\n  var lastComponent = components[componentLen - 1];\n\n  if (componentLen > 1 && typeof lastComponent.value === 'string' && (lastComponent.added || lastComponent.removed) && diff.equals('', lastComponent.value)) {\n    components[componentLen - 2].value += lastComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar characterDiff = new Diff();\nfunction diffChars(oldStr, newStr, options) {\n  return characterDiff.diff(oldStr, newStr, options);\n}\n\nfunction generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (var name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n\n  return defaults;\n}\n\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\n\nvar extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\nvar reWhitespace = /\\S/;\nvar wordDiff = new Diff();\n\nwordDiff.equals = function (left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n\n  return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n};\n\nwordDiff.tokenize = function (value) {\n  var tokens = value.split(/(\\s+|[()[\\]{}'\"]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n  for (var i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nfunction diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {\n    ignoreWhitespace: true\n  });\n  return wordDiff.diff(oldStr, newStr, options);\n}\nfunction diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nvar lineDiff = new Diff();\n\nlineDiff.tokenize = function (value) {\n  var retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  } // Merge the content and line separators into single tokens\n\n\n  for (var i = 0; i < linesAndNewlines.length; i++) {\n    var line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nfunction diffLines(oldStr, newStr, callback) {\n  return lineDiff.diff(oldStr, newStr, callback);\n}\nfunction diffTrimmedLines(oldStr, newStr, callback) {\n  var options = generateOptions(callback, {\n    ignoreWhitespace: true\n  });\n  return lineDiff.diff(oldStr, newStr, options);\n}\n\nvar sentenceDiff = new Diff();\n\nsentenceDiff.tokenize = function (value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nfunction diffSentences(oldStr, newStr, callback) {\n  return sentenceDiff.diff(oldStr, newStr, callback);\n}\n\nvar cssDiff = new Diff();\n\ncssDiff.tokenize = function (value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nfunction diffCss(oldStr, newStr, callback) {\n  return cssDiff.diff(oldStr, newStr, callback);\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar objectPrototypeToString = Object.prototype.toString;\nvar jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\njsonDiff.useLongestToken = true;\njsonDiff.tokenize = lineDiff.tokenize;\n\njsonDiff.castInput = function (value) {\n  var _this$options = this.options,\n      undefinedReplacement = _this$options.undefinedReplacement,\n      _this$options$stringi = _this$options.stringifyReplacer,\n      stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\n    return typeof v === 'undefined' ? undefinedReplacement : v;\n  } : _this$options$stringi;\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\n\njsonDiff.equals = function (left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nfunction diffJson(oldObj, newObj, options) {\n  return jsonDiff.diff(oldObj, newObj, options);\n} // This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\nfunction canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  var i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  var canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (_typeof(obj) === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n\n    var sortedKeys = [],\n        _key;\n\n    for (_key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(_key)) {\n        sortedKeys.push(_key);\n      }\n    }\n\n    sortedKeys.sort();\n\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      _key = sortedKeys[i];\n      canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n\n  return canonicalizedObj;\n}\n\nvar arrayDiff = new Diff();\n\narrayDiff.tokenize = function (value) {\n  return value.slice();\n};\n\narrayDiff.join = arrayDiff.removeEmpty = function (value) {\n  return value;\n};\n\nfunction diffArrays(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nfunction parsePatch(uniDiff) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    var index = {};\n    list.push(index); // Parse diff metadata\n\n    while (i < diffstr.length) {\n      var line = diffstr[i]; // File header found, end parsing diff metadata\n\n      if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n        break;\n      } // Diff index\n\n\n      var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    } // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n\n\n    parseFileHeader(index);\n    parseFileHeader(index); // Parse hunks\n\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      var _line = diffstr[i];\n\n      if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n        break;\n      } else if (/^@@/.test(_line)) {\n        index.hunks.push(parseHunk());\n      } else if (_line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n      } else {\n        i++;\n      }\n    }\n  } // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n\n\n  function parseFileHeader(index) {\n    var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n    if (fileHeader) {\n      var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      var data = fileHeader[2].split('\\t', 2);\n      var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n      if (/^\".*\"$/.test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n      i++;\n    }\n  } // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n\n\n  function parseHunk() {\n    var chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n    var hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: +chunkHeader[2] || 1,\n      newStart: +chunkHeader[3],\n      newLines: +chunkHeader[4] || 1,\n      lines: [],\n      linedelimiters: []\n    };\n    var addCount = 0,\n        removeCount = 0;\n\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n        break;\n      }\n\n      var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    } // Handle the empty block count case\n\n\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    } // Perform optional sanity checking\n\n\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n\n// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nfunction distanceIterator (start, minLine, maxLine) {\n  var wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      } // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n\n\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      } // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n\n\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    } // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n\n  };\n}\n\nfunction applyPatch(source, uniDiff) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  } // Apply the diff to the input\n\n\n  var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n      compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\n    return line === patchContent;\n  },\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n      removeEOFNL,\n      addEOFNL;\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n\n\n  function hunkFits(hunk, toPos) {\n    for (var j = 0; j < hunk.lines.length; j++) {\n      var line = hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line;\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n\n        toPos++;\n      }\n    }\n\n    return true;\n  } // Search best fit offsets for each hunk based on the previous ones\n\n\n  for (var i = 0; i < hunks.length; i++) {\n    var hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n    var iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    } // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n\n\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  } // Apply patch hunks\n\n\n  var diffOffset = 0;\n\n  for (var _i = 0; _i < hunks.length; _i++) {\n    var _hunk = hunks[_i],\n        _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n    diffOffset += _hunk.newLines - _hunk.oldLines;\n\n    if (_toPos < 0) {\n      // Creating a new file\n      _toPos = 0;\n    }\n\n    for (var j = 0; j < _hunk.lines.length; j++) {\n      var line = _hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line,\n          delimiter = _hunk.linedelimiters[j];\n\n      if (operation === ' ') {\n        _toPos++;\n      } else if (operation === '-') {\n        lines.splice(_toPos, 1);\n        delimiters.splice(_toPos, 1);\n        /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(_toPos, 0, content);\n        delimiters.splice(_toPos, 0, delimiter);\n        _toPos++;\n      } else if (operation === '\\\\') {\n        var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  } // Handle EOFNL insertion/removal\n\n\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n\n  for (var _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n\n  return lines.join('');\n} // Wrapper that supports multiple file patches via callbacks.\n\nfunction applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  var currentIndex = 0;\n\n  function processIndex() {\n    var index = uniDiff[currentIndex++];\n\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function (err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      var updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function (err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n\n  processIndex();\n}\n\nfunction structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  var diff = diffLines(oldStr, newStr, options);\n  diff.push({\n    value: '',\n    lines: []\n  }); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function (entry) {\n      return ' ' + entry;\n    });\n  }\n\n  var hunks = [];\n  var oldRangeStart = 0,\n      newRangeStart = 0,\n      curRange = [],\n      oldLine = 1,\n      newLine = 1;\n\n  var _loop = function _loop(i) {\n    var current = diff[i],\n        lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      var _curRange;\n\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        var prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      } // Output our changes\n\n\n      (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\n        return (current.added ? '+' : '-') + entry;\n      }))); // Track the updated file position\n\n\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          var _curRange2;\n\n          // Overlapping\n          (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\n        } else {\n          var _curRange3;\n\n          // end the range and output\n          var contextSize = Math.min(lines.length, options.context);\n\n          (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\n\n          var hunk = {\n            oldStart: oldRangeStart,\n            oldLines: oldLine - oldRangeStart + contextSize,\n            newStart: newRangeStart,\n            newLines: newLine - newRangeStart + contextSize,\n            lines: curRange\n          };\n\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            var oldEOFNewline = /\\n$/.test(oldStr);\n            var newEOFNewline = /\\n$/.test(newStr);\n            var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n            if (!oldEOFNewline && noNlBeforeAdds) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n\n            if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n\n          hunks.push(hunk);\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  };\n\n  for (var i = 0; i < diff.length; i++) {\n    _loop(i);\n  }\n\n  return {\n    oldFileName: oldFileName,\n    newFileName: newFileName,\n    oldHeader: oldHeader,\n    newHeader: newHeader,\n    hunks: hunks\n  };\n}\nfunction createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  var diff = structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options);\n  var ret = [];\n\n  if (oldFileName == newFileName) {\n    ret.push('Index: ' + oldFileName);\n  }\n\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (var i = 0; i < diff.hunks.length; i++) {\n    var hunk = diff.hunks[i];\n    ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\nfunction createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n\nfunction arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\nfunction arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (var i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction calcLineCount(hunk) {\n  var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\n      oldLines = _calcOldNewLineCount.oldLines,\n      newLines = _calcOldNewLineCount.newLines;\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\nfunction merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n  var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n  var mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    var mineCurrent = mine.hunks[mineIndex] || {\n      oldStart: Infinity\n    },\n        theirsCurrent = theirs.hunks[theirsIndex] || {\n      oldStart: Infinity\n    };\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      var mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {\n      mine: mine,\n      theirs: theirs\n    };\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart,\n    oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset,\n    newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  var mine = {\n    offset: mineOffset,\n    lines: mineLines,\n    index: 0\n  },\n      their = {\n    offset: theirOffset,\n    lines: theirLines,\n    index: 0\n  }; // Handle any leading content\n\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    var mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      var _hunk$lines;\n\n      // Mine inserted\n      (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      var _hunk$lines2;\n\n      // Theirs inserted\n      (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  } // Now push anything that may be remaining\n\n\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      var _hunk$lines3;\n\n      (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\n\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      var _hunk$lines4;\n\n      (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\n\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    var _hunk$lines5;\n\n    (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\n\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n\n  if (theirChanges.merged) {\n    var _hunk$lines6;\n\n    (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\n\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  var ret = [],\n      operation = state.lines[state.index][0];\n\n  while (state.index < state.lines.length) {\n    var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\n\nfunction collectContext(state, matchChanges) {\n  var changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n\n  while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n    var change = state.lines[state.index],\n        match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n    merged.push(match);\n    matchIndex++; // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged: merged,\n    changes: changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function (prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\n\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (var i = 0; i < delta; i++) {\n    var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  var oldLines = 0;\n  var newLines = 0;\n  lines.forEach(function (line) {\n    if (typeof line !== 'string') {\n      var myCount = calcOldNewLineCount(line.mine);\n      var theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n  return {\n    oldLines: oldLines,\n    newLines: newLines\n  };\n}\n\n// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nfunction convertChangesToDMP(changes) {\n  var ret = [],\n      change,\n      operation;\n\n  for (var i = 0; i < changes.length; i++) {\n    change = changes[i];\n\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n\n  return ret;\n}\n\nfunction convertChangesToXML(changes) {\n  var ret = [];\n\n  for (var i = 0; i < changes.length; i++) {\n    var change = changes[i];\n\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  var n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n  return n;\n}\n\n/* See LICENSE file for terms of use */\n\nexport { Diff, diffChars, diffWords, diffWordsWithSpace, diffLines, diffTrimmedLines, diffSentences, diffCss, diffJson, diffArrays, structuredPatch, createTwoFilesPatch, createPatch, applyPatch, applyPatches, parsePatch, merge, convertChangesToDMP, convertChangesToXML, canonicalize };\n","import React, { FC } from 'react'\nimport * as jsdiff from 'diff'\nimport { diffViewerContainer, greenBackground, redBackground } from './__styles__'\nimport { cx } from '@linaria/core'\n\nexport type DiffType = 'chars' | 'words' | 'lines' | 'wordsWithSpace'\n\nexport interface DiffViewerProps {\n  currentString: string\n  changedString: string\n  type?: DiffType\n}\n\nconst diffTypes = {\n  chars: jsdiff.diffChars,\n  words: jsdiff.diffWords,\n  lines: jsdiff.diffLines,\n  wordsWithSpace: jsdiff.diffWordsWithSpace,\n}\n\nexport const DiffViewer: FC<DiffViewerProps> = ({ currentString, changedString, type = 'words' }) => {\n  const result = diffTypes[type](currentString, changedString).map((part, index) => {\n    return (\n      <span key={`${part.value}-${index}`} className={cx(part.added && greenBackground, part.removed && redBackground)}>\n        {part.value}\n      </span>\n    )\n  })\n  return <div className={diffViewerContainer}>{result}</div>\n}\n","import React, { FC } from 'react'\nimport { cx } from '@linaria/core'\nimport { diffHtmlContainer, diffRenderBlock, redBackground, greenBackground, arrow } from './__styles__'\nimport { HTMLRender } from '@reapit/utils-react'\n\nexport interface DiffRenderHTMLProps {\n  currentString?: string\n  changedString?: string\n}\n\nexport const DiffRenderHTML: FC<DiffRenderHTMLProps> = ({ currentString, changedString }) => {\n  const isDiff = currentString !== changedString\n  return (\n    <div className={diffHtmlContainer}>\n      <HTMLRender className={cx(diffRenderBlock, isDiff && redBackground)} html={currentString || ''} />\n      <span className={arrow}>&#8594;</span>\n      <HTMLRender className={cx(diffRenderBlock, isDiff && greenBackground)} html={changedString || ''} />\n    </div>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport {\n  AppRevisionModel,\n  MediaModel,\n  ScopeModel,\n  AppDetailModel,\n  DesktopIntegrationTypeModel,\n  DesktopIntegrationTypeModelPagedResult,\n  ApprovalModel,\n  ApproveModel,\n  RejectRevisionModel,\n  CreateAppRevisionConsentsModel,\n} from '@reapit/foundations-ts-definitions'\nimport { DiffMedia } from './diff-media'\nimport { DiffCheckbox } from './diff-checkbox'\nimport { DiffViewer } from './diff-viewer'\nimport { DiffRenderHTML } from './diff-render-html'\nimport {\n  SendFunction,\n  useReapitGet,\n  useReapitUpdate,\n  GetActionNames,\n  getActions,\n  UpdateActionNames,\n  updateActions,\n} from '@reapit/use-reapit-data'\nimport { reapitConnectBrowserSession } from '../../core/connect-session'\nimport {\n  BodyText,\n  Button,\n  ButtonGroup,\n  elMb11,\n  elMb5,\n  elMt5,\n  FormLayout,\n  InputGroup,\n  InputWrapFull,\n  Loader,\n  PersistentNotification,\n  Subtitle,\n  useModal,\n} from '@reapit/elements'\nimport { LoginIdentity, useReapitConnect } from '@reapit/connect-session'\nimport dayjs from 'dayjs'\nimport { object, string } from 'yup'\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { usePermissionsState } from '../../core/use-permissions-state'\n\nexport type AppRevisionComparisonProps = {\n  approval: ApprovalModel | null\n  refreshApprovals: () => void\n}\n\ninterface RejectRevisionForm {\n  rejectionReason: string\n}\n\nexport type DiffMediaModel = {\n  currentMedia?: string\n  changedMedia?: string\n  order: number\n  type: string\n}\n\nconst diffStringList: { [k in keyof AppRevisionModel]: string } = {\n  name: 'Name',\n  homePage: 'Home page',\n  launchUri: 'Launch URI',\n  supportEmail: 'Support Email',\n  telephone: 'Telephone',\n  summary: 'Summary',\n  description: 'Description',\n  redirectUris: 'Redirect URIs',\n  signoutUris: 'Signout URIs',\n  limitToClientIds: 'Private Apps',\n  desktopIntegrationTypeIds: 'Integration Type',\n  products: 'Products',\n  privacyPolicyUrl: 'Privacy Policy',\n  termsAndConditionsUrl: 'Terms & Conditions',\n  pricingUrl: 'Pricing Info',\n}\n\nexport const isAppearInScope = (nameNeedToFind: string | undefined, scopes: ScopeModel[] = []): boolean => {\n  if (!nameNeedToFind || !scopes?.length) {\n    return false\n  }\n  const result = scopes.find((item: ScopeModel) => {\n    return item.name === nameNeedToFind\n  })\n  return !!result\n}\n\nexport const renderCheckboxesDiff = ({\n  scopes,\n  appScopes,\n  revisionScopes,\n}: {\n  scopes: ScopeModel[]\n  appScopes: ScopeModel[] | undefined\n  revisionScopes: ScopeModel[] | undefined\n}) => {\n  return scopes.map((scope: ScopeModel) => {\n    const isCheckedInAppDetail = isAppearInScope(scope.name, appScopes)\n    const isCheckedInRevision = isAppearInScope(scope.name, revisionScopes)\n    return (\n      <div className={elMb5} key={scope.name}>\n        <BodyText hasGreyText>{scope.description}</BodyText>\n        <DiffCheckbox currentChecked={isCheckedInAppDetail} changedChecked={isCheckedInRevision} />\n      </div>\n    )\n  })\n}\n\nexport const getChangedMediaList = ({ app, revision }): DiffMediaModel[] => {\n  const { media: revisionMedia } = revision\n  const { media: appMedia } = app\n\n  if (!revisionMedia || !appMedia) {\n    return [\n      {\n        order: 0,\n        type: 'media',\n      },\n    ]\n  }\n\n  // Check the longest array to compare\n  const isNewMediaMoreItemThanOldOne = revisionMedia.length >= appMedia.length\n  if (isNewMediaMoreItemThanOldOne) {\n    return revisionMedia.map((revisionMedia: MediaModel, index: number) => ({\n      changedMedia: revisionMedia?.uri,\n      currentMedia: appMedia[index]?.uri,\n      order: revisionMedia?.order || 0,\n      type: revisionMedia?.type || '',\n    }))\n  }\n\n  return appMedia.map((currentMedia: MediaModel, index: number) => ({\n    changedMedia: revisionMedia[index]?.uri,\n    currentMedia: currentMedia?.uri,\n    order: currentMedia?.order || 0,\n    type: currentMedia?.type || 'media',\n  }))\n}\n\nexport const mapIntegrationIdArrayToNameArray = (\n  desktopIntegrationTypeIds?: string[],\n  desktopIntegrationTypesArray?: DesktopIntegrationTypeModel[],\n): string[] => {\n  if (!desktopIntegrationTypeIds || !desktopIntegrationTypesArray) {\n    return []\n  }\n  const result = desktopIntegrationTypeIds.map((id: string) => {\n    const matchedIntegration = desktopIntegrationTypesArray.find(\n      (integration: DesktopIntegrationTypeModel) => integration.id === id,\n    )\n    return matchedIntegration?.name ?? ''\n  })\n  return result.filter((r) => r)\n}\n\nexport type RenderDiffContentParams = {\n  key: string\n  revision: AppRevisionModel\n  app: AppDetailModel\n  desktopIntegrationTypes: DesktopIntegrationTypeModelPagedResult\n}\n\nexport const renderCategoriesDiff = (app: AppDetailModel, revision: AppRevisionModel) => {\n  const currentString = app.categories?.map((category) => category.name).join(', ') ?? ''\n  const changedString = revision.categories?.map((category) => category.name).join(', ') ?? ''\n\n  return (\n    <div className={elMb5}>\n      <BodyText hasGreyText>Categories</BodyText>\n      <DiffViewer currentString={currentString} changedString={changedString} type=\"words\" />\n    </div>\n  )\n}\n\nexport const renderDiffContent = ({ key, revision, app, desktopIntegrationTypes }: RenderDiffContentParams) => {\n  if (key === 'description') {\n    return <DiffRenderHTML currentString={app.description || ''} changedString={revision.description || ''} />\n  }\n  if (key === 'desktopIntegrationTypeIds') {\n    const oldIntegrationTypeArray = mapIntegrationIdArrayToNameArray(\n      app.desktopIntegrationTypeIds,\n      desktopIntegrationTypes.data,\n    )\n    const newIntegrationTypeArray = mapIntegrationIdArrayToNameArray(\n      revision.desktopIntegrationTypeIds,\n      desktopIntegrationTypes.data,\n    )\n    const sortedOldArray = [...oldIntegrationTypeArray].sort((a, b) => a.localeCompare(b))\n    const sortedNewArray = [...newIntegrationTypeArray].sort((a, b) => a.localeCompare(b))\n    return (\n      <DiffViewer\n        currentString={sortedOldArray.join(', ')}\n        changedString={sortedNewArray.join(', ')}\n        type=\"wordsWithSpace\"\n      />\n    )\n  }\n  if (['redirectUris', 'signoutUris', 'limitToClientIds', 'desktopIntegrationTypeIds', 'products'].includes(key)) {\n    const currentString = Array.isArray(app[key]) ? app[key].join(' ') : ''\n    const changedString = Array.isArray(revision[key]) ? revision[key].join(' ') : ''\n    return <DiffViewer currentString={currentString} changedString={changedString} type=\"words\" />\n  }\n  return <DiffViewer currentString={app[key] || ''} changedString={revision[key] || ''} type=\"words\" />\n}\n\nexport const validationSchema = object().shape({\n  rejectionReason: string().trim().required('Required'),\n})\n\nexport const handleApproveRevision =\n  (approveRevision: SendFunction<ApproveModel, boolean>, closeModal: () => void, loginIdentity?: LoginIdentity) =>\n  () => {\n    const email = loginIdentity?.email\n    const name = loginIdentity?.name\n\n    if (email && name) {\n      approveRevision({\n        email,\n        name,\n        publicListedDate: dayjs().format('YYYY-MM-DDTHH:mm:ss'),\n      })\n      closeModal()\n    }\n  }\n\nexport const handleRejectRevision =\n  (rejectRevision: SendFunction<RejectRevisionModel, boolean>, closeModal: () => void, loginIdentity?: LoginIdentity) =>\n  (values: RejectRevisionForm) => {\n    const email = loginIdentity?.email\n    const name = loginIdentity?.name\n\n    if (email && name) {\n      rejectRevision({ email, name, rejectionReason: values.rejectionReason })\n      closeModal()\n    }\n  }\n\nexport const handleRefreshApprovals = (refreshApprovals: () => void, shouldRefresh: boolean) => () => {\n  if (shouldRefresh) {\n    refreshApprovals()\n  }\n}\n\nexport const handleSendConstents =\n  (createConsentEmails: SendFunction<CreateAppRevisionConsentsModel, boolean>, email?: string) => () => {\n    if (email) {\n      createConsentEmails({ actionedBy: email })\n    }\n  }\n\nexport const AppRevisionComparison: FC<AppRevisionComparisonProps> = ({ approval, refreshApprovals }) => {\n  const { connectSession } = useReapitConnect(reapitConnectBrowserSession)\n  const { hasReadAccess } = usePermissionsState()\n  const { Modal: ApproveModal, openModal: openApproveModal, closeModal: closeApproveModal } = useModal()\n  const { Modal: DeclineModal, openModal: openDeclineModal, closeModal: closeDeclineModal } = useModal()\n  const appId = approval?.appId\n  const revisionId = approval?.appRevisionId\n  const email = connectSession?.loginIdentity.email\n\n  const [app, appLoading] = useReapitGet<AppDetailModel>({\n    reapitConnectBrowserSession,\n    action: getActions[GetActionNames.getAppById],\n    uriParams: {\n      appId,\n    },\n    fetchWhenTrue: [appId],\n  })\n\n  const [revision, revisionLoading] = useReapitGet<AppRevisionModel>({\n    reapitConnectBrowserSession,\n    action: getActions[GetActionNames.getRevisionById],\n    uriParams: {\n      revisionId,\n      appId,\n    },\n    fetchWhenTrue: [revisionId, appId],\n  })\n\n  const [desktopIntegrationTypes, desktopTypesLoading] = useReapitGet<DesktopIntegrationTypeModelPagedResult>({\n    reapitConnectBrowserSession,\n    action: getActions[GetActionNames.getDesktopIntegrationTypes],\n  })\n\n  const [scopes, scopesLoading] = useReapitGet<ScopeModel[]>({\n    reapitConnectBrowserSession,\n    action: getActions[GetActionNames.getAppPermissions],\n  })\n\n  const [, , approveRevision, revisionApproved] = useReapitUpdate<ApproveModel, boolean>({\n    reapitConnectBrowserSession,\n    action: updateActions[UpdateActionNames.approveRevision],\n    method: 'POST',\n    uriParams: {\n      appId,\n      revisionId,\n    },\n  })\n\n  const [, , rejectRevision, revisionRejected] = useReapitUpdate<RejectRevisionModel, boolean>({\n    reapitConnectBrowserSession,\n    action: updateActions[UpdateActionNames.rejectRevision],\n    method: 'POST',\n    uriParams: {\n      appId,\n      revisionId,\n    },\n  })\n\n  const [, , createConsentEmails] = useReapitUpdate<CreateAppRevisionConsentsModel, boolean>({\n    reapitConnectBrowserSession,\n    action: updateActions[UpdateActionNames.createConsentEmails],\n    method: 'POST',\n    uriParams: {\n      appId,\n      revisionId,\n    },\n  })\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<RejectRevisionForm>({\n    resolver: yupResolver(validationSchema),\n    defaultValues: {\n      rejectionReason: '',\n    },\n  })\n\n  useEffect(handleRefreshApprovals(refreshApprovals, Boolean(revisionApproved || revisionRejected)), [\n    revisionApproved,\n    revisionRejected,\n  ])\n\n  if (appLoading || revisionLoading || desktopTypesLoading || scopesLoading) {\n    return <Loader />\n  }\n\n  if (!approval || !app || !revision || !desktopIntegrationTypes || !scopes) {\n    return (\n      <PersistentNotification className={elMb11} intent=\"primary\" isExpanded isFullWidth isInline>\n        Data not returned to complete this request\n      </PersistentNotification>\n    )\n  }\n\n  return (\n    <div className={elMt5}>\n      <Subtitle>{app.name} Revision Diff</Subtitle>\n      {Object.keys(diffStringList).map((key) => {\n        return (\n          <div className={elMb5} key={key}>\n            <BodyText hasGreyText>{diffStringList[key]}</BodyText>\n            {renderDiffContent({ key, app, desktopIntegrationTypes, revision })}\n          </div>\n        )\n      })}\n      {renderCategoriesDiff(app, revision)}\n      {renderCheckboxesDiff({ scopes, appScopes: app.scopes, revisionScopes: revision.scopes })}\n      <div className={elMb5}>\n        <BodyText hasGreyText>Is listed</BodyText>\n        <DiffCheckbox\n          currentChecked={Boolean(app.isListed)}\n          changedChecked={Boolean(revision.isListed)}\n          dataTest=\"revision-diff-isListed\"\n        />\n      </div>\n      <div className={elMb5}>\n        <BodyText hasGreyText>Is Free</BodyText>\n        <DiffCheckbox\n          currentChecked={Boolean(app.isFree)}\n          changedChecked={Boolean(revision.isFree)}\n          dataTest=\"revision-diff-isFree\"\n        />\n      </div>\n      <div className={elMb5}>\n        <BodyText hasGreyText>Is Integration</BodyText>\n        <DiffCheckbox\n          currentChecked={Boolean(app.isDirectApi)}\n          changedChecked={Boolean(revision.isDirectApi)}\n          dataTest=\"revision-diff-isDirectApi\"\n        />\n      </div>\n      <div className={elMb5}>\n        <BodyText hasGreyText>Is Delete Protected</BodyText>\n        <DiffCheckbox\n          currentChecked={Boolean(app.deletionProtection)}\n          changedChecked={Boolean(revision.deletionProtection)}\n          dataTest=\"revision-diff-deletion-protection\"\n        />\n      </div>\n      {getChangedMediaList({ app, revision }).map((media) => (\n        <div className={elMb5} key={media.order}>\n          <BodyText hasGreyText>\n            {media.type} {media.order > 0 && <span>{media.order}</span>}\n          </BodyText>\n          {media.type === 'video' ? (\n            <DiffViewer\n              currentString={media.currentMedia ?? ''}\n              changedString={media.changedMedia ?? ''}\n              type=\"words\"\n            />\n          ) : (\n            <DiffMedia changedMedia={media.changedMedia} currentMedia={media.currentMedia} type={media.type} />\n          )}\n        </div>\n      ))}\n      <ButtonGroup alignment=\"center\">\n        <Button onClick={openDeclineModal} disabled={hasReadAccess} intent=\"danger\">\n          Decline Revision\n        </Button>\n        <Button onClick={openApproveModal} disabled={hasReadAccess} intent=\"primary\">\n          Approve Revision\n        </Button>\n        <Button intent=\"primary\" onClick={handleSendConstents(createConsentEmails, email)} disabled={hasReadAccess}>\n          Send Consent Emails\n        </Button>\n      </ButtonGroup>\n      <ApproveModal title={`Approve ${app.name} Revision`}>\n        <BodyText>Are your sure you want to approve the revision for &lsquo;{app.name}&rsquo;?</BodyText>\n        <ButtonGroup alignment=\"center\">\n          <Button onClick={closeApproveModal}>Cancel</Button>\n          <Button\n            intent=\"primary\"\n            onClick={handleApproveRevision(approveRevision, closeApproveModal, connectSession?.loginIdentity)}\n          >\n            Approve\n          </Button>\n        </ButtonGroup>\n      </ApproveModal>\n      <DeclineModal title={`Decline ${app.name} Revision`}>\n        <BodyText>Are your sure you want to decline the revision for &lsquo;{app.name}&rsquo;?</BodyText>\n        <form\n          onSubmit={handleSubmit(\n            handleRejectRevision(rejectRevision, closeDeclineModal, connectSession?.loginIdentity),\n          )}\n        >\n          <FormLayout className={elMb11}>\n            <InputWrapFull>\n              <InputGroup\n                {...register('rejectionReason')}\n                label=\"Rejection Reason\"\n                errorMessage={errors?.rejectionReason?.message}\n                icon={errors?.rejectionReason?.message ? 'asterisk' : null}\n                intent=\"danger\"\n              />\n            </InputWrapFull>\n          </FormLayout>\n          <ButtonGroup alignment=\"center\">\n            <Button onClick={closeDeclineModal}>Cancel</Button>\n            <Button intent=\"danger\" type=\"submit\">\n              Decline\n            </Button>\n          </ButtonGroup>\n        </form>\n      </DeclineModal>\n    </div>\n  )\n}\n\nexport default AppRevisionComparison\n","import React, { Dispatch, FC, SetStateAction, useState } from 'react'\nimport { Pagination, Table, Button, Loader, PageContainer, Title, ButtonGroup, elMb11 } from '@reapit/elements'\nimport { ApprovalModel, ApprovalModelPagedResult } from '@reapit/foundations-ts-definitions'\nimport { AppConsents } from '../consents'\nimport { useReapitGet, GetActionNames, getActions } from '@reapit/use-reapit-data'\nimport { toLocalTime } from '@reapit/utils-common'\nimport { reapitConnectBrowserSession } from '../../core/connect-session'\nimport { openNewPage } from '../../utils/navigation'\nimport AppRevisionComparison from './app-revision-comparison'\nimport { usePermissionsState } from '../../core/use-permissions-state'\n\nexport const handleSetConsentApproval =\n  (\n    setConsentApproval: Dispatch<SetStateAction<ApprovalModel | null>>,\n    setDiffApproval: Dispatch<SetStateAction<ApprovalModel | null>>,\n    approval: ApprovalModel | null,\n  ) =>\n  () => {\n    if (approval) {\n      setDiffApproval(null)\n      setConsentApproval(approval)\n    }\n  }\n\nexport const handleSetDiffApproval =\n  (\n    setDiffApproval: Dispatch<SetStateAction<ApprovalModel | null>>,\n    setConsentApproval: Dispatch<SetStateAction<ApprovalModel | null>>,\n    approval: ApprovalModel | null,\n  ) =>\n  () => {\n    if (approval) {\n      setConsentApproval(null)\n      setDiffApproval(approval)\n    }\n  }\n\nexport const AdminApprovals: FC = () => {\n  const [pageNumber, setPageNumber] = useState<number>(1)\n  const [consentApproval, setConsentApproval] = useState<ApprovalModel | null>(null)\n  const [diffApproval, setDiffApproval] = useState<ApprovalModel | null>(null)\n  const { hasReadAccess } = usePermissionsState()\n\n  const [approvals, approvalsLoading, , refreshApprovals] = useReapitGet<ApprovalModelPagedResult>({\n    reapitConnectBrowserSession,\n    action: getActions[GetActionNames.getApprovals],\n    queryParams: { pageNumber, pageSize: 12 },\n  })\n\n  return (\n    <PageContainer>\n      <Title>App Revision Approvals</Title>\n      {approvalsLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Table\n            className={elMb11}\n            rows={approvals?.data?.map((approval) => {\n              const { description, created, appId, appRevisionId, createdBy } = approval\n              return {\n                cells: [\n                  {\n                    label: 'Description',\n                    value: description,\n                    cellHasDarkText: true,\n                    narrowTable: {\n                      showLabel: true,\n                    },\n                  },\n                  {\n                    label: 'Created By',\n                    value: createdBy,\n                    cellHasDarkText: true,\n                    narrowTable: {\n                      showLabel: true,\n                    },\n                  },\n                  {\n                    label: 'Created Date',\n                    value: created ? toLocalTime(created) : '-',\n                    narrowTable: {\n                      showLabel: true,\n                    },\n                  },\n                ],\n                expandableContent: {\n                  content: (\n                    <>\n                      <ButtonGroup alignment=\"center\">\n                        <Button intent=\"default\" onClick={openNewPage(`${process.env.appMarketUri}/apps/${appId}`)}>\n                          View in AppMarket\n                        </Button>\n                        <Button\n                          intent=\"default\"\n                          disabled={hasReadAccess}\n                          onClick={openNewPage(`${process.env.developerPortalUri}/apps/${appId}`)}\n                        >\n                          View in DevPortal\n                        </Button>\n                        <Button\n                          type=\"button\"\n                          intent=\"default\"\n                          onClick={handleSetDiffApproval(setDiffApproval, setConsentApproval, approval)}\n                        >\n                          View Revision\n                        </Button>\n                        <Button\n                          intent=\"default\"\n                          onClick={handleSetConsentApproval(setConsentApproval, setDiffApproval, approval)}\n                        >\n                          View Consents\n                        </Button>\n                      </ButtonGroup>\n                      {consentApproval && consentApproval?.appRevisionId === appRevisionId && (\n                        <AppConsents approval={consentApproval} />\n                      )}\n                      {diffApproval && diffApproval?.appRevisionId === appRevisionId && (\n                        <AppRevisionComparison approval={diffApproval} refreshApprovals={refreshApprovals} />\n                      )}\n                    </>\n                  ),\n                },\n              }\n            })}\n          />\n          <Pagination\n            callback={setPageNumber}\n            currentPage={pageNumber}\n            numberPages={Math.ceil((approvals?.totalCount ?? 1) / 12)}\n          />\n        </>\n      )}\n    </PageContainer>\n  )\n}\n\nexport default AdminApprovals\n"],"names":["HtmlContentWrap","styled","name","class","propsAsIs","sortContentType","domItem","index","diffing","rendererModule","getChildren","domTag","child","getAttributes","attributes","acc","key","value","getAnchorAttrs","href","dynamicHref","sortTags","children","jsx","renderer","domContent","HTMLRender","html","className","image","jsonElements","parse","jsxs","validationSchema","object","string","emailRegex","handleResendEmail","resendEmail","email","values","ResendConsentModal","closeModal","recipient","register","handleSubmit","errors","useForm","yupResolver","FormLayout","elMb11","InputWrapFull","InputGroup","ButtonGroup","Button","handleSendConstents","createConsentEmails","appConsentsRefresh","developerEmail","handleSetResendConsents","setSelectedConsent","consent","openModal","handleCloseModal","emailResent","AppConsents","approval","connectSession","useReapitConnect","reapitConnectBrowserSession","hasReadAccess","usePermissionsState","selectedConsent","useState","Modal","useModal","appId","revisionId","consentId","appDetail","useReapitGet","getActions","GetActionNames","appRevision","developerId","pendingRevisions","isListed","appConsents","appConsentsLoading","useReapitUpdate","updateActions","UpdateActionNames","installations","useEffect","Fragment","Subtitle","elMt5","Loader","Table","installation","dayjs","PersistentNotification","diffViewerContainer","greenBackground","redBackground","checkboxContainer","checkboxWrap","arow","diffMediaContainer","diffBlock","iconBlock","iconImage","mediaBlock","mediaImage","diffHtmlContainer","arrow","diffRenderBlock","DiffMedia","currentMedia","changedMedia","type","blockStyle","imageStyle","isDiff","cx","DiffCheckbox","currentChecked","changedChecked","dataTest","changed","Diff","oldString","newString","options","callback","self","done","newLen","oldLen","editLength","maxEditLength","bestPath","oldPos","execEditLength","diagonalPath","basePath","addPath","removePath","_oldPos","canAdd","canRemove","clonePath","buildValues","exec","ret","components","added","removed","last","newPos","commonCount","left","right","array","i","chars","diff","useLongestToken","componentPos","componentLen","component","tmp","oldValue","lastComponent","path","characterDiff","diffChars","oldStr","newStr","generateOptions","defaults","extendedWordChars","reWhitespace","wordDiff","tokens","diffWords","diffWordsWithSpace","lineDiff","retLines","linesAndNewlines","line","diffLines","sentenceDiff","cssDiff","_typeof","obj","objectPrototypeToString","jsonDiff","_this$options","undefinedReplacement","_this$options$stringi","stringifyReplacer","k","v","canonicalize","stack","replacementStack","replacer","canonicalizedObj","sortedKeys","_key","arrayDiff","diffTypes","jsdiff.diffChars","jsdiff.diffWords","jsdiff.diffLines","jsdiff.diffWordsWithSpace","DiffViewer","currentString","changedString","result","part","DiffRenderHTML","diffStringList","isAppearInScope","nameNeedToFind","scopes","item","renderCheckboxesDiff","appScopes","revisionScopes","scope","isCheckedInAppDetail","isCheckedInRevision","elMb5","BodyText","getChangedMediaList","app","revision","revisionMedia","appMedia","mapIntegrationIdArrayToNameArray","desktopIntegrationTypeIds","desktopIntegrationTypesArray","id","integration","renderCategoriesDiff","category","renderDiffContent","desktopIntegrationTypes","oldIntegrationTypeArray","newIntegrationTypeArray","sortedOldArray","a","b","sortedNewArray","handleApproveRevision","approveRevision","loginIdentity","handleRejectRevision","rejectRevision","handleRefreshApprovals","refreshApprovals","shouldRefresh","AppRevisionComparison","ApproveModal","openApproveModal","closeApproveModal","DeclineModal","openDeclineModal","closeDeclineModal","appLoading","revisionLoading","desktopTypesLoading","scopesLoading","revisionApproved","revisionRejected","media","define_process_env_default"],"mappings":"omBAEO,MAAMA,GAAkBC,GAAO,KAAA,EAAA,CAAAC,KAAA,kBAAAC,MAAA,oBAAAC,UAAA,EAAA,CAAA,ECQhCC,GAAkB,CAACC,EAAkBC,EAAeC,IAEjDF,EAAQ,OAAS,OACpB,IAAI,UAAU,EAAE,gBAAgBA,EAAQ,SAAW,GAAI,WAAW,EAAE,gBAAgB,aAAe,KACnGG,EAAe,SAASH,EAASC,EAAOC,CAAO,EAG/CE,GAAc,CAACC,EAAiBH,IAC7BG,EAAO,SACVA,EAAO,SAAS,IAAI,CAACC,EAAgBL,IAAkBE,EAAe,gBAAgBG,EAAOL,EAAOC,CAAO,CAAC,EAC5G,KAGAK,GAAgB,CAACF,EAAiBJ,IAAkB,CAClD,MAAAO,EAAaH,EAAO,YAAc,GASxC,MAAO,CAAE,GAPoB,MAAM,KAAKG,CAAsC,EAAE,OAC9E,CAACC,EAAK,CAAE,IAAAC,EAAK,MAAAC,MAAa,CACxB,GAAGF,EACH,CAACC,CAAG,EAAGC,CAAA,GAET,CAAC,CAAA,EAE+B,IAAKV,EAAO,MAAO,CAAA,EACvD,EAEMW,GAAkBJ,GAAuC,CACvD,MAAAK,EAAOL,EAAW,KAClBM,EAAc,OAAO,+BAAoC,qCAAqCD,CAAI,GAAKA,EACtG,MAAA,CACL,GAAGL,EACH,KAAMM,CAAA,CAEV,EAEMC,GAAW,CAACV,EAAiBJ,EAAeC,IAAqB,CACrE,MAAMc,EAAWb,EAAe,YAAYE,EAAQH,CAAO,EACrDM,EAAaL,EAAe,cAAcE,EAAQJ,CAAK,EAE7D,GAAI,CAACe,GAAY,CAACA,EAAS,OAClB,OAAA,KAET,OAAQX,EAAO,QAAS,CACtB,IAAK,IACH,OAAQY,EAAAA,IAAA,IAAA,CAAG,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EACtC,IAAK,IACI,OAAA,OAAO,+BACZC,MAAC,KAAG,GAAGL,GAAeJ,CAAoC,EAAI,SAAAQ,EAAS,EAEtEC,MAAA,IAAA,CAAE,OAAO,SAAS,IAAI,WAAY,GAAGL,GAAeJ,CAAoC,EACtF,SAAAQ,CACH,CAAA,EAEJ,IAAK,IACH,OAAQC,EAAAA,IAAA,IAAA,CAAG,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EACtC,IAAK,IACH,OAAQC,EAAAA,IAAA,IAAA,CAAG,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EACtC,IAAK,KACH,OAAQC,EAAAA,IAAA,KAAA,CAAI,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EACvC,IAAK,KACH,OAAQC,EAAAA,IAAA,KAAA,CAAI,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EACvC,IAAK,KACH,OAAQC,EAAAA,IAAA,KAAA,CAAI,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EACvC,IAAK,KACH,OAAQC,EAAAA,IAAA,KAAA,CAAI,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EACvC,IAAK,KACH,OAAQC,EAAAA,IAAA,KAAA,CAAI,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EACvC,IAAK,KACH,OAAQC,EAAAA,IAAA,KAAA,CAAI,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EACvC,IAAK,KACH,OAAQC,EAAAA,IAAA,KAAA,CAAI,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EACvC,IAAK,KACH,OAAQC,EAAAA,IAAA,KAAA,CAAI,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EACvC,IAAK,KACH,OAAQC,EAAAA,IAAA,KAAA,CAAI,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EACvC,IAAK,IACH,OAAQC,EAAAA,IAAA,IAAA,CAAG,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EACtC,IAAK,SACH,OAAQC,EAAAA,IAAA,MAAA,CAAK,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EACxC,IAAK,aACH,OAAQC,EAAAA,IAAA,aAAA,CAAY,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EAC/C,IAAK,MACH,OAAQC,EAAAA,IAAA,MAAA,CAAK,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EACxC,IAAK,KACI,OAAAC,EAAA,IAAC,KAAI,CAAA,GAAGT,CAAY,CAAA,EAC7B,IAAK,MACI,OAAAN,EAAWe,EAAA,IAAA,MAAA,CAAK,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EAAUC,EAAAA,IAAA,MAAA,CAAK,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EAC1F,IAAK,MACH,OAAOd,EACLe,EAAAA,IAAC,MAAI,CAAA,UAAU,WAAY,GAAGT,EAC3B,SAAAQ,CAAA,CACH,EAEAC,EAAA,IAAC,MAAK,CAAA,GAAGT,EAAa,SAAAQ,CAAS,CAAA,EAEnC,QACE,OAAQC,EAAAA,IAAA,MAAA,CAAK,GAAGT,EAAa,SAAAQ,CAAS,CAAA,CAC1C,CACF,EAEME,GAAW,CAACC,EAAuBjB,IACvCiB,EAAW,IAAI,CAACnB,EAAkBC,IAAkBE,EAAe,gBAAgBH,EAASC,EAAOC,CAAO,CAAC,EAEhGC,EAAiB,CAC5B,gBAAAJ,GACA,YAAAK,GACA,cAAAG,GACA,SAAAQ,GACA,SAAAG,EACF,EC3GaE,GAAwC,CAAC,CACpD,KAAAC,EACA,QAAAnB,EAAU,GACV,UAAAoB,EAAY,cACZ,MAAAC,CACF,IAAuB,CACf,MAAAC,EAAeC,GAAMJ,CAAI,EAE7B,OAAAK,OAAC,OAAI,UAAAJ,EACF,SAAA,CAAAC,EACAN,EAAA,IAAAvB,GAAA,CAAiB,SAASwB,GAAAM,EAActB,CAAO,EAAE,CACpD,CAAA,CAAA,CAEJ,ECLayB,GAAmBC,GAAO,EAAE,MAAM,CAC7C,UAAWC,KAAS,OAAO,SAAS,UAAU,EAAE,QAAQC,GAAY,+BAA+B,CACrG,CAAC,EAEYC,GACX,CAACC,EAAmEC,IAAmBC,GAA8B,CACvGF,EAAA,CACV,GAAGE,EACH,WAAYD,CAAA,CACb,CACH,EAEWE,GAAkD,CAAC,CAAE,MAAAF,EAAO,WAAAG,EAAY,YAAAJ,EAAa,UAAAK,KAAgB,CAC1G,KAAA,CACJ,SAAAC,EACA,aAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,GAClBC,GAA2B,CAC7B,SAAUC,GAAYf,EAAgB,EACtC,cAAe,CACb,UAAAU,CACF,CAAA,CACD,EAEM,OAAAJ,SACJ,OAAK,CAAA,SAAUM,EAAaR,GAAkBC,EAAaC,CAAK,CAAC,EAChE,SAAA,CAAAhB,MAAC0B,GAAW,CAAA,UAAWC,EACrB,SAAA3B,MAAC4B,GACC,CAAA,SAAA5B,EAAA,IAAC6B,GAAA,CACE,GAAGR,EAAS,WAAW,EACxB,MAAM,oBACN,YAAY,yBACZ,aAAcE,GAAQ,WAAW,QACjC,KAAMA,GAAQ,WAAW,QAAU,WAAa,KAChD,OAAO,QAAA,GAEX,CACF,CAAA,EACAd,EAAAA,KAACqB,EAAY,CAAA,UAAU,QACrB,SAAA,CAAC9B,EAAA,IAAA+B,EAAA,CAAO,QAASZ,EAAY,SAAM,SAAA,QAClCY,EAAO,CAAA,OAAO,UAAU,KAAK,SAAS,SAEvC,UAAA,CAAA,EACF,CAAA,CACF,CAAA,EACE,IACN,ECbaC,GACX,CACEC,EACAC,EACAC,IAEF,SAAY,CACO,MAAMF,EAAoB,CAAE,WAAYE,CAAgB,CAAA,GAGpDD,GAEvB,EAEWE,GACX,CACEC,EACAC,EACAC,IAEF,IAAM,CACAD,IACFD,EAAmBC,CAAO,EAChBC,IAEd,EAEWC,GACX,CACEH,EACAlB,EACAsB,IAEF,IAAM,CACAA,IACFJ,EAAmB,IAAI,EACZlB,IAEf,EAEWuB,GAAiC,CAAC,CAAE,SAAAC,KAAe,CAC9D,KAAM,CAAE,eAAAC,CAAA,EAAmBC,GAAiBC,CAA2B,EACjE,CAAE,cAAAC,GAAkBC,KACpB,CAACC,EAAiBZ,CAAkB,EAAIa,WAAyC,IAAI,EACrF,CAAE,MAAAC,EAAO,UAAAZ,EAAW,WAAApB,GAAeiC,EAAS,EAC5CpC,EAAQ4B,GAAgB,cAAc,MACtCS,EAAQV,GAAU,MAClBW,EAAaX,GAAU,cACvBY,EAAYN,GAAiB,GAE7B,CAACO,CAAS,EAAIC,EAA6B,CAC/C,4BAAAX,EACA,OAAQY,EAAWC,EAAe,UAAU,EAC5C,UAAW,CACT,MAAAN,CACF,EACA,cAAe,CAACA,CAAK,CAAA,CACtB,EAEK,CAACO,CAAW,EAAIH,EAA+B,CACnD,4BAAAX,EACA,OAAQY,EAAWC,EAAe,eAAe,EACjD,UAAW,CACT,WAAAL,EACA,MAAAD,CACF,EACA,cAAe,CAACC,EAAYD,CAAK,CAAA,CAClC,EAEKQ,EAAcL,GAAW,YACzB7E,EAAO6E,GAAW,KAClBM,EAAmBN,GAAW,iBAC9BO,EAAWH,GAAa,SAExB,CAACI,EAAaC,GAAsB/B,CAAkB,EAAIuB,EAAwC,CACtG,4BAAAX,EACA,OAAQY,EAAWC,EAAe,mBAAmB,EACrD,UAAW,CACT,MAAAN,EACA,WAAAC,CACF,EACA,cAAe,CAACD,EAAOC,EAAYQ,EAAkBC,CAAQ,CAAA,CAC9D,EAEK,CAAK,CAAA,CAAA9B,CAAmB,EAAIiC,EAAyD,CACzF,4BAAApB,EACA,OAAQqB,EAAcC,EAAkB,mBAAmB,EAC3D,OAAQ,OACR,UAAW,CACT,MAAAf,EACA,WAAAC,CACF,CAAA,CACD,EAEK,CAACe,CAAa,EAAIZ,EAA2C,CACjE,4BAAAX,EACA,OAAQY,EAAWC,EAAe,gBAAgB,EAClD,YAAa,CACX,MAAAN,EACA,WAAY,EACZ,SAAU,IACV,YAAa,GACb,YAAAQ,CACF,EACA,cAAe,CAACA,CAAW,CAAA,CAC5B,EAEK,GAAK9C,EAAa0B,CAAW,EAAIyB,EAAwD,CAC7F,4BAAApB,EACA,OAAQqB,EAAcC,EAAkB,kBAAkB,EAC1D,OAAQ,OACR,UAAW,CACT,MAAAf,EACA,WAAAC,EACA,UAAAC,CACF,CAAA,CACD,EAID,OAFAe,EAAA,UAAU9B,GAAiBH,EAAoBlB,EAAYsB,CAAW,EAAG,CAACA,CAAW,CAAC,EAEjFE,EAIDlC,EAAA,KAAA8D,WAAA,CAAA,SAAA,CAAC9D,EAAAA,KAAA+D,GAAA,CAAS,UAAWC,GAAQ,SAAA,CAAA9F,EAAK,WAAA,EAAS,EAC1CsF,EACEjE,EAAAA,IAAA0E,GAAA,EAAO,EACNV,GAAa,OAEbvD,EAAA,KAAA8D,WAAA,CAAA,SAAA,CAAAvE,EAAA,IAAC2E,GAAA,CACC,cAAe,EACf,KAAMX,EAAY,IAAK1B,IAAa,CAClC,MAAO,CACL,CACE,MAAO,SACP,MAAO+B,GAAe,MAAM,KAAMO,GAAiBA,EAAa,KAAOtC,EAAQ,cAAc,GACzF,aACJ,KAAM,WACN,gBAAiB,GACjB,YAAa,CACX,UAAW,EACb,CACF,EACA,CACE,MAAO,QACP,MAAOA,EAAQ,YACf,YAAa,CACX,UAAW,EACb,CACF,EACA,CACE,MAAO,YACP,MAAOuC,EAAMvC,EAAQ,QAAQ,EAAE,OAAO,kBAAkB,EACxD,YAAa,CACX,UAAW,EACb,CACF,EACA,CACE,MAAO,SACP,MAAO,GAAGA,EAAQ,QAAQ,OAAO,CAAC,EAAE,YAAa,CAAA,GAAGA,EAAQ,QAAQ,MAAM,CAAC,CAAC,GAC5E,YAAa,CACX,UAAW,EACb,CACF,EACA,CACE,MAAO,gBACP,MAAOA,EAAQ,aAAeuC,EAAMvC,EAAQ,YAAY,EAAE,OAAO,kBAAkB,EAAI,IACvF,YAAa,CACX,UAAW,EACb,CACF,CACF,EACA,WAAY,CACV,cAAe,eACf,KAAMS,EAAgB,OAAY,QAClC,QAASA,EAAgB,OAAYX,GAAwBC,EAAoBC,EAASC,CAAS,CACrG,CAAA,EACA,CAAA,CACJ,EACAvC,EAAAA,IAACmD,EAAM,CAAA,MAAM,6BACX,SAAAnD,EAAA,IAACkB,GAAA,CACC,YAAAH,EACA,WAAAI,EACA,MAAAH,EACA,UAAWiC,GAAiB,WAAA,CAAA,EAEhC,CAAA,CACF,CAAA,EACEO,GAAaI,EAEbnD,EAAAA,KAAA8D,EAAAA,SAAA,CAAA,SAAA,CAAAvE,MAAC,MACC,CAAA,SAAAA,EAAAA,IAAC8E,GAAuB,CAAA,UAAWnD,EAAQ,OAAO,UAAU,WAAU,GAAC,YAAW,GAAC,SAAQ,GAAC,2FAE5F,CAAA,EACF,EACC3B,MAAA8B,EAAA,CAAY,UAAU,SACrB,eAACC,EAAO,CAAA,QAASC,GAAoBC,EAAqBC,EAAoBlB,CAAK,EAAG,OAAO,UAAU,wBAEvG,CAAA,EACF,CAAA,CAAA,CACF,EACE,IACN,CAAA,CAAA,EAlFoB,IAoFxB,EC/Pa+D,GAAsB,wBAatBC,EAAkB,mBAIlBC,EAAgB,iBAIhBC,GAAoB,qBAWpBC,GAAe,gBASfC,GAAO,OAKPC,GAAqB,uBAWrB/E,GAAQ,QAMRgF,GAAY,aASZC,GAAY,aAKZC,GAAY,aAKZC,GAAa,cAKbC,GAAa,cAKbC,GAAoB,sBA8BpBC,GAAQ,QAKRC,GAAkB,oBC5GlBC,GAAgC,CAAC,CAAE,aAAAC,EAAc,aAAAC,EAAc,KAAAC,KAAW,CAC/E,MAAAC,EAAaD,IAAS,OAASV,GAAYE,GAC3CU,EAAaF,IAAS,OAAST,GAAYE,GAC3CU,EAASL,IAAiBC,EAE9B,OAAAvF,EAAA,KAAC,MAAI,CAAA,UAAW4E,GACd,SAAA,CAACrF,EAAAA,IAAA,MAAA,CAAI,UAAWqG,EAAGf,GAAWW,IAAS,OAASV,GAAYE,GAAYW,GAAUnB,CAAa,EAC7F,SAAAjF,EAAA,IAAC,OAAI,UAAWqG,EAAG/F,GAAO6F,CAAU,EAAG,MAAO,CAAE,gBAAiB,QAAQJ,CAAY,IAAK,CAAA,CAAG,CAC/F,CAAA,EACC/F,EAAA,IAAA,OAAA,CAAK,UAAW4F,GAAO,SAAO,IAAA,EAC/B5F,EAAAA,IAAC,OAAI,UAAWqG,EAAGf,GAAWY,EAAYE,GAAUpB,CAAe,EACjE,SAAChF,EAAAA,IAAA,MAAA,CAAI,UAAWqG,EAAG/F,GAAO6F,CAAU,EAAG,MAAO,CAAE,gBAAiB,QAAQH,CAAY,IAAK,CAAA,CAAG,CAC/F,CAAA,CACF,CAAA,CAAA,CAEJ,EC1BaM,EAAsC,CAAC,CAAE,eAAAC,EAAgB,eAAAC,EAAgB,SAAAC,KAAe,CACnG,MAAMC,EAAUH,IAAmBC,EAEnC,cACG,MAAI,CAAA,UAAWtB,GAAmB,YAAWuB,GAAY,GACxD,SAAA,CAAAzG,MAAC,QAAK,UAAWqG,EAAGlB,GAAcuB,GAAWzB,CAAa,EACxD,SAAAjF,EAAA,IAAC,QAAM,CAAA,KAAK,WAAW,QAASuG,EAAgB,SAAQ,GAAC,YAAU,SAAU,CAAA,EAC/E,EACCG,GAAW1G,EAAA,IAAC,OAAK,CAAA,UAAWoF,GAAM,SAAO,IAAA,EACzCsB,GACE1G,EAAAA,IAAA,OAAA,CAAK,UAAWqG,EAAGlB,GAAcH,CAAe,EAC/C,SAAAhF,EAAA,IAAC,QAAM,CAAA,KAAK,WAAW,QAASwG,EAAgB,SAAQ,GAAC,YAAU,SAAU,CAAA,EAC/E,CAEJ,CAAA,CAAA,CAEJ,EC1BA,SAASG,GAAO,CAAE,CAClBA,EAAK,UAAY,CACf,KAAM,SAAcC,EAAWC,EAAW,CACxC,IAAIC,EAAU,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,CAAA,EAC9EC,EAAWD,EAAQ,SAEnB,OAAOA,GAAY,aACrBC,EAAWD,EACXA,EAAU,CAAA,GAGZ,KAAK,QAAUA,EACf,IAAIE,EAAO,KAEX,SAASC,EAAKvH,EAAO,CACnB,OAAIqH,GACF,WAAW,UAAY,CACrBA,EAAS,OAAWrH,CAAK,CAC1B,EAAE,CAAC,EACG,IAEAA,CAEV,CAGDkH,EAAY,KAAK,UAAUA,CAAS,EACpCC,EAAY,KAAK,UAAUA,CAAS,EACpCD,EAAY,KAAK,YAAY,KAAK,SAASA,CAAS,CAAC,EACrDC,EAAY,KAAK,YAAY,KAAK,SAASA,CAAS,CAAC,EACrD,IAAIK,EAASL,EAAU,OACnBM,EAASP,EAAU,OACnBQ,EAAa,EACbC,EAAgBH,EAASC,EACzBG,EAAW,CAAC,CACd,OAAQ,GACR,WAAY,CAAE,CACpB,CAAK,EAEGC,EAAS,KAAK,cAAcD,EAAS,CAAC,EAAGT,EAAWD,EAAW,CAAC,EAEpE,GAAIU,EAAS,CAAC,EAAE,OAAS,GAAKJ,GAAUK,EAAS,GAAKJ,EAEpD,OAAOF,EAAK,CAAC,CACX,MAAO,KAAK,KAAKJ,CAAS,EAC1B,MAAOA,EAAU,MAClB,CAAA,CAAC,EAIJ,SAASW,GAAiB,CACxB,QAASC,EAAe,GAAKL,EAAYK,GAAgBL,EAAYK,GAAgB,EAAG,CACtF,IAAIC,EAAW,OAEXC,EAAUL,EAASG,EAAe,CAAC,EACnCG,EAAaN,EAASG,EAAe,CAAC,EACtCI,GAAWD,EAAaA,EAAW,OAAS,GAAKH,EAEjDE,IAEFL,EAASG,EAAe,CAAC,EAAI,QAG/B,IAAIK,EAASH,GAAWA,EAAQ,OAAS,EAAIT,EACzCa,EAAYH,GAAc,GAAKC,GAAWA,EAAUV,EAExD,GAAI,CAACW,GAAU,CAACC,EAAW,CAEzBT,EAASG,CAAY,EAAI,OACzB,QACD,CAiBD,GAZI,CAACK,GAAUC,GAAaJ,EAAQ,OAASC,EAAW,QACtDF,EAAWM,GAAUJ,CAAU,EAC/BZ,EAAK,cAAcU,EAAS,WAAY,OAAW,EAAI,IAEvDA,EAAWC,EAEXD,EAAS,SACTV,EAAK,cAAcU,EAAS,WAAY,GAAM,MAAS,GAGzDG,EAAUb,EAAK,cAAcU,EAAUb,EAAWD,EAAWa,CAAY,EAErEC,EAAS,OAAS,GAAKR,GAAUW,EAAU,GAAKV,EAClD,OAAOF,EAAKgB,GAAYjB,EAAMU,EAAS,WAAYb,EAAWD,EAAWI,EAAK,eAAe,CAAC,EAG9FM,EAASG,CAAY,EAAIC,CAE5B,CAEDN,GACD,CAKD,GAAIL,GACD,SAASmB,GAAO,CACf,WAAW,UAAY,CAIrB,GAAId,EAAaC,EACf,OAAON,EAAQ,EAGZS,EAAc,GACjBU,GAEH,EAAE,CAAC,CACZ,SAEM,MAAOd,GAAcC,GAAe,CAClC,IAAIc,EAAMX,IAEV,GAAIW,EACF,OAAOA,CAEV,CAEJ,EACD,cAAe,SAAuBC,EAAYC,EAAOC,EAAS,CAChE,IAAIC,EAAOH,EAAWA,EAAW,OAAS,CAAC,EAEvCG,GAAQA,EAAK,QAAUF,GAASE,EAAK,UAAYD,EAGnDF,EAAWA,EAAW,OAAS,CAAC,EAAI,CAClC,MAAOG,EAAK,MAAQ,EACpB,MAAOF,EACP,QAASC,CACjB,EAEMF,EAAW,KAAK,CACd,MAAO,EACP,MAAOC,EACP,QAASC,CACjB,CAAO,CAEJ,EACD,cAAe,SAAuBZ,EAAUb,EAAWD,EAAWa,EAAc,CAOlF,QANIP,EAASL,EAAU,OACnBM,EAASP,EAAU,OACnB4B,EAASd,EAAS,OAClBH,EAASiB,EAASf,EAClBgB,EAAc,EAEXD,EAAS,EAAItB,GAAUK,EAAS,EAAIJ,GAAU,KAAK,OAAON,EAAU2B,EAAS,CAAC,EAAG5B,EAAUW,EAAS,CAAC,CAAC,GAC3GiB,IACAjB,IACAkB,IAGF,OAAIA,GACFf,EAAS,WAAW,KAAK,CACvB,MAAOe,CACf,CAAO,EAGHf,EAAS,OAASc,EACXjB,CACR,EACD,OAAQ,SAAgBmB,EAAMC,EAAO,CACnC,OAAI,KAAK,QAAQ,WACR,KAAK,QAAQ,WAAWD,EAAMC,CAAK,EAEnCD,IAASC,GAAS,KAAK,QAAQ,YAAcD,EAAK,YAAa,IAAKC,EAAM,aAEpF,EACD,YAAa,SAAqBC,EAAO,CAGvC,QAFIT,EAAM,CAAA,EAEDU,EAAI,EAAGA,EAAID,EAAM,OAAQC,IAC5BD,EAAMC,CAAC,GACTV,EAAI,KAAKS,EAAMC,CAAC,CAAC,EAIrB,OAAOV,CACR,EACD,UAAW,SAAmBzI,EAAO,CACnC,OAAOA,CACR,EACD,SAAU,SAAkBA,EAAO,CACjC,OAAOA,EAAM,MAAM,EAAE,CACtB,EACD,KAAM,SAAcoJ,EAAO,CACzB,OAAOA,EAAM,KAAK,EAAE,CACrB,CACH,EAEA,SAASb,GAAYc,EAAMX,EAAYvB,EAAWD,EAAWoC,EAAiB,CAM5E,QALIC,EAAe,EACfC,EAAed,EAAW,OAC1BI,EAAS,EACTjB,EAAS,EAEN0B,EAAeC,EAAcD,IAAgB,CAClD,IAAIE,EAAYf,EAAWa,CAAY,EAEvC,GAAKE,EAAU,SAuBb,GALAA,EAAU,MAAQJ,EAAK,KAAKnC,EAAU,MAAMW,EAAQA,EAAS4B,EAAU,KAAK,CAAC,EAC7E5B,GAAU4B,EAAU,MAIhBF,GAAgBb,EAAWa,EAAe,CAAC,EAAE,MAAO,CACtD,IAAIG,EAAMhB,EAAWa,EAAe,CAAC,EACrCb,EAAWa,EAAe,CAAC,EAAIb,EAAWa,CAAY,EACtDb,EAAWa,CAAY,EAAIG,CAC5B,MA3BqB,CACtB,GAAI,CAACD,EAAU,OAASH,EAAiB,CACvC,IAAItJ,EAAQmH,EAAU,MAAM2B,EAAQA,EAASW,EAAU,KAAK,EAC5DzJ,EAAQA,EAAM,IAAI,SAAUA,EAAOmJ,EAAG,CACpC,IAAIQ,EAAWzC,EAAUW,EAASsB,CAAC,EACnC,OAAOQ,EAAS,OAAS3J,EAAM,OAAS2J,EAAW3J,CAC7D,CAAS,EACDyJ,EAAU,MAAQJ,EAAK,KAAKrJ,CAAK,CACzC,MACQyJ,EAAU,MAAQJ,EAAK,KAAKlC,EAAU,MAAM2B,EAAQA,EAASW,EAAU,KAAK,CAAC,EAG/EX,GAAUW,EAAU,MAEfA,EAAU,QACb5B,GAAU4B,EAAU,MAE5B,CAYG,CAKD,IAAIG,EAAgBlB,EAAWc,EAAe,CAAC,EAE/C,OAAIA,EAAe,GAAK,OAAOI,EAAc,OAAU,WAAaA,EAAc,OAASA,EAAc,UAAYP,EAAK,OAAO,GAAIO,EAAc,KAAK,IACtJlB,EAAWc,EAAe,CAAC,EAAE,OAASI,EAAc,MACpDlB,EAAW,IAAG,GAGTA,CACT,CAEA,SAASJ,GAAUuB,EAAM,CACvB,MAAO,CACL,OAAQA,EAAK,OACb,WAAYA,EAAK,WAAW,MAAM,CAAC,CACvC,CACA,CAEA,IAAIC,GAAgB,IAAI7C,EACxB,SAAS8C,GAAUC,EAAQC,EAAQ7C,EAAS,CAC1C,OAAO0C,GAAc,KAAKE,EAAQC,EAAQ7C,CAAO,CACnD,CAEA,SAAS8C,GAAgB9C,EAAS+C,EAAU,CAC1C,GAAI,OAAO/C,GAAY,WACrB+C,EAAS,SAAW/C,UACXA,EACT,QAASnI,KAAQmI,EAEXA,EAAQ,eAAenI,CAAI,IAC7BkL,EAASlL,CAAI,EAAImI,EAAQnI,CAAI,GAKnC,OAAOkL,CACT,CAoBA,IAAIC,GAAoB,gEACpBC,GAAe,KACfC,EAAW,IAAIrD,EAEnBqD,EAAS,OAAS,SAAUtB,EAAMC,EAAO,CACvC,OAAI,KAAK,QAAQ,aACfD,EAAOA,EAAK,cACZC,EAAQA,EAAM,eAGTD,IAASC,GAAS,KAAK,QAAQ,kBAAoB,CAACoB,GAAa,KAAKrB,CAAI,GAAK,CAACqB,GAAa,KAAKpB,CAAK,CAChH,EAEAqB,EAAS,SAAW,SAAUtK,EAAO,CAGnC,QAFIuK,EAASvK,EAAM,MAAM,sBAAsB,EAEtCmJ,EAAI,EAAGA,EAAIoB,EAAO,OAAS,EAAGpB,IAEjC,CAACoB,EAAOpB,EAAI,CAAC,GAAKoB,EAAOpB,EAAI,CAAC,GAAKiB,GAAkB,KAAKG,EAAOpB,CAAC,CAAC,GAAKiB,GAAkB,KAAKG,EAAOpB,EAAI,CAAC,CAAC,IAC9GoB,EAAOpB,CAAC,GAAKoB,EAAOpB,EAAI,CAAC,EACzBoB,EAAO,OAAOpB,EAAI,EAAG,CAAC,EACtBA,KAIJ,OAAOoB,CACT,EAEA,SAASC,GAAUR,EAAQC,EAAQ7C,EAAS,CAC1C,OAAAA,EAAU8C,GAAgB9C,EAAS,CACjC,iBAAkB,EACtB,CAAG,EACMkD,EAAS,KAAKN,EAAQC,EAAQ7C,CAAO,CAC9C,CACA,SAASqD,GAAmBT,EAAQC,EAAQ7C,EAAS,CACnD,OAAOkD,EAAS,KAAKN,EAAQC,EAAQ7C,CAAO,CAC9C,CAEA,IAAIsD,GAAW,IAAIzD,EAEnByD,GAAS,SAAW,SAAU1K,EAAO,CACnC,IAAI2K,EAAW,CAAE,EACbC,EAAmB5K,EAAM,MAAM,WAAW,EAEzC4K,EAAiBA,EAAiB,OAAS,CAAC,GAC/CA,EAAiB,IAAG,EAItB,QAASzB,EAAI,EAAGA,EAAIyB,EAAiB,OAAQzB,IAAK,CAChD,IAAI0B,EAAOD,EAAiBzB,CAAC,EAEzBA,EAAI,GAAK,CAAC,KAAK,QAAQ,eACzBwB,EAASA,EAAS,OAAS,CAAC,GAAKE,GAE7B,KAAK,QAAQ,mBACfA,EAAOA,EAAK,QAGdF,EAAS,KAAKE,CAAI,EAErB,CAED,OAAOF,CACT,EAEA,SAASG,GAAUd,EAAQC,EAAQ5C,EAAU,CAC3C,OAAOqD,GAAS,KAAKV,EAAQC,EAAQ5C,CAAQ,CAC/C,CAQA,IAAI0D,GAAe,IAAI9D,EAEvB8D,GAAa,SAAW,SAAU/K,EAAO,CACvC,OAAOA,EAAM,MAAM,uBAAuB,CAC5C,EAMA,IAAIgL,GAAU,IAAI/D,EAElB+D,GAAQ,SAAW,SAAUhL,EAAO,CAClC,OAAOA,EAAM,MAAM,eAAe,CACpC,EAMA,SAASiL,EAAQC,EAAK,CACpB,OAAI,OAAO,QAAW,YAAc,OAAO,OAAO,UAAa,SAC7DD,EAAU,SAAUC,EAAK,CACvB,OAAO,OAAOA,CACpB,EAEID,EAAU,SAAUC,EAAK,CACvB,OAAOA,GAAO,OAAO,QAAW,YAAcA,EAAI,cAAgB,QAAUA,IAAQ,OAAO,UAAY,SAAW,OAAOA,CAC/H,EAGSD,EAAQC,CAAG,CACpB,CAsBA,IAAIC,GAA0B,OAAO,UAAU,SAC3CC,EAAW,IAAInE,EAGnBmE,EAAS,gBAAkB,GAC3BA,EAAS,SAAWV,GAAS,SAE7BU,EAAS,UAAY,SAAUpL,EAAO,CACpC,IAAIqL,EAAgB,KAAK,QACrBC,EAAuBD,EAAc,qBACrCE,EAAwBF,EAAc,kBACtCG,EAAoBD,IAA0B,OAAS,SAAUE,EAAGC,EAAG,CACzE,OAAO,OAAOA,EAAM,IAAcJ,EAAuBI,CAC1D,EAAGH,EACJ,OAAO,OAAOvL,GAAU,SAAWA,EAAQ,KAAK,UAAU2L,GAAa3L,EAAO,KAAM,KAAMwL,CAAiB,EAAGA,EAAmB,IAAI,CACvI,EAEAJ,EAAS,OAAS,SAAUpC,EAAMC,EAAO,CACvC,OAAOhC,EAAK,UAAU,OAAO,KAAKmE,EAAUpC,EAAK,QAAQ,aAAc,IAAI,EAAGC,EAAM,QAAQ,aAAc,IAAI,CAAC,CACjH,EAOA,SAAS0C,GAAaT,EAAKU,EAAOC,EAAkBC,EAAU/L,EAAK,CACjE6L,EAAQA,GAAS,GACjBC,EAAmBA,GAAoB,GAEnCC,IACFZ,EAAMY,EAAS/L,EAAKmL,CAAG,GAGzB,IAAI/B,EAEJ,IAAKA,EAAI,EAAGA,EAAIyC,EAAM,OAAQzC,GAAK,EACjC,GAAIyC,EAAMzC,CAAC,IAAM+B,EACf,OAAOW,EAAiB1C,CAAC,EAI7B,IAAI4C,EAEJ,GAAyBZ,GAAwB,KAAKD,CAAG,IAArD,iBAAwD,CAK1D,IAJAU,EAAM,KAAKV,CAAG,EACda,EAAmB,IAAI,MAAMb,EAAI,MAAM,EACvCW,EAAiB,KAAKE,CAAgB,EAEjC5C,EAAI,EAAGA,EAAI+B,EAAI,OAAQ/B,GAAK,EAC/B4C,EAAiB5C,CAAC,EAAIwC,GAAaT,EAAI/B,CAAC,EAAGyC,EAAOC,EAAkBC,EAAU/L,CAAG,EAGnF,OAAA6L,EAAM,IAAG,EACTC,EAAiB,IAAG,EACbE,CACR,CAMD,GAJIb,GAAOA,EAAI,SACbA,EAAMA,EAAI,UAGRD,EAAQC,CAAG,IAAM,UAAYA,IAAQ,KAAM,CAC7CU,EAAM,KAAKV,CAAG,EACda,EAAmB,CAAA,EACnBF,EAAiB,KAAKE,CAAgB,EAEtC,IAAIC,EAAa,CAAE,EACfC,EAEJ,IAAKA,KAAQf,EAEPA,EAAI,eAAee,CAAI,GACzBD,EAAW,KAAKC,CAAI,EAMxB,IAFAD,EAAW,KAAI,EAEV7C,EAAI,EAAGA,EAAI6C,EAAW,OAAQ7C,GAAK,EACtC8C,EAAOD,EAAW7C,CAAC,EACnB4C,EAAiBE,CAAI,EAAIN,GAAaT,EAAIe,CAAI,EAAGL,EAAOC,EAAkBC,EAAUG,CAAI,EAG1FL,EAAM,IAAG,EACTC,EAAiB,IAAG,CACxB,MACIE,EAAmBb,EAGrB,OAAOa,CACT,CAEA,IAAIG,GAAY,IAAIjF,EAEpBiF,GAAU,SAAW,SAAUlM,EAAO,CACpC,OAAOA,EAAM,OACf,EAEAkM,GAAU,KAAOA,GAAU,YAAc,SAAUlM,EAAO,CACxD,OAAOA,CACT,EChgBA,MAAMmM,GAAY,CAChB,MAAOC,GACP,MAAOC,GACP,MAAOC,GACP,eAAgBC,EAClB,EAEaC,EAAkC,CAAC,CAAE,cAAAC,EAAe,cAAAC,EAAe,KAAAnG,EAAO,WAAc,CAC7F,MAAAoG,EAASR,GAAU5F,CAAI,EAAEkG,EAAeC,CAAa,EAAE,IAAI,CAACE,EAAMtN,UAEnE,OAAoC,CAAA,UAAWqH,EAAGiG,EAAK,OAAStH,EAAiBsH,EAAK,SAAWrH,CAAa,EAC5G,WAAK,KADG,EAAA,GAAGqH,EAAK,KAAK,IAAItN,CAAK,EAEjC,CAEH,EACD,OAAQgB,EAAAA,IAAA,MAAA,CAAI,UAAW+E,GAAsB,SAAOsH,CAAA,CAAA,CACtD,ECnBaE,GAA0C,CAAC,CAAE,cAAAJ,EAAe,cAAAC,KAAoB,CAC3F,MAAMhG,EAAS+F,IAAkBC,EAE/B,OAAA3L,EAAA,KAAC,MAAI,CAAA,UAAWkF,GACd,SAAA,CAAC3F,EAAAA,IAAAG,GAAA,CAAW,UAAWkG,EAAGR,GAAiBO,GAAUnB,CAAa,EAAG,KAAMkH,GAAiB,EAAI,CAAA,EAC/FnM,EAAA,IAAA,OAAA,CAAK,UAAW4F,GAAO,SAAO,IAAA,EAC/B5F,EAAAA,IAACG,GAAW,CAAA,UAAWkG,EAAGR,GAAiBO,GAAUpB,CAAe,EAAG,KAAMoH,GAAiB,EAAI,CAAA,CACpG,CAAA,CAAA,CAEJ,EC8CMI,GAA4D,CAChE,KAAM,OACN,SAAU,YACV,UAAW,aACX,aAAc,gBACd,UAAW,YACX,QAAS,UACT,YAAa,cACb,aAAc,gBACd,YAAa,eACb,iBAAkB,eAClB,0BAA2B,mBAC3B,SAAU,WACV,iBAAkB,iBAClB,sBAAuB,qBACvB,WAAY,cACd,EAEaC,GAAkB,CAACC,EAAoCC,EAAuB,KACrF,CAACD,GAAkB,CAACC,GAAQ,OACvB,GAKF,CAAC,CAHOA,EAAO,KAAMC,GACnBA,EAAK,OAASF,CACtB,EAIUG,GAAuB,CAAC,CACnC,OAAAF,EACA,UAAAG,EACA,eAAAC,CACF,IAKSJ,EAAO,IAAKK,GAAsB,CACvC,MAAMC,EAAuBR,GAAgBO,EAAM,KAAMF,CAAS,EAC5DI,EAAsBT,GAAgBO,EAAM,KAAMD,CAAc,EAEpE,OAAAtM,EAAA,KAAC,MAAI,CAAA,UAAW0M,EACd,SAAA,CAAAnN,EAAA,IAACoN,EAAS,CAAA,YAAW,GAAE,SAAAJ,EAAM,YAAY,EACxChN,EAAA,IAAAsG,EAAA,CAAa,eAAgB2G,EAAsB,eAAgBC,EAAqB,CAAA,GAF/DF,EAAM,IAGlC,CAAA,CAEH,EAGUK,GAAsB,CAAC,CAAE,IAAAC,EAAK,SAAAC,KAAiC,CACpE,KAAA,CAAE,MAAOC,CAAkB,EAAAD,EAC3B,CAAE,MAAOE,CAAa,EAAAH,EAExB,MAAA,CAACE,GAAiB,CAACC,EACd,CACL,CACE,MAAO,EACP,KAAM,OACR,CAAA,EAKiCD,EAAc,QAAUC,EAAS,OAE7DD,EAAc,IAAI,CAACA,EAA2BxO,KAAmB,CACtE,aAAcwO,GAAe,IAC7B,aAAcC,EAASzO,CAAK,GAAG,IAC/B,MAAOwO,GAAe,OAAS,EAC/B,KAAMA,GAAe,MAAQ,EAC7B,EAAA,EAGGC,EAAS,IAAI,CAAC1H,EAA0B/G,KAAmB,CAChE,aAAcwO,EAAcxO,CAAK,GAAG,IACpC,aAAc+G,GAAc,IAC5B,MAAOA,GAAc,OAAS,EAC9B,KAAMA,GAAc,MAAQ,OAC5B,EAAA,CACJ,EAEa2H,GAAmC,CAC9CC,EACAC,IAEI,CAACD,GAA6B,CAACC,EAC1B,GAEMD,EAA0B,IAAKE,GACjBD,EAA6B,KACrDE,GAA6CA,EAAY,KAAOD,CAAA,GAExC,MAAQ,EACpC,EACa,OAAQ,GAAM,CAAC,EAUlBE,GAAuB,CAACT,EAAqBC,IAA+B,CACjF,MAAApB,EAAgBmB,EAAI,YAAY,IAAKU,GAAaA,EAAS,IAAI,EAAE,KAAK,IAAI,GAAK,GAC/E5B,EAAgBmB,EAAS,YAAY,IAAKS,GAAaA,EAAS,IAAI,EAAE,KAAK,IAAI,GAAK,GAGxF,OAAAvN,EAAA,KAAC,MAAI,CAAA,UAAW0M,EACd,SAAA,CAACnN,EAAA,IAAAoN,EAAA,CAAS,YAAW,GAAC,SAAU,aAAA,EAC/BpN,EAAA,IAAAkM,EAAA,CAAW,cAAAC,EAA8B,cAAAC,EAA8B,KAAK,QAAQ,CACvF,CAAA,CAAA,CAEJ,EAEa6B,GAAoB,CAAC,CAAE,IAAAxO,EAAK,SAAA8N,EAAU,IAAAD,EAAK,wBAAAY,KAAuD,CAC7G,GAAIzO,IAAQ,cACH,OAAAO,MAACuM,IAAe,cAAee,EAAI,aAAe,GAAI,cAAeC,EAAS,aAAe,EAAI,CAAA,EAE1G,GAAI9N,IAAQ,4BAA6B,CACvC,MAAM0O,EAA0BT,GAC9BJ,EAAI,0BACJY,EAAwB,IAAA,EAEpBE,EAA0BV,GAC9BH,EAAS,0BACTW,EAAwB,IAAA,EAEpBG,EAAiB,CAAC,GAAGF,CAAuB,EAAE,KAAK,CAACG,EAAGC,IAAMD,EAAE,cAAcC,CAAC,CAAC,EAC/EC,EAAiB,CAAC,GAAGJ,CAAuB,EAAE,KAAK,CAACE,EAAGC,IAAMD,EAAE,cAAcC,CAAC,CAAC,EAEnF,OAAAvO,EAAA,IAACkM,EAAA,CACC,cAAemC,EAAe,KAAK,IAAI,EACvC,cAAeG,EAAe,KAAK,IAAI,EACvC,KAAK,gBAAA,CAAA,CAGX,CACI,GAAA,CAAC,eAAgB,cAAe,mBAAoB,4BAA6B,UAAU,EAAE,SAAS/O,CAAG,EAAG,CAC9G,MAAM0M,EAAgB,MAAM,QAAQmB,EAAI7N,CAAG,CAAC,EAAI6N,EAAI7N,CAAG,EAAE,KAAK,GAAG,EAAI,GAC/D2M,EAAgB,MAAM,QAAQmB,EAAS9N,CAAG,CAAC,EAAI8N,EAAS9N,CAAG,EAAE,KAAK,GAAG,EAAI,GAC/E,OAAQO,EAAAA,IAAAkM,EAAA,CAAW,cAAAC,EAA8B,cAAAC,EAA8B,KAAK,OAAQ,CAAA,CAC9F,CACA,OAAQpM,EAAAA,IAAAkM,EAAA,CAAW,cAAeoB,EAAI7N,CAAG,GAAK,GAAI,cAAe8N,EAAS9N,CAAG,GAAK,GAAI,KAAK,OAAQ,CAAA,CACrG,EAEaiB,GAAmBC,GAAO,EAAE,MAAM,CAC7C,gBAAiBC,GAAO,EAAE,KAAK,EAAE,SAAS,UAAU,CACtD,CAAC,EAEY6N,GACX,CAACC,EAAsDvN,EAAwBwN,IAC/E,IAAM,CACJ,MAAM3N,EAAQ2N,GAAe,MACvBhQ,EAAOgQ,GAAe,KAExB3N,GAASrC,IACK+P,EAAA,CACd,MAAA1N,EACA,KAAArC,EACA,iBAAkBkG,EAAA,EAAQ,OAAO,qBAAqB,CAAA,CACvD,EACU1D,IAEf,EAEWyN,GACX,CAACC,EAA4D1N,EAAwBwN,IACpF1N,GAA+B,CAC9B,MAAMD,EAAQ2N,GAAe,MACvBhQ,EAAOgQ,GAAe,KAExB3N,GAASrC,IACXkQ,EAAe,CAAE,MAAA7N,EAAO,KAAArC,EAAM,gBAAiBsC,EAAO,gBAAiB,EAC5DE,IAEf,EAEW2N,GAAyB,CAACC,EAA8BC,IAA2B,IAAM,CAChGA,GACeD,GAErB,EAEa/M,GACX,CAACC,EAA4EjB,IAAmB,IAAM,CAChGA,GACkBiB,EAAA,CAAE,WAAYjB,CAAA,CAAO,CAE7C,EAEWiO,GAAwD,CAAC,CAAE,SAAAtM,EAAU,iBAAAoM,KAAuB,CACvG,KAAM,CAAE,eAAAnM,CAAA,EAAmBC,GAAiBC,CAA2B,EACjE,CAAE,cAAAC,GAAkBC,KACpB,CAAE,MAAOkM,EAAc,UAAWC,EAAkB,WAAYC,GAAsBhM,IACtF,CAAE,MAAOiM,EAAc,UAAWC,EAAkB,WAAYC,GAAsBnM,IACtFC,EAAQV,GAAU,MAClBW,EAAaX,GAAU,cACvB3B,EAAQ4B,GAAgB,cAAc,MAEtC,CAAC0K,EAAKkC,CAAU,EAAI/L,EAA6B,CACrD,4BAAAX,EACA,OAAQY,EAAWC,EAAe,UAAU,EAC5C,UAAW,CACT,MAAAN,CACF,EACA,cAAe,CAACA,CAAK,CAAA,CACtB,EAEK,CAACkK,EAAUkC,CAAe,EAAIhM,EAA+B,CACjE,4BAAAX,EACA,OAAQY,EAAWC,EAAe,eAAe,EACjD,UAAW,CACT,WAAAL,EACA,MAAAD,CACF,EACA,cAAe,CAACC,EAAYD,CAAK,CAAA,CAClC,EAEK,CAAC6K,EAAyBwB,CAAmB,EAAIjM,EAAqD,CAC1G,4BAAAX,EACA,OAAQY,EAAWC,EAAe,0BAA0B,CAAA,CAC7D,EAEK,CAACgJ,EAAQgD,CAAa,EAAIlM,EAA2B,CACzD,4BAAAX,EACA,OAAQY,EAAWC,EAAe,iBAAiB,CAAA,CACpD,EAEK,GAAK+K,EAAiBkB,CAAgB,EAAI1L,EAAuC,CACrF,4BAAApB,EACA,OAAQqB,EAAcC,EAAkB,eAAe,EACvD,OAAQ,OACR,UAAW,CACT,MAAAf,EACA,WAAAC,CACF,CAAA,CACD,EAEK,GAAKuL,EAAgBgB,CAAgB,EAAI3L,EAA8C,CAC3F,4BAAApB,EACA,OAAQqB,EAAcC,EAAkB,cAAc,EACtD,OAAQ,OACR,UAAW,CACT,MAAAf,EACA,WAAAC,CACF,CAAA,CACD,EAEK,CAAK,CAAA,CAAArB,CAAmB,EAAIiC,EAAyD,CACzF,4BAAApB,EACA,OAAQqB,EAAcC,EAAkB,mBAAmB,EAC3D,OAAQ,OACR,UAAW,CACT,MAAAf,EACA,WAAAC,CACF,CAAA,CACD,EAEK,CACJ,SAAAjC,EACA,aAAAC,GACA,UAAW,CAAE,OAAAC,EAAO,GAClBC,GAA4B,CAC9B,SAAUC,GAAYf,EAAgB,EACtC,cAAe,CACb,gBAAiB,EACnB,CAAA,CACD,EAOG,OALJ4D,EAAA,UAAUwK,GAAuBC,EAAkB,GAAQa,GAAoBC,EAAiB,EAAG,CACjGD,EACAC,CAAA,CACD,EAEGL,GAAcC,GAAmBC,GAAuBC,QAClDjL,GAAO,CAAA,CAAA,EAGb,CAAC/B,GAAY,CAAC2K,GAAO,CAACC,GAAY,CAACW,GAA2B,CAACvB,EAE9D3M,EAAAA,IAAA8E,GAAA,CAAuB,UAAWnD,EAAQ,OAAO,UAAU,WAAU,GAAC,YAAW,GAAC,SAAQ,GAAC,SAE5F,4CAAA,CAAA,EAKFlB,EAAA,KAAC,MAAI,CAAA,UAAWgE,GACd,SAAA,CAAAhE,OAAC+D,GAAU,CAAA,SAAA,CAAI8I,EAAA,KAAK,gBAAA,EAAc,EACjC,OAAO,KAAKd,EAAc,EAAE,IAAK/M,GAE9BgB,EAAA,KAAC,MAAI,CAAA,UAAW0M,EACd,SAAA,CAAAnN,MAACoN,EAAS,CAAA,YAAW,GAAE,SAAAZ,GAAe/M,CAAG,EAAE,EAC1CwO,GAAkB,CAAE,IAAAxO,EAAK,IAAA6N,EAAK,wBAAAY,EAAyB,SAAAX,EAAU,CAAA,CAAA,EAFxC9N,CAG5B,CAEH,EACAsO,GAAqBT,EAAKC,CAAQ,EAClCV,GAAqB,CAAE,OAAAF,EAAQ,UAAWW,EAAI,OAAQ,eAAgBC,EAAS,OAAQ,EACxF9M,EAAAA,KAAC,MAAI,CAAA,UAAW0M,EACd,SAAA,CAACnN,EAAA,IAAAoN,EAAA,CAAS,YAAW,GAAC,SAAS,YAAA,EAC/BpN,EAAA,IAACsG,EAAA,CACC,eAAgB,EAAQgH,EAAI,SAC5B,eAAgB,EAAQC,EAAS,SACjC,SAAS,wBAAA,CACX,CAAA,EACF,EACA9M,EAAAA,KAAC,MAAI,CAAA,UAAW0M,EACd,SAAA,CAACnN,EAAA,IAAAoN,EAAA,CAAS,YAAW,GAAC,SAAO,UAAA,EAC7BpN,EAAA,IAACsG,EAAA,CACC,eAAgB,EAAQgH,EAAI,OAC5B,eAAgB,EAAQC,EAAS,OACjC,SAAS,sBAAA,CACX,CAAA,EACF,EACA9M,EAAAA,KAAC,MAAI,CAAA,UAAW0M,EACd,SAAA,CAACnN,EAAA,IAAAoN,EAAA,CAAS,YAAW,GAAC,SAAc,iBAAA,EACpCpN,EAAA,IAACsG,EAAA,CACC,eAAgB,EAAQgH,EAAI,YAC5B,eAAgB,EAAQC,EAAS,YACjC,SAAS,2BAAA,CACX,CAAA,EACF,EACA9M,EAAAA,KAAC,MAAI,CAAA,UAAW0M,EACd,SAAA,CAACnN,EAAA,IAAAoN,EAAA,CAAS,YAAW,GAAC,SAAmB,sBAAA,EACzCpN,EAAA,IAACsG,EAAA,CACC,eAAgB,EAAQgH,EAAI,mBAC5B,eAAgB,EAAQC,EAAS,mBACjC,SAAS,mCAAA,CACX,CAAA,EACF,EACCF,GAAoB,CAAE,IAAAC,EAAK,SAAAC,CAAU,CAAA,EAAE,IAAKuC,GAC3CrP,EAAAA,KAAC,MAAI,CAAA,UAAW0M,EACd,SAAA,CAAC1M,EAAAA,KAAA2M,EAAA,CAAS,YAAW,GAClB,SAAA,CAAM0C,EAAA,KAAK,IAAEA,EAAM,MAAQ,GAAM9P,EAAA,IAAA,OAAA,CAAM,WAAM,MAAM,CAAA,EACtD,EACC8P,EAAM,OAAS,QACd9P,EAAA,IAACkM,EAAA,CACC,cAAe4D,EAAM,cAAgB,GACrC,cAAeA,EAAM,cAAgB,GACrC,KAAK,OAAA,CACP,EAEC9P,EAAA,IAAA8F,GAAA,CAAU,aAAcgK,EAAM,aAAc,aAAcA,EAAM,aAAc,KAAMA,EAAM,IAAM,CAAA,CAAA,GAXzEA,EAAM,KAalC,CACD,EACDrP,EAAAA,KAACqB,EAAY,CAAA,UAAU,SACrB,SAAA,CAAA9B,EAAAA,IAAC+B,GAAO,QAASuN,EAAkB,SAAUvM,EAAe,OAAO,SAAS,SAE5E,kBAAA,CAAA,EACA/C,EAAAA,IAAC+B,GAAO,QAASoN,EAAkB,SAAUpM,EAAe,OAAO,UAAU,SAE7E,kBAAA,CAAA,EACA/C,EAAAA,IAAC+B,EAAO,CAAA,OAAO,UAAU,QAASC,GAAoBC,EAAqBjB,CAAK,EAAG,SAAU+B,EAAe,SAE5G,qBAAA,CAAA,CAAA,EACF,SACCmM,EAAa,CAAA,MAAO,WAAW5B,EAAI,IAAI,YACtC,SAAA,CAAA7M,OAAC2M,EAAS,CAAA,SAAA,CAAA,uDAA2DE,EAAI,KAAK,IAAA,EAAQ,EACtF7M,EAAAA,KAACqB,EAAY,CAAA,UAAU,SACrB,SAAA,CAAC9B,EAAA,IAAA+B,EAAA,CAAO,QAASqN,EAAmB,SAAM,SAAA,EAC1CpP,EAAA,IAAC+B,EAAA,CACC,OAAO,UACP,QAAS0M,GAAsBC,EAAiBU,EAAmBxM,GAAgB,aAAa,EACjG,SAAA,SAAA,CAED,CAAA,EACF,CAAA,EACF,SACCyM,EAAa,CAAA,MAAO,WAAW/B,EAAI,IAAI,YACtC,SAAA,CAAA7M,OAAC2M,EAAS,CAAA,SAAA,CAAA,uDAA2DE,EAAI,KAAK,IAAA,EAAQ,EACtF7M,EAAA,KAAC,OAAA,CACC,SAAUa,GACRsN,GAAqBC,EAAgBU,EAAmB3M,GAAgB,aAAa,CACvF,EAEA,SAAA,CAAA5C,MAAC0B,GAAW,CAAA,UAAWC,EACrB,SAAA3B,MAAC4B,GACC,CAAA,SAAA5B,EAAA,IAAC6B,GAAA,CACE,GAAGR,EAAS,iBAAiB,EAC9B,MAAM,mBACN,aAAcE,IAAQ,iBAAiB,QACvC,KAAMA,IAAQ,iBAAiB,QAAU,WAAa,KACtD,OAAO,QAAA,GAEX,CACF,CAAA,EACAd,EAAAA,KAACqB,EAAY,CAAA,UAAU,SACrB,SAAA,CAAC9B,EAAA,IAAA+B,EAAA,CAAO,QAASwN,EAAmB,SAAM,SAAA,QACzCxN,EAAO,CAAA,OAAO,SAAS,KAAK,SAAS,SAEtC,UAAA,CAAA,EACF,CAAA,CAAA,CACF,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,EC9ZM,IAAAgO,GAAA,CAqCc,OAAA,cACE,UAtChB,GAAA,gBAAA,6BAAA,gBAAA,wCAAA,kBAAA,sBAAA,eAAA,yCAAA,mBAAA,2CAAA,aAAA","x_google_ignoreList":[8]}