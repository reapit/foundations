{"version":3,"file":"use-reapit-update-Dbhu-yhb.js","sources":["../../../use-reapit-data/src/use-reapit-update.ts"],"sourcesContent":["import { logger } from '@reapit/utils-react'\nimport { useMemo } from 'react'\nimport { ReapitConnectBrowserSession } from '@reapit/connect-session'\nimport { useSnack } from '@reapit/elements'\nimport {\n  getMergedHeaders,\n  getUrl,\n  handleReapitError,\n  NETWORK_ERROR,\n  RC_SESSION_MISSING_ERROR,\n  StringMap,\n} from './utils'\nimport { useMutation } from '@tanstack/react-query'\nimport axios, { AxiosError, AxiosResponseHeaders } from 'axios'\nimport { UpdateAction } from './update-actions'\nimport { useNavigate } from 'react-router-dom'\n\nexport type ReapitUpdateState<ParamsType, DataType> = [\n  boolean,\n  DataType | undefined,\n  SendFunction<ParamsType, DataType | boolean>,\n  boolean | undefined,\n  string | null,\n]\n\ntype AcceptedMethod = 'POST' | 'PUT' | 'PATCH' | 'DELETE'\n\nexport enum UpdateReturnTypeEnum {\n  NONE = 'none',\n  LOCATION = 'location',\n  RESPONSE = 'response',\n}\n\nexport interface ReapitUpdate {\n  reapitConnectBrowserSession: ReapitConnectBrowserSession\n  action: UpdateAction\n  method?: AcceptedMethod\n  returnType?: UpdateReturnTypeEnum\n  headers?: StringMap\n  uriParams?: Object\n  withCredentials?: boolean\n}\n\nexport interface Options {\n  uriParams?: Object\n  headers?: StringMap\n}\n\nexport type SendFunction<ParamsType, DataType> = (params: ParamsType, options?: Options) => Promise<DataType>\nexport interface MutateParams<DataType> {\n  data: DataType\n  options?: Options\n}\n\nexport const useReapitUpdate = <ParamsType, DataType>({\n  action,\n  method = 'POST',\n  returnType = UpdateReturnTypeEnum.NONE,\n  headers = {},\n  uriParams,\n  withCredentials,\n  reapitConnectBrowserSession,\n}: ReapitUpdate): ReapitUpdateState<ParamsType, DataType> => {\n  const { error: errorSnack, success: successSnack } = useSnack()\n  const navigate = useNavigate()\n  const { successMessage, errorMessage } = action\n  const url = useMemo(getUrl(action, undefined, uriParams), [uriParams, action])\n  console.log('url', url)\n\n  const { mutateAsync, error, data, isSuccess, isLoading } = useMutation<\n    DataType,\n    AxiosError<any>,\n    MutateParams<ParamsType>\n  >([url, uriParams], {\n    mutationFn: async (mutateParams: MutateParams<ParamsType>) => {\n      const { data, options } = mutateParams\n      const mergedHeaders = {\n        ...headers,\n        ...(options?.headers ?? {}),\n      }\n      const updateUrl = options?.uriParams ? getUrl(action, undefined, { ...uriParams, ...options.uriParams })() : url\n      const updateHeaders = await getMergedHeaders(reapitConnectBrowserSession, mergedHeaders)\n\n      if (!updateHeaders) throw new Error('Missing valid Reapit Connect Session, please try logging in again.')\n\n      const res = await axios<DataType>(updateUrl, {\n        method,\n        headers: updateHeaders,\n        data,\n        withCredentials,\n      })\n\n      if (returnType === UpdateReturnTypeEnum.RESPONSE) return res.data\n\n      if (returnType === UpdateReturnTypeEnum.LOCATION && res.headers) {\n        console.log('retunrType', returnType)\n        const headers = res.headers as AxiosResponseHeaders\n        const location = headers.location\n\n        if (!location) throw new Error('Location was not returned by server')\n\n        const locationUrl = location.includes('.prod.paas') ? location.replace('.prod.paas', '') : location\n\n        const locationRes = await axios(locationUrl, {\n          method: 'GET',\n          headers: updateHeaders,\n        })\n\n        return locationRes.data\n      }\n\n      console.log('response', res, url)\n\n      return true\n    },\n    onSuccess: () => {\n      if (successMessage) successSnack(successMessage, 100000)\n    },\n    onError: async (error: AxiosError<any>) => {\n      const connectSession = await reapitConnectBrowserSession.connectSession()\n      const isRcError = error.message === RC_SESSION_MISSING_ERROR\n      const isFourOOne = error.code === NETWORK_ERROR\n\n      if (isRcError || isFourOOne || !connectSession) {\n        return navigate('/login')\n      }\n\n      const errorString = handleReapitError(error, errorMessage)\n      errorSnack(errorString, 5000)\n      logger(new Error(errorString), connectSession)\n    },\n  })\n\n  const errorString = error ? handleReapitError(error, errorMessage) : null\n  const sendFunc = ((data: ParamsType, options?: Options) =>\n    mutateAsync({ data, options }).catch((err) => console.error('Caught error', err.message))) as SendFunction<\n    ParamsType,\n    DataType\n  >\n\n  return [isLoading, data, sendFunc, isSuccess, errorString]\n}\n"],"names":["useReapitUpdate","action","method","returnType","headers","uriParams","withCredentials","reapitConnectBrowserSession","errorSnack","successSnack","useSnack","navigate","useNavigate","successMessage","errorMessage","url","useMemo","getUrl","mutateAsync","error","data","isSuccess","isLoading","useMutation","mutateParams","options","mergedHeaders","updateUrl","updateHeaders","getMergedHeaders","res","axios","location","locationUrl","connectSession","isRcError","RC_SESSION_MISSING_ERROR","isFourOOne","NETWORK_ERROR","errorString","handleReapitError","logger","err"],"mappings":"iJAsDO,MAAMA,EAAkB,CAAuB,CACpD,OAAAC,EACA,OAAAC,EAAS,OACT,WAAAC,EAAa,OACb,QAAAC,EAAU,CAAC,EACX,UAAAC,EACA,gBAAAC,EACA,4BAAAC,CACF,IAA6D,CAC3D,KAAM,CAAE,MAAOC,EAAY,QAASC,CAAA,EAAiBC,IAC/CC,EAAWC,IACX,CAAE,eAAAC,EAAgB,aAAAC,CAAiB,EAAAb,EACnCc,EAAMC,EAAAA,QAAQC,EAAOhB,EAAQ,OAAWI,CAAS,EAAG,CAACA,EAAWJ,CAAM,CAAC,EACrE,QAAA,IAAI,MAAOc,CAAG,EAEhB,KAAA,CAAE,YAAAG,EAAa,MAAAC,EAAO,KAAAC,EAAM,UAAAC,EAAW,UAAAC,CAAU,EAAIC,EAIzD,CAACR,EAAKV,CAAS,EAAG,CAClB,WAAY,MAAOmB,GAA2C,CAC5D,KAAM,CAAE,KAAAJ,EAAM,QAAAK,CAAA,EAAYD,EACpBE,EAAgB,CACpB,GAAGtB,EACH,GAAIqB,GAAS,SAAW,CAAC,CAAA,EAErBE,EAAYF,GAAS,UAAYR,EAAOhB,EAAQ,OAAW,CAAE,GAAGI,EAAW,GAAGoB,EAAQ,SAAU,CAAC,IAAMV,EACvGa,EAAgB,MAAMC,EAAiBtB,EAA6BmB,CAAa,EAEvF,GAAI,CAACE,EAAqB,MAAA,IAAI,MAAM,oEAAoE,EAElG,MAAAE,EAAM,MAAMC,EAAgBJ,EAAW,CAC3C,OAAAzB,EACA,QAAS0B,EACT,KAAAR,EACA,gBAAAd,CAAA,CACD,EAED,GAAIH,IAAe,WAA+B,OAAO2B,EAAI,KAEzD,GAAA3B,IAAe,YAAiC2B,EAAI,QAAS,CACvD,QAAA,IAAI,aAAc3B,CAAU,EAEpC,MAAM6B,EADUF,EAAI,QACK,SAEzB,GAAI,CAACE,EAAgB,MAAA,IAAI,MAAM,qCAAqC,EAE9D,MAAAC,EAAcD,EAAS,SAAS,YAAY,EAAIA,EAAS,QAAQ,aAAc,EAAE,EAAIA,EAO3F,OALoB,MAAMD,EAAME,EAAa,CAC3C,OAAQ,MACR,QAASL,CAAA,CACV,GAEkB,IACrB,CAEQ,eAAA,IAAI,WAAYE,EAAKf,CAAG,EAEzB,EACT,EACA,UAAW,IAAM,CACXF,GAAgBJ,EAAaI,EAAgB,GAAM,CACzD,EACA,QAAS,MAAOM,GAA2B,CACnC,MAAAe,EAAiB,MAAM3B,EAA4B,iBACnD4B,EAAYhB,EAAM,UAAYiB,EAC9BC,EAAalB,EAAM,OAASmB,EAE9B,GAAAH,GAAaE,GAAc,CAACH,EAC9B,OAAOvB,EAAS,QAAQ,EAGpB4B,MAAAA,EAAcC,EAAkBrB,EAAOL,CAAY,EACzDN,EAAW+B,EAAa,GAAI,EAC5BE,EAAO,IAAI,MAAMF,CAAW,EAAGL,CAAc,CAC/C,CAAA,CACD,EAEKK,EAAcpB,EAAQqB,EAAkBrB,EAAOL,CAAY,EAAI,KAOrE,MAAO,CAACQ,EAAWF,EAND,CAACA,EAAkBK,IACnCP,EAAY,CAAE,KAAAE,EAAM,QAAAK,CAAA,CAAS,EAAE,MAAOiB,GAAQ,QAAQ,MAAM,eAAgBA,EAAI,OAAO,CAAC,EAKvDrB,EAAWkB,CAAW,CAC3D"}