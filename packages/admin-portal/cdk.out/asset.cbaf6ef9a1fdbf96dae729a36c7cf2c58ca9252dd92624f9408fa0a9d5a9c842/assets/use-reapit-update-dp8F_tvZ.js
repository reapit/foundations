import{n as K,o as N,r as O,aK as R,t as w}from"./vendor-ZH71Hs13.js";import{b as f,h as y,c as k,d as A,N as B,l as D}from"./index-D0FSyh0V.js";const H=({action:r,method:S="POST",returnType:l="none",headers:C={},uriParams:a,withCredentials:E,reapitConnectBrowserSession:h})=>{const{error:v,success:M}=K(),P=N(),{successMessage:p,errorMessage:m}=r,c=O.useMemo(f(r,void 0,a),[a,r]);console.log("url",c);const{mutateAsync:T,error:g,data:b,isSuccess:L,isLoading:x}=R([c,a],{mutationFn:async e=>{const{data:o,options:s}=e,d={...C,...(s==null?void 0:s.headers)??{}},n=s!=null&&s.uriParams?f(r,void 0,{...a,...s.uriParams})():c,u=await k(h,d);if(!u)throw new Error("Missing valid Reapit Connect Session, please try logging in again.");const t=await w(n,{method:S,headers:u,data:o,withCredentials:E});if(l==="response")return t.data;if(l==="location"&&t.headers){const i=t.headers.location;if(!i)throw new Error("Location was not returned by server");const G=i.includes(".prod.paas")?i.replace(".prod.paas",""):i;return(await w(G,{method:"GET",headers:u})).data}return console.log("response",t),!0},onSuccess:()=>{p&&M(p,1e5)},onError:async e=>{const o=await h.connectSession(),s=e.message===A,d=e.code===B;if(s||d||!o)return P("/login");const n=y(e,m);v(n,5e3),D(new Error(n),o)}}),F=g?y(g,m):null;return[x,b,(e,o)=>T({data:e,options:o}).catch(s=>console.error("Caught error",s.message)),L,F]};export{H as u};
