{"version":3,"file":"private-route-wrapper-2Yw2YFLF.js","sources":["../../../utils-react/src/nav/index.ts","../../src/components/menu/menu.tsx","../../src/core/private-route-wrapper.tsx"],"sourcesContent":["import { ReapitConnectSession } from '@reapit/connect-session'\n\nexport const getAvatarInitials = (session: ReapitConnectSession | null) => {\n  if (!session?.loginIdentity) return ''\n  const { name } = session.loginIdentity\n  const nameArray = name.split(' ')\n  const firstName = nameArray[0]\n  const lastName = nameArray[nameArray.length - 1]\n  return `${firstName.charAt(0)}${lastName.charAt(0)}`\n}\n","import React, { FC } from 'react'\nimport { useNavigate, useLocation } from 'react-router'\nimport Routes from '../../constants/routes'\nimport { Icon, NavResponsive, NavResponsiveOption } from '@reapit/elements'\nimport { memo } from 'react'\nimport { navigateRoute, openNewPage } from '../../utils/navigation'\nimport { useReapitConnect } from '@reapit/connect-session'\nimport { reapitConnectBrowserSession } from '../../core/connect-session'\nimport { getAvatarInitials } from '@reapit/utils-react'\n\nexport const getDefaultNavIndex = (pathname: string) => {\n  switch (pathname) {\n    case Routes.APPROVALS:\n      return 1\n    case Routes.APPS:\n      return 2\n    case Routes.DEV_MANAGEMENT:\n      return 3\n    case Routes.INSTALLATIONS:\n      return 4\n    case Routes.BILLING:\n      return 5\n    case Routes.TRAFFIC:\n      return 6\n    case Routes.CUSTOMERS:\n      return 7\n    case Routes.SUBSCRIPTIONS:\n      return 8\n    case Routes.USAGE:\n      return 9\n    case Routes.IAAS:\n      return 10\n    case Routes.ROOT:\n    default:\n      return 0\n  }\n}\n\nexport const Menu: FC = () => {\n  const location = useLocation()\n  const { connectLogoutRedirect, connectSession } = useReapitConnect(reapitConnectBrowserSession)\n  const navigate = useNavigate()\n  const { pathname } = location\n\n  const navOptions = [\n    {\n      itemIndex: 0,\n      callback: navigateRoute(navigate, Routes.ROOT),\n    },\n    {\n      itemIndex: 1,\n      callback: navigateRoute(navigate, Routes.APPROVALS),\n      text: 'Approvals',\n    },\n    {\n      itemIndex: 2,\n      callback: navigateRoute(navigate, Routes.APPS),\n      text: 'Apps',\n    },\n    {\n      itemIndex: 3,\n      callback: navigateRoute(navigate, Routes.DEV_MANAGEMENT),\n      text: 'Developers',\n    },\n    {\n      itemIndex: 4,\n      callback: navigateRoute(navigate, Routes.INSTALLATIONS),\n      text: 'Installations',\n    },\n    {\n      itemIndex: 5,\n      callback: navigateRoute(navigate, Routes.BILLING),\n      text: 'Billing',\n    },\n    {\n      itemIndex: 6,\n      callback: navigateRoute(navigate, Routes.TRAFFIC),\n      text: 'Traffic',\n    },\n    {\n      itemIndex: 7,\n      callback: navigateRoute(navigate, Routes.CUSTOMERS),\n      text: 'Customers',\n    },\n    {\n      itemIndex: 8,\n      callback: navigateRoute(navigate, Routes.SUBSCRIPTIONS),\n      text: 'Subs',\n    },\n    {\n      itemIndex: 9,\n      callback: navigateRoute(navigate, Routes.USAGE),\n      text: 'Usage',\n    },\n    {\n      itemIndex: 10,\n      callback: navigateRoute(navigate, Routes.IAAS),\n      text: 'IAAS',\n    },\n  ]\n\n  return (\n    <NavResponsive\n      defaultNavIndex={getDefaultNavIndex(pathname)}\n      options={navOptions as NavResponsiveOption[]}\n      appSwitcherOptions={[\n        {\n          text: 'AppMarket',\n          callback: openNewPage(process.env.appMarketUri),\n          iconUrl: <Icon icon=\"reapitLogoSmall\" />,\n        },\n        {\n          text: 'DevPortal',\n          callback: openNewPage(process.env.developerPortalUri),\n          iconUrl: <Icon icon=\"reapitLogoSmall\" />,\n        },\n      ]}\n      avatarText={getAvatarInitials(connectSession)}\n      avatarOptions={[\n        {\n          callback: connectLogoutRedirect,\n          text: 'Logout',\n        },\n      ]}\n    />\n  )\n}\n\nexport default memo(Menu)\n","import React, { FC, PropsWithChildren, Suspense } from 'react'\nimport Menu from '../components/menu/menu'\nimport { useLocation, Navigate } from 'react-router'\nimport { reapitConnectBrowserSession } from '../core/connect-session'\nimport { useReapitConnect } from '@reapit/connect-session'\nimport { Loader, MainContainer } from '@reapit/elements'\nimport { PermissionsProvider } from './use-permissions-state'\nimport Routes from '../constants/routes'\n\nexport const PrivateRouteWrapper: FC<PropsWithChildren> = ({ children }) => {\n  const { connectSession, connectInternalRedirect } = useReapitConnect(reapitConnectBrowserSession)\n  const location = useLocation()\n  const currentUri = `${location.pathname}${location.search}`\n\n  if (!connectSession) {\n    return (\n      <MainContainer>\n        <Loader fullPage />\n      </MainContainer>\n    )\n  }\n\n  if (window.location.pathname === '/') {\n    return <Navigate to={Routes.APPS} />\n  }\n\n  if (connectInternalRedirect && currentUri !== connectInternalRedirect) {\n    return <Navigate to={connectInternalRedirect} />\n  }\n\n  return (\n    <PermissionsProvider>\n      <MainContainer>\n        <Menu />\n        <Suspense fallback={<Loader />}>{children}</Suspense>\n      </MainContainer>\n    </PermissionsProvider>\n  )\n}\n\nexport default PrivateRouteWrapper\n"],"names":["getAvatarInitials","session","name","nameArray","firstName","lastName","define_process_env_default","PrivateRouteWrapper","children","connectSession","connectInternalRedirect","useReapitConnect","reapitConnectBrowserSession","location","useLocation","currentUri","jsx","Navigate","Routes","PermissionsProvider","jsxs","MainContainer","Menu","Suspense","Loader"],"mappings":"oQAEa,MAAAA,EAAqBC,GAAyC,CACzE,GAAI,CAACA,GAAS,cAAsB,MAAA,GAC9B,KAAA,CAAE,KAAAC,CAAK,EAAID,EAAQ,cACnBE,EAAYD,EAAK,MAAM,GAAG,EAC1BE,EAAYD,EAAU,CAAC,EACvBE,EAAWF,EAAUA,EAAU,OAAS,CAAC,EACxC,MAAA,GAAGC,EAAU,OAAO,CAAC,CAAC,GAAGC,EAAS,OAAO,CAAC,CAAC,EACpD,ECoGmB,IAAAC,EAAA,CAAA,OAAA,cAAA,UAAA,GAAA,gBAAA,6BAAA,gBAAA,wCAAA,kBAAA,sBAAA,eAAA,yCAAA,mBAAA,2CAAA,aAAA,y0CCpGNC,EAA6C,CAAC,CAAE,SAAAC,KAAe,CAC1E,KAAM,CAAE,eAAAC,EAAgB,wBAAAC,CAAwB,EAAIC,EAAiBC,CAA2B,EAC1FC,EAAWC,IACXC,EAAa,GAAGF,EAAS,QAAQ,GAAGA,EAAS,MAAM,GAEzD,OAAKJ,EAQD,OAAO,SAAS,WAAa,IACvBO,EAAAA,IAAAC,EAAA,CAAS,GAAIC,EAAO,IAAM,CAAA,EAGhCR,GAA2BK,IAAeL,EACrCM,EAAA,IAACC,EAAS,CAAA,GAAIP,CAAyB,CAAA,EAI9CM,EAAAA,IAACG,EACC,CAAA,SAAAC,EAAAA,KAACC,EACC,CAAA,SAAA,CAAAL,EAAA,IAACM,EAAK,EAAA,QACLC,EAAAA,SAAS,CAAA,SAAWP,EAAAA,IAAAQ,EAAA,CAAO,CAAA,EAAK,SAAAhB,EAAS,CAAA,CAC5C,CAAA,CACF,CAAA,QApBGa,EACC,CAAA,SAAAL,EAAA,IAACQ,EAAO,CAAA,SAAQ,GAAC,CACnB,CAAA,CAoBN"}