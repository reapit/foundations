// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilterForm should render component 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <form>
        <mock-styled.div
          classname="mock-css."
        >
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="organisationName"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Company Name
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="userEmail"
                type="email"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                User Email
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.label>
              Subscription Type
            </mock-styled.label>
            <mock-styled.div>
              <mock-styled.select
                name="subscriptionType"
              >
                <option
                  value=""
                >
                  Please Select
                </option>
                <option
                  value="applicationListing"
                >
                  Application Listing
                </option>
                <option
                  value="developerRegistration"
                >
                  Developer Registration
                </option>
                <option
                  value="developerEdition"
                >
                  Developer Edition
                </option>
              </mock-styled.select>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.label>
              Status
            </mock-styled.label>
            <mock-styled.div>
              <mock-styled.select
                name="status"
              >
                <option
                  value=""
                >
                  Please Select
                </option>
                <option
                  value="active"
                >
                  Active
                </option>
                <option
                  value="cancelled"
                >
                  Cancelled
                </option>
              </mock-styled.select>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </form>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <form>
      <mock-styled.div
        classname="mock-css."
      >
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.input
              classname=""
              id="test-static-id"
              name="organisationName"
            />
            <mock-styled.label
              htmlfor="test-static-id"
            >
              Company Name
            </mock-styled.label>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.input
              classname=""
              id="test-static-id"
              name="userEmail"
              type="email"
            />
            <mock-styled.label
              htmlfor="test-static-id"
            >
              User Email
            </mock-styled.label>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.label>
            Subscription Type
          </mock-styled.label>
          <mock-styled.div>
            <mock-styled.select
              name="subscriptionType"
            >
              <option
                value=""
              >
                Please Select
              </option>
              <option
                value="applicationListing"
              >
                Application Listing
              </option>
              <option
                value="developerRegistration"
              >
                Developer Registration
              </option>
              <option
                value="developerEdition"
              >
                Developer Edition
              </option>
            </mock-styled.select>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.label>
            Status
          </mock-styled.label>
          <mock-styled.div>
            <mock-styled.select
              name="status"
            >
              <option
                value=""
              >
                Please Select
              </option>
              <option
                value="active"
              >
                Active
              </option>
              <option
                value="cancelled"
              >
                Cancelled
              </option>
            </mock-styled.select>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
