// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Subscriptions should render component when has data 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.section>
        <mock-styled.h1
          classname=""
        >
          Subscriptions
        </mock-styled.h1>
        <form>
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="organisationName"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Company Name
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="userEmail"
                  type="email"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  User Email
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Subscription Type
              </mock-styled.label>
              <mock-styled.div>
                <mock-styled.select
                  name="subscriptionType"
                >
                  <option
                    value=""
                  >
                    Please Select
                  </option>
                  <option
                    value="applicationListing"
                  >
                    Application Listing
                  </option>
                  <option
                    value="developerRegistration"
                  >
                    Developer Registration
                  </option>
                  <option
                    value="developerEdition"
                  >
                    Developer Edition
                  </option>
                </mock-styled.select>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Status
              </mock-styled.label>
              <mock-styled.div>
                <mock-styled.select
                  name="status"
                >
                  <option
                    value=""
                  >
                    Please Select
                  </option>
                  <option
                    value="active"
                  >
                    Active
                  </option>
                  <option
                    value="cancelled"
                  >
                    Cancelled
                  </option>
                </mock-styled.select>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </form>
        <div
          class="mock-css.
  margin-bottom: 2.5rem;
"
        >
          <mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.button
                classname="mock-css."
                type="button"
              >
                <mock-styled.div />
                Download CSV
              </mock-styled.button>
            </mock-styled.div>
          </mock-styled.div>
        </div>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 2.5rem;
"
          data-has-call-to-action="true"
          data-has-expandable-action="false"
          data-num-columns-excl-action-col="9"
        >
          <mock-styled.div>
            <mock-styled.div>
              Subcription Type
            </mock-styled.div>
            <mock-styled.div>
              Summary
            </mock-styled.div>
            <mock-styled.div>
              Company Name
            </mock-styled.div>
            <mock-styled.div>
              User Email
            </mock-styled.div>
            <mock-styled.div>
              Start Date
            </mock-styled.div>
            <mock-styled.div>
              Renews
            </mock-styled.div>
            <mock-styled.div>
              Frequency
            </mock-styled.div>
            <mock-styled.div>
              Cost
            </mock-styled.div>
            <mock-styled.div>
              Cancelled
            </mock-styled.div>
            <mock-styled.div>
              Cancel
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div>
              <mock-styled.div
                classname="mock-css."
              >
                <mock-styled.div
                  data-narrow-label="Subcription Type"
                />
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.div
                  data-narrow-label="Summary"
                />
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.div
                  data-narrow-label="Company Name"
                />
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.div
                  data-narrow-label="User Email"
                />
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.div
                  data-narrow-label="Start Date"
                >
                  03 Mar 2022 10:18
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.div
                  data-narrow-label="Renews"
                >
                  -
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.div
                  data-narrow-label="Frequency"
                />
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.div
                  data-narrow-label="Cost"
                >
                  Â£undefined
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.div
                  data-narrow-label="Cancelled"
                >
                  -
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div />
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.input
              value="1"
            />
             of 
            1
          </mock-styled.div>
          <mock-styled.button
            data-testid="back-button"
            type="button"
          >
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.button>
          <mock-styled.button
            data-testid="forward-button"
            type="button"
          >
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.button>
        </mock-styled.div>
      </mock-styled.section>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.section>
      <mock-styled.h1
        classname=""
      >
        Subscriptions
      </mock-styled.h1>
      <form>
        <mock-styled.div
          classname="mock-css."
        >
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="organisationName"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Company Name
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="userEmail"
                type="email"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                User Email
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.label>
              Subscription Type
            </mock-styled.label>
            <mock-styled.div>
              <mock-styled.select
                name="subscriptionType"
              >
                <option
                  value=""
                >
                  Please Select
                </option>
                <option
                  value="applicationListing"
                >
                  Application Listing
                </option>
                <option
                  value="developerRegistration"
                >
                  Developer Registration
                </option>
                <option
                  value="developerEdition"
                >
                  Developer Edition
                </option>
              </mock-styled.select>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.label>
              Status
            </mock-styled.label>
            <mock-styled.div>
              <mock-styled.select
                name="status"
              >
                <option
                  value=""
                >
                  Please Select
                </option>
                <option
                  value="active"
                >
                  Active
                </option>
                <option
                  value="cancelled"
                >
                  Cancelled
                </option>
              </mock-styled.select>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </form>
      <div
        class="mock-css.
  margin-bottom: 2.5rem;
"
      >
        <mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.button
              classname="mock-css."
              type="button"
            >
              <mock-styled.div />
              Download CSV
            </mock-styled.button>
          </mock-styled.div>
        </mock-styled.div>
      </div>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 2.5rem;
"
        data-has-call-to-action="true"
        data-has-expandable-action="false"
        data-num-columns-excl-action-col="9"
      >
        <mock-styled.div>
          <mock-styled.div>
            Subcription Type
          </mock-styled.div>
          <mock-styled.div>
            Summary
          </mock-styled.div>
          <mock-styled.div>
            Company Name
          </mock-styled.div>
          <mock-styled.div>
            User Email
          </mock-styled.div>
          <mock-styled.div>
            Start Date
          </mock-styled.div>
          <mock-styled.div>
            Renews
          </mock-styled.div>
          <mock-styled.div>
            Frequency
          </mock-styled.div>
          <mock-styled.div>
            Cost
          </mock-styled.div>
          <mock-styled.div>
            Cancelled
          </mock-styled.div>
          <mock-styled.div>
            Cancel
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.div
                data-narrow-label="Subcription Type"
              />
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Summary"
              />
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Company Name"
              />
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="User Email"
              />
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Start Date"
              >
                03 Mar 2022 10:18
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Renews"
              >
                -
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Frequency"
              />
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Cost"
              >
                Â£undefined
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Cancelled"
              >
                -
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div />
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.input
            value="1"
          />
           of 
          1
        </mock-styled.div>
        <mock-styled.button
          data-testid="back-button"
          type="button"
        >
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.button>
        <mock-styled.button
          data-testid="forward-button"
          type="button"
        >
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.button>
      </mock-styled.div>
    </mock-styled.section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Subscriptions should render component when loading 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.section>
        <mock-styled.h1
          classname=""
        >
          Subscriptions
        </mock-styled.h1>
        <form>
          <mock-styled.div
            classname="mock-css."
          >
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="organisationName"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Company Name
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="userEmail"
                  type="email"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  User Email
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Subscription Type
              </mock-styled.label>
              <mock-styled.div>
                <mock-styled.select
                  name="subscriptionType"
                >
                  <option
                    value=""
                  >
                    Please Select
                  </option>
                  <option
                    value="applicationListing"
                  >
                    Application Listing
                  </option>
                  <option
                    value="developerRegistration"
                  >
                    Developer Registration
                  </option>
                  <option
                    value="developerEdition"
                  >
                    Developer Edition
                  </option>
                </mock-styled.select>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Status
              </mock-styled.label>
              <mock-styled.div>
                <mock-styled.select
                  name="status"
                >
                  <option
                    value=""
                  >
                    Please Select
                  </option>
                  <option
                    value="active"
                  >
                    Active
                  </option>
                  <option
                    value="cancelled"
                  >
                    Cancelled
                  </option>
                </mock-styled.select>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </form>
        <div
          class="mock-css.
  margin-bottom: 2.5rem;
"
        >
          <mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.button
                classname="mock-css."
                type="button"
              >
                <mock-styled.div />
                Download CSV
              </mock-styled.button>
            </mock-styled.div>
          </mock-styled.div>
        </div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div />
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.section>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.section>
      <mock-styled.h1
        classname=""
      >
        Subscriptions
      </mock-styled.h1>
      <form>
        <mock-styled.div
          classname="mock-css."
        >
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="organisationName"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Company Name
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="userEmail"
                type="email"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                User Email
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.label>
              Subscription Type
            </mock-styled.label>
            <mock-styled.div>
              <mock-styled.select
                name="subscriptionType"
              >
                <option
                  value=""
                >
                  Please Select
                </option>
                <option
                  value="applicationListing"
                >
                  Application Listing
                </option>
                <option
                  value="developerRegistration"
                >
                  Developer Registration
                </option>
                <option
                  value="developerEdition"
                >
                  Developer Edition
                </option>
              </mock-styled.select>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.label>
              Status
            </mock-styled.label>
            <mock-styled.div>
              <mock-styled.select
                name="status"
              >
                <option
                  value=""
                >
                  Please Select
                </option>
                <option
                  value="active"
                >
                  Active
                </option>
                <option
                  value="cancelled"
                >
                  Cancelled
                </option>
              </mock-styled.select>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </form>
      <div
        class="mock-css.
  margin-bottom: 2.5rem;
"
      >
        <mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.button
              classname="mock-css."
              type="button"
            >
              <mock-styled.div />
              Download CSV
            </mock-styled.button>
          </mock-styled.div>
        </mock-styled.div>
      </div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
