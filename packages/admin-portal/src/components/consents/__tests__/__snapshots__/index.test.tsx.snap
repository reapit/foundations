// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppConsents should match snapshot where nothing is returned 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.h2
        classname="el-mt5"
      >
         Consents
      </mock-styled.h2>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.h2
      classname="el-mt5"
    >
       Consents
    </mock-styled.h2>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`AppConsents should match snapshot where the app is loading 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.h2
        classname="el-mt5"
      >
         Consents
      </mock-styled.h2>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.h2
      classname="el-mt5"
    >
       Consents
    </mock-styled.h2>
    <mock-styled.div
      classname=""
    >
      <mock-styled.div>
        <mock-styled.div />
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`AppConsents should match snapshot where there are no consents returned 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.h2
        classname="el-mt5"
      >
        Reapit Insights
         Consents
      </mock-styled.h2>
      <div>
        <mock-styled.div
          classname="el-mb11 el-intent-primary el-is-active el-pn-is-full-width el-pn-is-inline"
        >
          <div
            class="el-pn-icon"
            data-testid="close-icon"
          >
            <mock-styled.span
              classname="el-icon-new"
              style="font-size: 1.25rem;"
            >
              <svg
                fill="none"
                height="1em"
                style="font-size: 1.25rem;"
                viewBox="0 0 24 24"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10A10 10 0 0 0 12 2Zm1.143 15.714h-2.286v-6h2.286v6Zm-1.143-8a1.714 1.714 0 1 1 0-3.428 1.714 1.714 0 0 1 0 3.428Z"
                  fill="currentColor"
                />
              </svg>
            </mock-styled.span>
          </div>
          <div
            class="el-pn-content"
          >
            No record of any consents for this app - you can send these from the link below.
          </div>
        </mock-styled.div>
      </div>
      <mock-styled.div>
        <mock-styled.div
          classname="el-button-group-align-center"
        >
          <mock-styled.button
            classname="el-intent-primary"
          >
            <mock-styled.div />
            Send Requests
          </mock-styled.button>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.h2
      classname="el-mt5"
    >
      Reapit Insights
       Consents
    </mock-styled.h2>
    <div>
      <mock-styled.div
        classname="el-mb11 el-intent-primary el-is-active el-pn-is-full-width el-pn-is-inline"
      >
        <div
          class="el-pn-icon"
          data-testid="close-icon"
        >
          <mock-styled.span
            classname="el-icon-new"
            style="font-size: 1.25rem;"
          >
            <svg
              fill="none"
              height="1em"
              style="font-size: 1.25rem;"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10A10 10 0 0 0 12 2Zm1.143 15.714h-2.286v-6h2.286v6Zm-1.143-8a1.714 1.714 0 1 1 0-3.428 1.714 1.714 0 0 1 0 3.428Z"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
        </div>
        <div
          class="el-pn-content"
        >
          No record of any consents for this app - you can send these from the link below.
        </div>
      </mock-styled.div>
    </div>
    <mock-styled.div>
      <mock-styled.div
        classname="el-button-group-align-center"
      >
        <mock-styled.button
          classname="el-intent-primary"
        >
          <mock-styled.div />
          Send Requests
        </mock-styled.button>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`AppConsents should match snapshot with consents and an approval 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.h2
        classname="el-mt5"
      >
        Reapit Insights
         Consents
      </mock-styled.h2>
      <mock-styled.div
        data-has-call-to-action="true"
        data-has-expandable-action="false"
        data-num-columns-excl-action-col="5"
      >
        <mock-styled.div>
          <mock-styled.div>
            Client
          </mock-styled.div>
          <mock-styled.div>
            Email
          </mock-styled.div>
          <mock-styled.div>
            Date Sent
          </mock-styled.div>
          <mock-styled.div>
            Status
          </mock-styled.div>
          <mock-styled.div>
            Date Accepted
          </mock-styled.div>
          <mock-styled.div>
            Resend Email
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div
              classname="el-table-cell-has-dark-text"
            >
              <mock-styled.span
                classname="el-intent-default"
                style="font-size: 1.25rem;"
              >
                <svg
                  fill="none"
                  height="1em"
                  style="font-size: 1.25rem;"
                  viewBox="0 0 20 20"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <g
                    clip-path="url(#flatInfographic_svg__a)"
                  >
                    <path
                      d="M20 20h-9V4h9v16Z"
                      fill="#d8dee4"
                    />
                    <path
                      d="M13 2h-1v18h1V2ZM1.28 0v1.787H0V20h12V0H1.28Z"
                      fill="#798da1"
                    />
                    <path
                      d="M5.149 4.505H3.617V6.38H5.15V4.505ZM8.962 4.505H7.43V6.38h1.532V4.505ZM3.617 8.255H5.15v1.875H3.617V8.255ZM8.962 8.255H7.43v1.875h1.532V8.255ZM3.617 12.006H5.15v1.875H3.617v-1.875ZM8.962 12.006H7.43v1.875h1.532v-1.875ZM3.617 15.756H5.15v1.875H3.617v-1.875ZM8.962 15.756H7.43v1.875h1.532v-1.875Z"
                      fill="#fff"
                    />
                    <path
                      d="M16.281 8.255h-1.532v1.875h1.532V8.255ZM16.281 12.006h-1.532v1.875h1.532v-1.875Z"
                      fill="#798da1"
                    />
                  </g>
                  <defs>
                    <clippath
                      id="flatInfographic_svg__a"
                    >
                      <path
                        d="M0 0h20v20H0z"
                        fill="#fff"
                      />
                    </clippath>
                  </defs>
                </svg>
              </mock-styled.span>
              <mock-styled.div
                data-narrow-label="Client"
              />
            </mock-styled.div>
            <mock-styled.div
              classname="el-table-cell-has-dark-text"
            >
              <mock-styled.div
                data-narrow-label="Email"
              >
                test@example.com
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="el-table-cell-has-dark-text"
            >
              <mock-styled.div
                data-narrow-label="Date Sent"
              >
                22/09/2022 13:38
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="el-table-cell-has-dark-text"
            >
              <mock-styled.div
                data-narrow-label="Status"
              >
                Pending
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname="el-table-cell-has-dark-text"
            >
              <mock-styled.div
                data-narrow-label="Date Accepted"
              >
                -
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.span
                  classname="el-intent-default"
                >
                  <svg
                    fill="none"
                    height="1em"
                    viewBox="0 0 20 16"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M18.125.5H1.875A1.877 1.877 0 0 0 0 2.375v11.25C0 14.659.841 15.5 1.875 15.5h16.25A1.877 1.877 0 0 0 20 13.625V2.375A1.877 1.877 0 0 0 18.125.5Zm0 1.25a.62.62 0 0 1 .24.048L10 9.048l-8.365-7.25a.622.622 0 0 1 .24-.048h16.25Zm0 12.5H1.875a.625.625 0 0 1-.625-.625V3.119l8.34 7.228a.624.624 0 0 0 .82 0l8.34-7.228v10.506c0 .345-.28.625-.625.625Z"
                      fill="currentColor"
                    />
                  </svg>
                </mock-styled.span>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.h2
      classname="el-mt5"
    >
      Reapit Insights
       Consents
    </mock-styled.h2>
    <mock-styled.div
      data-has-call-to-action="true"
      data-has-expandable-action="false"
      data-num-columns-excl-action-col="5"
    >
      <mock-styled.div>
        <mock-styled.div>
          Client
        </mock-styled.div>
        <mock-styled.div>
          Email
        </mock-styled.div>
        <mock-styled.div>
          Date Sent
        </mock-styled.div>
        <mock-styled.div>
          Status
        </mock-styled.div>
        <mock-styled.div>
          Date Accepted
        </mock-styled.div>
        <mock-styled.div>
          Resend Email
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div
            classname="el-table-cell-has-dark-text"
          >
            <mock-styled.span
              classname="el-intent-default"
              style="font-size: 1.25rem;"
            >
              <svg
                fill="none"
                height="1em"
                style="font-size: 1.25rem;"
                viewBox="0 0 20 20"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g
                  clip-path="url(#flatInfographic_svg__a)"
                >
                  <path
                    d="M20 20h-9V4h9v16Z"
                    fill="#d8dee4"
                  />
                  <path
                    d="M13 2h-1v18h1V2ZM1.28 0v1.787H0V20h12V0H1.28Z"
                    fill="#798da1"
                  />
                  <path
                    d="M5.149 4.505H3.617V6.38H5.15V4.505ZM8.962 4.505H7.43V6.38h1.532V4.505ZM3.617 8.255H5.15v1.875H3.617V8.255ZM8.962 8.255H7.43v1.875h1.532V8.255ZM3.617 12.006H5.15v1.875H3.617v-1.875ZM8.962 12.006H7.43v1.875h1.532v-1.875ZM3.617 15.756H5.15v1.875H3.617v-1.875ZM8.962 15.756H7.43v1.875h1.532v-1.875Z"
                    fill="#fff"
                  />
                  <path
                    d="M16.281 8.255h-1.532v1.875h1.532V8.255ZM16.281 12.006h-1.532v1.875h1.532v-1.875Z"
                    fill="#798da1"
                  />
                </g>
                <defs>
                  <clippath
                    id="flatInfographic_svg__a"
                  >
                    <path
                      d="M0 0h20v20H0z"
                      fill="#fff"
                    />
                  </clippath>
                </defs>
              </svg>
            </mock-styled.span>
            <mock-styled.div
              data-narrow-label="Client"
            />
          </mock-styled.div>
          <mock-styled.div
            classname="el-table-cell-has-dark-text"
          >
            <mock-styled.div
              data-narrow-label="Email"
            >
              test@example.com
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="el-table-cell-has-dark-text"
          >
            <mock-styled.div
              data-narrow-label="Date Sent"
            >
              22/09/2022 13:38
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="el-table-cell-has-dark-text"
          >
            <mock-styled.div
              data-narrow-label="Status"
            >
              Pending
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname="el-table-cell-has-dark-text"
          >
            <mock-styled.div
              data-narrow-label="Date Accepted"
            >
              -
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname="el-intent-default"
              >
                <svg
                  fill="none"
                  height="1em"
                  viewBox="0 0 20 16"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M18.125.5H1.875A1.877 1.877 0 0 0 0 2.375v11.25C0 14.659.841 15.5 1.875 15.5h16.25A1.877 1.877 0 0 0 20 13.625V2.375A1.877 1.877 0 0 0 18.125.5Zm0 1.25a.62.62 0 0 1 .24.048L10 9.048l-8.365-7.25a.622.622 0 0 1 .24-.048h16.25Zm0 12.5H1.875a.625.625 0 0 1-.625-.625V3.119l8.34 7.228a.624.624 0 0 0 .82 0l8.34-7.228v10.506c0 .345-.28.625-.625.625Z"
                    fill="currentColor"
                  />
                </svg>
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
