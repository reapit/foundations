// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrgGroupsTable should render component when loading 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <div
        class="el-loader-container"
      >
        <div
          class="el-loader"
        >
          <div
            class="el-loader-moving-bar"
          />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <div
      class="el-loader-container"
    >
      <div
        class="el-loader"
      >
        <div
          class="el-loader-moving-bar"
        />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`OrgGroupsTable should render component with data 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <h2
        class="el-subtitle"
      >
        Office Groups
      </h2>
      <div
        class="el-mb11 el-table"
      >
        <div
          class="four-col-table el-table-headers-row"
        >
          <div
            class="el-table-header"
          >
            Customer Id
          </div>
          <div
            class="el-table-header"
          >
            Group Name
          </div>
          <div
            class="el-table-header"
          >
            Office Ids
          </div>
          <div
            class="el-table-header"
          >
            Status
          </div>
        </div>
        <div
          class="four-col-table el-table-row"
        >
          <div
            class="el-table-cell"
          >
            <div
              class="el-table-cell-content"
            >
              RES-GGTN
            </div>
          </div>
          <div
            class="el-table-cell"
          >
            <div
              class="el-table-cell-content"
            >
              Group 10
            </div>
          </div>
          <div
            class="el-table-cell"
          >
            <div
              class="el-table-cell-content"
            >
              AAE,CSL,AAS
            </div>
          </div>
          <div
            class="el-table-cell"
          >
            <div
              class="el-table-cell-content"
            >
              inactive
            </div>
          </div>
        </div>
      </div>
      <div
        class="el-pagination-wrap"
      >
        <div
          class="el-pagination-text"
        >
          <input
            class="el-pagination-input"
            value="1"
          />
           of 
          1
        </div>
        <button
          class="el-pagination-button"
          data-testid="back-button"
          type="button"
        >
          <span
            class="el-icon"
          >
            <svg />
          </span>
        </button>
        <button
          class="el-pagination-button"
          data-testid="forward-button"
          type="button"
        >
          <span
            class="el-icon"
          >
            <svg />
          </span>
        </button>
      </div>
      <div
        class="el-mb11"
      >
        <div
          class="el-button-group"
        >
          <div
            class="el-button-group-inner"
          >
            <button
              class="el-intent-primary el-button"
              type="button"
            >
              Download CSV
              <div
                class="el-button-loader"
              />
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <h2
      class="el-subtitle"
    >
      Office Groups
    </h2>
    <div
      class="el-mb11 el-table"
    >
      <div
        class="four-col-table el-table-headers-row"
      >
        <div
          class="el-table-header"
        >
          Customer Id
        </div>
        <div
          class="el-table-header"
        >
          Group Name
        </div>
        <div
          class="el-table-header"
        >
          Office Ids
        </div>
        <div
          class="el-table-header"
        >
          Status
        </div>
      </div>
      <div
        class="four-col-table el-table-row"
      >
        <div
          class="el-table-cell"
        >
          <div
            class="el-table-cell-content"
          >
            RES-GGTN
          </div>
        </div>
        <div
          class="el-table-cell"
        >
          <div
            class="el-table-cell-content"
          >
            Group 10
          </div>
        </div>
        <div
          class="el-table-cell"
        >
          <div
            class="el-table-cell-content"
          >
            AAE,CSL,AAS
          </div>
        </div>
        <div
          class="el-table-cell"
        >
          <div
            class="el-table-cell-content"
          >
            inactive
          </div>
        </div>
      </div>
    </div>
    <div
      class="el-pagination-wrap"
    >
      <div
        class="el-pagination-text"
      >
        <input
          class="el-pagination-input"
          value="1"
        />
         of 
        1
      </div>
      <button
        class="el-pagination-button"
        data-testid="back-button"
        type="button"
      >
        <span
          class="el-icon"
        >
          <svg />
        </span>
      </button>
      <button
        class="el-pagination-button"
        data-testid="forward-button"
        type="button"
      >
        <span
          class="el-icon"
        >
          <svg />
        </span>
      </button>
    </div>
    <div
      class="el-mb11"
    >
      <div
        class="el-button-group"
      >
        <div
          class="el-button-group-inner"
        >
          <button
            class="el-intent-primary el-button"
            type="button"
          >
            Download CSV
            <div
              class="el-button-loader"
            />
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`OrgGroupsTable should render component with empty data 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <div
        class="el-mt7 el-intent-secondary el-is-active el-pn-is-full-width el-pn-is-inline el-persistent-notification"
      >
        <div
          class="el-pn-icon"
          data-testid="close-icon"
        >
          <span
            class="el-icon"
          >
            <svg />
          </span>
        </div>
        <div
          class="el-pn-content"
        >
          No office groups found for this organisation
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <div
      class="el-mt7 el-intent-secondary el-is-active el-pn-is-full-width el-pn-is-inline el-persistent-notification"
    >
      <div
        class="el-pn-icon"
        data-testid="close-icon"
      >
        <span
          class="el-icon"
        >
          <svg />
        </span>
      </div>
      <div
        class="el-pn-content"
      >
        No office groups found for this organisation
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
