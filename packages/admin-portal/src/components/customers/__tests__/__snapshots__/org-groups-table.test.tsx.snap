// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrgGroupsTable should render component when loading 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <div
        class="mocked-styled-44 el-loader-container"
      >
        <div
          class="mocked-styled-46 el-loader"
        >
          <div
            class="mocked-styled-47 el-loader-moving-bar"
          />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <div
      class="mocked-styled-44 el-loader-container"
    >
      <div
        class="mocked-styled-46 el-loader"
      >
        <div
          class="mocked-styled-47 el-loader-moving-bar"
        />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`OrgGroupsTable should render component with data 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <h2
        class="el-text-base el-subtitle"
      >
        Office Groups
      </h2>
      <div
        class="el-mb11 el-table"
      >
        <div
          class="mock-css.
  grid-template-columns: repeat(4, 1fr);
 el-table-headers-row"
        >
          <div
            class="mocked-styled-102 el-table-header"
          >
            Customer Id
          </div>
          <div
            class="mocked-styled-102 el-table-header"
          >
            Group Name
          </div>
          <div
            class="mocked-styled-102 el-table-header"
          >
            Office Ids
          </div>
          <div
            class="mocked-styled-102 el-table-header"
          >
            Status
          </div>
        </div>
        <div
          class="mock-css.
  grid-template-columns: repeat(4, 1fr);
 el-table-row"
        >
          <div
            class="el-table-cell-has-dark-text el-table-cell"
          >
            <div
              class="mocked-styled-111 el-table-cell-content"
            >
              RES-GGTN
            </div>
          </div>
          <div
            class="el-table-cell-has-dark-text el-table-cell"
          >
            <div
              class="mocked-styled-111 el-table-cell-content"
            >
              Group 10
            </div>
          </div>
          <div
            class="el-table-cell-has-dark-text el-table-cell"
          >
            <div
              class="mocked-styled-111 el-table-cell-content"
            >
              AAE,CSL,AAS
            </div>
          </div>
          <div
            class="el-table-cell-has-dark-text el-table-cell"
          >
            <div
              class="mocked-styled-111 el-table-cell-content"
            >
              inactive
            </div>
          </div>
        </div>
      </div>
      <div
        class="mocked-styled-71 el-pagination-wrap"
      >
        <button
          aria-label="Previous"
          class="mocked-styled-74 el-pagination-button"
          data-testid="back-button"
          role="button"
          type="button"
        >
          <span
            class="el-icon-new el-icon"
          >
            <svg
              fill="none"
              height="1em"
              role="img"
              title="Icon image with name chevronLeft"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M15.496 20.004a1 1 0 0 1-.71-.29l-6.99-7a1 1 0 0 1 0-1.42l6.99-7a1.002 1.002 0 0 1 1.678.45c.093.347-.006.716-.26.97l-6.291 6.29 6.292 6.29a1 1 0 0 1-.71 1.71"
                fill="currentColor"
              />
            </svg>
          </span>
        </button>
        <div
          class="mocked-styled-72 el-pagination-text"
        >
          <input
            aria-label="Current page number, edit to select page of 1 available"
            class="mocked-styled-73 el-pagination-input"
            value="1"
          />
           
          of 
          1
        </div>
        <button
          aria-label="Next"
          class="mocked-styled-74 el-pagination-button"
          data-testid="forward-button"
          role="button"
          type="button"
        >
          <span
            class="el-icon-new el-icon"
          >
            <svg
              fill="none"
              height="1em"
              role="img"
              title="Icon image with name chevronRight"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M8.505 20.004a1 1 0 0 1-1.005-1 1 1 0 0 1 .295-.71l6.292-6.29-6.292-6.29a1.005 1.005 0 0 1 0-1.42 1 1 0 0 1 1.419 0l6.99 7a1 1 0 0 1 0 1.42l-6.99 7a1 1 0 0 1-.71.29"
                fill="currentColor"
              />
            </svg>
          </span>
        </button>
      </div>
      <div
        class="el-mb11"
      >
        <div
          class="mocked-styled-2 el-button-group"
        >
          <div
            class="mocked-styled-3 el-button-group-inner"
          >
            <button
              class="el-intent-primary el-button"
              type="button"
            >
              <div
                class="mocked-styled-0 el-button-loader"
              />
              Download CSV
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <h2
      class="el-text-base el-subtitle"
    >
      Office Groups
    </h2>
    <div
      class="el-mb11 el-table"
    >
      <div
        class="mock-css.
  grid-template-columns: repeat(4, 1fr);
 el-table-headers-row"
      >
        <div
          class="mocked-styled-102 el-table-header"
        >
          Customer Id
        </div>
        <div
          class="mocked-styled-102 el-table-header"
        >
          Group Name
        </div>
        <div
          class="mocked-styled-102 el-table-header"
        >
          Office Ids
        </div>
        <div
          class="mocked-styled-102 el-table-header"
        >
          Status
        </div>
      </div>
      <div
        class="mock-css.
  grid-template-columns: repeat(4, 1fr);
 el-table-row"
      >
        <div
          class="el-table-cell-has-dark-text el-table-cell"
        >
          <div
            class="mocked-styled-111 el-table-cell-content"
          >
            RES-GGTN
          </div>
        </div>
        <div
          class="el-table-cell-has-dark-text el-table-cell"
        >
          <div
            class="mocked-styled-111 el-table-cell-content"
          >
            Group 10
          </div>
        </div>
        <div
          class="el-table-cell-has-dark-text el-table-cell"
        >
          <div
            class="mocked-styled-111 el-table-cell-content"
          >
            AAE,CSL,AAS
          </div>
        </div>
        <div
          class="el-table-cell-has-dark-text el-table-cell"
        >
          <div
            class="mocked-styled-111 el-table-cell-content"
          >
            inactive
          </div>
        </div>
      </div>
    </div>
    <div
      class="mocked-styled-71 el-pagination-wrap"
    >
      <button
        aria-label="Previous"
        class="mocked-styled-74 el-pagination-button"
        data-testid="back-button"
        role="button"
        type="button"
      >
        <span
          class="el-icon-new el-icon"
        >
          <svg
            fill="none"
            height="1em"
            role="img"
            title="Icon image with name chevronLeft"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M15.496 20.004a1 1 0 0 1-.71-.29l-6.99-7a1 1 0 0 1 0-1.42l6.99-7a1.002 1.002 0 0 1 1.678.45c.093.347-.006.716-.26.97l-6.291 6.29 6.292 6.29a1 1 0 0 1-.71 1.71"
              fill="currentColor"
            />
          </svg>
        </span>
      </button>
      <div
        class="mocked-styled-72 el-pagination-text"
      >
        <input
          aria-label="Current page number, edit to select page of 1 available"
          class="mocked-styled-73 el-pagination-input"
          value="1"
        />
         
        of 
        1
      </div>
      <button
        aria-label="Next"
        class="mocked-styled-74 el-pagination-button"
        data-testid="forward-button"
        role="button"
        type="button"
      >
        <span
          class="el-icon-new el-icon"
        >
          <svg
            fill="none"
            height="1em"
            role="img"
            title="Icon image with name chevronRight"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.505 20.004a1 1 0 0 1-1.005-1 1 1 0 0 1 .295-.71l6.292-6.29-6.292-6.29a1.005 1.005 0 0 1 0-1.42 1 1 0 0 1 1.419 0l6.99 7a1 1 0 0 1 0 1.42l-6.99 7a1 1 0 0 1-.71.29"
              fill="currentColor"
            />
          </svg>
        </span>
      </button>
    </div>
    <div
      class="el-mb11"
    >
      <div
        class="mocked-styled-2 el-button-group"
      >
        <div
          class="mocked-styled-3 el-button-group-inner"
        >
          <button
            class="el-intent-primary el-button"
            type="button"
          >
            <div
              class="mocked-styled-0 el-button-loader"
            />
            Download CSV
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`OrgGroupsTable should render component with empty data 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <div
        class="el-mt7 el-intent-primary el-is-active el-pn-is-full-width el-pn-is-inline el-persistent-notification"
        role="status"
      >
        <div
          class="el-pn-icon"
          data-testid="close-icon"
        >
          <span
            class="el-icon-new el-icon"
            style="font-size: 1.25rem;"
          >
            <svg
              fill="none"
              height="1em"
              role="img"
              style="font-size: 1.25rem;"
              title="Icon image with name info"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10A10 10 0 0 0 12 2m1.143 15.714h-2.286v-6h2.286zm-1.143-8a1.714 1.714 0 1 1 0-3.428 1.714 1.714 0 0 1 0 3.428"
                fill="currentColor"
              />
            </svg>
          </span>
        </div>
        <div
          aria-live="polite"
          class="el-pn-content"
        >
          No office groups found for this organisation
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <div
      class="el-mt7 el-intent-primary el-is-active el-pn-is-full-width el-pn-is-inline el-persistent-notification"
      role="status"
    >
      <div
        class="el-pn-icon"
        data-testid="close-icon"
      >
        <span
          class="el-icon-new el-icon"
          style="font-size: 1.25rem;"
        >
          <svg
            fill="none"
            height="1em"
            role="img"
            style="font-size: 1.25rem;"
            title="Icon image with name info"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10A10 10 0 0 0 12 2m1.143 15.714h-2.286v-6h2.286zm-1.143-8a1.714 1.714 0 1 1 0-3.428 1.714 1.714 0 0 1 0 3.428"
              fill="currentColor"
            />
          </svg>
        </span>
      </div>
      <div
        aria-live="polite"
        class="el-pn-content"
      >
        No office groups found for this organisation
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
