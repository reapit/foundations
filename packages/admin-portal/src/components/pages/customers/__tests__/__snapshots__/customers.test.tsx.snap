// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <div>
        <div
          class="mb-5"
        >
          <div
            style="overflow: scroll;"
          >
            <table
              class="table is-striped is-fullwidth "
              role="table"
            >
              <thead>
                <tr
                  role="row"
                >
                  <th
                    colspan="1"
                    role="columnheader"
                  >
                    Customer ID
                  </th>
                  <th
                    colspan="1"
                    role="columnheader"
                  >
                    Company
                  </th>
                  <th
                    colspan="1"
                    role="columnheader"
                  >
                    Address
                  </th>
                  <th
                    colspan="1"
                    role="columnheader"
                  >
                    Logo
                  </th>
                  <th
                    colspan="1"
                    role="columnheader"
                  />
                </tr>
              </thead>
              <tbody>
                <tr
                  class=""
                  role="row"
                >
                  <td
                    role="cell"
                  >
                    SBOS
                  </td>
                  <td
                    role="cell"
                  >
                    RyanWilcoxNew
                  </td>
                  <td
                    role="cell"
                  >
                     11 Birmingham Road string string string string GB
                  </td>
                  <td
                    role="cell"
                  >
                    <svg
                      class="has-text-danger"
                      fill="currentColor"
                      height="1em"
                      stroke="currentColor"
                      stroke-width="0"
                      viewBox="0 0 352 512"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                      />
                    </svg>
                  </td>
                  <td
                    role="cell"
                  >
                    <button
                      class="button   is-primary "
                      data-test=""
                      type="button"
                    >
                      LOGO UPLOAD
                    </button>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <div>
      <div
        class="mb-5"
      >
        <div
          style="overflow: scroll;"
        >
          <table
            class="table is-striped is-fullwidth "
            role="table"
          >
            <thead>
              <tr
                role="row"
              >
                <th
                  colspan="1"
                  role="columnheader"
                >
                  Customer ID
                </th>
                <th
                  colspan="1"
                  role="columnheader"
                >
                  Company
                </th>
                <th
                  colspan="1"
                  role="columnheader"
                >
                  Address
                </th>
                <th
                  colspan="1"
                  role="columnheader"
                >
                  Logo
                </th>
                <th
                  colspan="1"
                  role="columnheader"
                />
              </tr>
            </thead>
            <tbody>
              <tr
                class=""
                role="row"
              >
                <td
                  role="cell"
                >
                  SBOS
                </td>
                <td
                  role="cell"
                >
                  RyanWilcoxNew
                </td>
                <td
                  role="cell"
                >
                   11 Birmingham Road string string string string GB
                </td>
                <td
                  role="cell"
                >
                  <svg
                    class="has-text-danger"
                    fill="currentColor"
                    height="1em"
                    stroke="currentColor"
                    stroke-width="0"
                    viewBox="0 0 352 512"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                    />
                  </svg>
                </td>
                <td
                  role="cell"
                >
                  <button
                    class="button   is-primary "
                    data-test=""
                    type="button"
                  >
                    LOGO UPLOAD
                  </button>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`CheckMarkCell should match snapshot with value 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <svg
        class="has-text-success"
        fill="currentColor"
        height="1em"
        stroke="currentColor"
        stroke-width="0"
        viewBox="0 0 512 512"
        width="1em"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
        />
      </svg>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <svg
      class="has-text-success"
      fill="currentColor"
      height="1em"
      stroke="currentColor"
      stroke-width="0"
      viewBox="0 0 512 512"
      width="1em"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
      />
    </svg>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`CheckMarkCell should match snapshot without value 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <svg
        class="has-text-danger"
        fill="currentColor"
        height="1em"
        stroke="currentColor"
        stroke-width="0"
        viewBox="0 0 352 512"
        width="1em"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
        />
      </svg>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <svg
      class="has-text-danger"
      fill="currentColor"
      height="1em"
      stroke="currentColor"
      stroke-width="0"
      viewBox="0 0 352 512"
      width="1em"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
      />
    </svg>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Customers should match a snapshot when LOADING false 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <div>
        <div
          class="mb-5"
        >
          <div
            style="overflow: scroll;"
          >
            <table
              class="table is-striped is-fullwidth "
              role="table"
            >
              <thead>
                <tr
                  role="row"
                >
                  <th
                    colspan="1"
                    role="columnheader"
                  >
                    Customer ID
                  </th>
                  <th
                    colspan="1"
                    role="columnheader"
                  >
                    Company
                  </th>
                  <th
                    colspan="1"
                    role="columnheader"
                  >
                    Address
                  </th>
                  <th
                    colspan="1"
                    role="columnheader"
                  >
                    Logo
                  </th>
                  <th
                    colspan="1"
                    role="columnheader"
                  />
                </tr>
              </thead>
              <tbody>
                <tr
                  class=""
                  role="row"
                >
                  <td
                    role="cell"
                  >
                    SBOS
                  </td>
                  <td
                    role="cell"
                  >
                    RyanWilcoxNew
                  </td>
                  <td
                    role="cell"
                  >
                     11 Birmingham Road string string string string GB
                  </td>
                  <td
                    role="cell"
                  >
                    <svg
                      class="has-text-danger"
                      fill="currentColor"
                      height="1em"
                      stroke="currentColor"
                      stroke-width="0"
                      viewBox="0 0 352 512"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                      />
                    </svg>
                  </td>
                  <td
                    role="cell"
                  >
                    <button
                      class="button   is-primary "
                      data-test=""
                      type="button"
                    >
                      LOGO UPLOAD
                    </button>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div
        class="el-snack-holder"
      />
      <section
        class="el-page-container"
      >
        <h1
          class="el-title"
        >
          Customers
        </h1>
        <form
          action="#"
          novalidate=""
        >
          <div
            class="form-section"
          >
            <div
              class="columns items-center"
              data-test=""
            >
              <div
                class="column"
                data-test=""
              >
                <div
                  class="field"
                >
                  <div
                    class="control "
                  >
                    <label
                      class="label inline-block "
                      for="name"
                    >
                      Company Name
                    </label>
                    <input
                      class="input is-primary"
                      data-test=""
                      id="name"
                      maxlength="256"
                      name="name"
                      placeholder=""
                      type="text"
                      value=""
                    />
                  </div>
                </div>
              </div>
              <div
                class="column mt-4"
                data-test=""
              >
                <button
                  class="button   is-primary "
                  data-test=""
                  type="submit"
                >
                  Search
                </button>
                <button
                  class="button   is-primary "
                  data-test=""
                  type="reset"
                >
                  Refresh
                </button>
              </div>
            </div>
          </div>
        </form>
        <section
          class="section has-margin has-background"
          data-test=""
        >
          <div>
            Total: 
            0
          </div>
        </section>
        <div
          class="notification is-info "
          data-test=""
          role="alert"
        >
          No Results 
        </div>
      </section>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <section
      class="el-page-container"
    >
      <h1
        class="el-title"
      >
        Customers
      </h1>
      <form
        action="#"
        novalidate=""
      >
        <div
          class="form-section"
        >
          <div
            class="columns items-center"
            data-test=""
          >
            <div
              class="column"
              data-test=""
            >
              <div
                class="field"
              >
                <div
                  class="control "
                >
                  <label
                    class="label inline-block "
                    for="name"
                  >
                    Company Name
                  </label>
                  <input
                    class="input is-primary"
                    data-test=""
                    id="name"
                    maxlength="256"
                    name="name"
                    placeholder=""
                    type="text"
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              class="column mt-4"
              data-test=""
            >
              <button
                class="button   is-primary "
                data-test=""
                type="submit"
              >
                Search
              </button>
              <button
                class="button   is-primary "
                data-test=""
                type="reset"
              >
                Refresh
              </button>
            </div>
          </div>
        </div>
      </form>
      <section
        class="section has-margin has-background"
        data-test=""
      >
        <div>
          Total: 
          0
        </div>
      </section>
      <div
        class="notification is-info "
        data-test=""
        role="alert"
      >
        No Results 
      </div>
    </section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Customers should match a snapshot when LOADING true 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <div
        class="el-loader-container"
      >
        <div
          class="el-loader"
        >
          <div
            class="el-loader-moving-bar"
          />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <div
      class="el-loader-container"
    >
      <div
        class="el-loader"
      >
        <div
          class="el-loader-moving-bar"
        />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Customers should match a snapshot when data is empty 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <section
        class="el-page-container"
      >
        <h1
          class="el-title"
        >
          Customers
        </h1>
        <form
          action="#"
          novalidate=""
        >
          <div
            class="form-section"
          >
            <div
              class="columns items-center"
              data-test=""
            >
              <div
                class="column"
                data-test=""
              >
                <div
                  class="field"
                >
                  <div
                    class="control "
                  >
                    <label
                      class="label inline-block "
                      for="name"
                    >
                      Company Name
                    </label>
                    <input
                      class="input is-primary"
                      data-test=""
                      id="name"
                      maxlength="256"
                      name="name"
                      placeholder=""
                      type="text"
                      value=""
                    />
                  </div>
                </div>
              </div>
              <div
                class="column mt-4"
                data-test=""
              >
                <button
                  class="button   is-primary "
                  data-test=""
                  type="submit"
                >
                  Search
                </button>
                <button
                  class="button   is-primary "
                  data-test=""
                  type="reset"
                >
                  Refresh
                </button>
              </div>
            </div>
          </div>
        </form>
        <section
          class="section has-margin has-background"
          data-test=""
        >
          <div>
            Total: 
            0
          </div>
        </section>
        <div
          class="notification is-info "
          data-test=""
          role="alert"
        >
          No Results 
        </div>
      </section>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <section
      class="el-page-container"
    >
      <h1
        class="el-title"
      >
        Customers
      </h1>
      <form
        action="#"
        novalidate=""
      >
        <div
          class="form-section"
        >
          <div
            class="columns items-center"
            data-test=""
          >
            <div
              class="column"
              data-test=""
            >
              <div
                class="field"
              >
                <div
                  class="control "
                >
                  <label
                    class="label inline-block "
                    for="name"
                  >
                    Company Name
                  </label>
                  <input
                    class="input is-primary"
                    data-test=""
                    id="name"
                    maxlength="256"
                    name="name"
                    placeholder=""
                    type="text"
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              class="column mt-4"
              data-test=""
            >
              <button
                class="button   is-primary "
                data-test=""
                type="submit"
              >
                Search
              </button>
              <button
                class="button   is-primary "
                data-test=""
                type="reset"
              >
                Refresh
              </button>
            </div>
          </div>
        </div>
      </form>
      <section
        class="section has-margin has-background"
        data-test=""
      >
        <div>
          Total: 
          0
        </div>
      </section>
      <div
        class="notification is-info "
        data-test=""
        role="alert"
      >
        No Results 
      </div>
    </section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`CustomersFilterForm should match snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <form
        action="#"
        novalidate=""
      >
        <div
          class="form-section"
        >
          <div
            class="columns items-center"
            data-test=""
          >
            <div
              class="column"
              data-test=""
            >
              <div
                class="field"
              >
                <div
                  class="control "
                >
                  <label
                    class="label inline-block "
                    for="name"
                  >
                    Company Name
                  </label>
                  <input
                    class="input is-primary"
                    data-test=""
                    id="name"
                    maxlength="256"
                    name="name"
                    placeholder=""
                    type="text"
                    value="test"
                  />
                </div>
              </div>
            </div>
            <div
              class="column mt-4"
              data-test=""
            >
              <button
                class="button   is-primary "
                data-test=""
                type="submit"
              >
                Search
              </button>
              <button
                class="button   is-primary "
                data-test=""
                type="reset"
              >
                Refresh
              </button>
            </div>
          </div>
        </div>
      </form>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <form
      action="#"
      novalidate=""
    >
      <div
        class="form-section"
      >
        <div
          class="columns items-center"
          data-test=""
        >
          <div
            class="column"
            data-test=""
          >
            <div
              class="field"
            >
              <div
                class="control "
              >
                <label
                  class="label inline-block "
                  for="name"
                >
                  Company Name
                </label>
                <input
                  class="input is-primary"
                  data-test=""
                  id="name"
                  maxlength="256"
                  name="name"
                  placeholder=""
                  type="text"
                  value="test"
                />
              </div>
            </div>
          </div>
          <div
            class="column mt-4"
            data-test=""
          >
            <button
              class="button   is-primary "
              data-test=""
              type="submit"
            >
              Search
            </button>
            <button
              class="button   is-primary "
              data-test=""
              type="reset"
            >
              Refresh
            </button>
          </div>
        </div>
      </div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`LogoUploadButtonCell should match snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <button
        class="button   is-primary "
        data-test=""
        type="button"
      >
        LOGO UPLOAD
      </button>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <button
      class="button   is-primary "
      data-test=""
      type="button"
    >
      LOGO UPLOAD
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
