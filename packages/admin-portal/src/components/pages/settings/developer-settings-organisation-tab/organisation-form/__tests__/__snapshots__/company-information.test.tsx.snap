// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrganisationForm CompanyAddressSection should match a snapshot when no error 1`] = `
<Fragment>
  <Component>
    <Component>
      <Component
        id="line1"
        labelText="Address Line 1*"
        name="line1"
        type="text"
      />
    </Component>
    <Component>
      <Component
        id="line2"
        labelText="Address Line 2"
        name="line2"
        type="text"
      />
    </Component>
  </Component>
  <Component>
    <Component>
      <Component
        id="line3"
        labelText="Address Line 3"
        name="line3"
        type="text"
      />
    </Component>
    <Component>
      <Component
        id="line4"
        labelText="Address Line 4"
        name="line4"
        type="text"
      />
    </Component>
  </Component>
  <Component>
    <Component>
      <Component
        id="countryId"
        labelText="Country"
        name="countryId"
        options={Array []}
      />
    </Component>
    <Component>
      <Component
        id="postCode"
        labelText="Postcode"
        name="postCode"
        type="text"
      />
    </Component>
  </Component>
</Fragment>
`;

exports[`OrganisationForm CompanyInformationSection should match a snapshot when no error 1`] = `
<Fragment>
  <Component>
    <Component>
      <Component
        id="companyName"
        labelText="Company Name"
        name="companyName"
        type="text"
      />
    </Component>
    <Component>
      <Component
        id="tel"
        labelText="Telephone"
        name="tel"
        type="text"
      />
    </Component>
  </Component>
  <Component>
    <Component>
      <Component
        id="website"
        labelText="Website"
        name="website"
        type="text"
      />
    </Component>
    <Component>
      <Component
        id="officeEmail"
        labelText="Office Email"
        name="officeEmail"
        type="text"
      />
    </Component>
  </Component>
  <Component>
    <Component>
      <Component
        disabled={false}
        id="vatNumber"
        labelText="VAT Number"
        name="vatNumber"
        type="text"
      />
      <Component
        id="noVatNumber"
        labelText="No VAT Number"
        name="noVatNumber"
      />
    </Component>
    <Component>
      <Component
        disabled={false}
        id="reg"
        labelText="Company registration number"
        name="reg"
        type="text"
      />
      <Component
        id="noReg"
        labelText="No Company registration number"
        name="noReg"
      />
    </Component>
  </Component>
  <Component>
    <Component>
      <Component
        id="about"
        labelText="About"
        name="about"
      />
    </Component>
    <Component>
      <div
        className="control"
      >
        <label
          className="label"
        >
          Logo
        </label>
        <Component
          allowClear={true}
          id="iconImageUrl"
          labelText="Upload Logo"
          name="iconImageUrl"
        />
      </div>
    </Component>
  </Component>
</Fragment>
`;

exports[`OrganisationForm should match a snapshot when no error 1`] = `
<Formik
  initialValues={
    Object {
      "about": "",
      "companyName": "",
      "countryId": "",
      "iconImageUrl": "",
      "line1": "",
      "line2": "",
      "line3": "",
      "line4": "",
      "nationalInsuranceNumber": "",
      "noReg": false,
      "noVatNumber": false,
      "officeEmail": "",
      "postCode": "",
      "reg": "",
      "tel": "",
      "vatNumber": "",
      "website": "",
    }
  }
  onSubmit={[Function]}
  validationSchema={
    ObjectSchema {
      "_blacklist": RefSet {
        "list": Set {},
        "refs": Map {},
      },
      "_conditions": Array [],
      "_defaultDefault": [Function],
      "_deps": Array [],
      "_excludedEdges": Array [],
      "_exclusive": Object {},
      "_mutate": undefined,
      "_nodes": Array [
        "officeEmail",
        "vatNumber",
      ],
      "_options": Object {
        "abortEarly": true,
        "recursive": true,
      },
      "_type": "object",
      "_typeError": [Function],
      "_whitelist": RefSet {
        "list": Set {},
        "refs": Map {},
      },
      "fields": Object {
        "officeEmail": StringSchema {
          "_blacklist": RefSet {
            "list": Set {},
            "refs": Map {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {
            "email": false,
          },
          "_mutate": undefined,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": RefSet {
            "list": Set {},
            "refs": Map {},
          },
          "tests": Array [
            [Function],
          ],
          "transforms": Array [
            [Function],
          ],
          "type": "string",
        },
        "vatNumber": StringSchema {
          "_blacklist": RefSet {
            "list": Set {},
            "refs": Map {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {
            "required": true,
            "trim": false,
          },
          "_mutate": undefined,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": RefSet {
            "list": Set {},
            "refs": Map {},
          },
          "tests": Array [
            [Function],
            [Function],
          ],
          "transforms": Array [
            [Function],
            [Function],
          ],
          "type": "string",
        },
      },
      "tests": Array [],
      "transforms": Array [
        [Function],
      ],
      "type": "object",
    }
  }
>
  <Component />
</Formik>
`;
