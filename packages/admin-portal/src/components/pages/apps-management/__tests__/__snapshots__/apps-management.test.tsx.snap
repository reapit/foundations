// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <div>
        <div
          class="mb-5"
        >
          <div
            style="overflow: scroll;"
          >
            <table
              class="table is-striped is-fullwidth "
              role="table"
            >
              <thead>
                <tr
                  role="row"
                >
                  <th
                    colspan="1"
                    role="columnheader"
                  >
                    AppID
                  </th>
                  <th
                    colspan="1"
                    role="columnheader"
                  >
                    App Name
                  </th>
                  <th
                    colspan="1"
                    role="columnheader"
                  >
                    App Summary
                  </th>
                  <th
                    colspan="1"
                    role="columnheader"
                  >
                    Developer Name
                  </th>
                  <th
                    colspan="1"
                    role="columnheader"
                  >
                    Is Listed
                  </th>
                  <th
                    colspan="1"
                    role="columnheader"
                  >
                    Pending Revisions
                  </th>
                  <th
                    colspan="1"
                    role="columnheader"
                  >
                    Direct API
                  </th>
                  <th
                    colspan="1"
                    role="columnheader"
                  >
                    Created
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr
                  class=""
                  role="row"
                >
                  <td
                    role="cell"
                  >
                    09043eb8-9e5e-4650-b7f1-f0cb62699027
                  </td>
                  <td
                    role="cell"
                  >
                    test
                  </td>
                  <td
                    role="cell"
                  >
                    nXXT2zaK807ysWgy8F0WEhIYRP3TgosAtfuiLtQCImoSx0kynxbIF0nkGHU36Oz13kM3DG0Bcsicr8L6eWFKLBg4axlmiOEWcvwHAbBP9LRvoFkCl58k1wjhOExnpaZItEyOT1AXVKv8PE44aMGtVz
                  </td>
                  <td
                    role="cell"
                  >
                    Pete's Proptech World Ltd
                  </td>
                  <td
                    role="cell"
                  />
                  <td
                    role="cell"
                  />
                  <td
                    role="cell"
                  />
                  <td
                    role="cell"
                  >
                    <p>
                      02 Feb 2020 10:45
                    </p>
                  </td>
                </tr>
                <tr
                  class=""
                  role="row"
                >
                  <td
                    role="cell"
                  >
                    261da083-cee2-4f5c-a18f-8f9375f1f5af
                  </td>
                  <td
                    role="cell"
                  >
                    asd
                  </td>
                  <td
                    role="cell"
                  >
                    asdQiiAJTmXGxPin7pwUiCsepZWXz1EJS71eGlvgPKH4hpE6J8DRDpzP2kDdOwpQPr4aHCCwWwxBJwzARLa7wMpJh5J61GhmQjLfKZkcDd47L9WEfQYVYAj0DTPJP0BuUMAAg2
                  </td>
                  <td
                    role="cell"
                  >
                    Pete's Proptech World Ltd
                  </td>
                  <td
                    role="cell"
                  />
                  <td
                    role="cell"
                  />
                  <td
                    role="cell"
                  />
                  <td
                    role="cell"
                  >
                    <p>
                      02 Feb 2020 10:45
                    </p>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <div>
      <div
        class="mb-5"
      >
        <div
          style="overflow: scroll;"
        >
          <table
            class="table is-striped is-fullwidth "
            role="table"
          >
            <thead>
              <tr
                role="row"
              >
                <th
                  colspan="1"
                  role="columnheader"
                >
                  AppID
                </th>
                <th
                  colspan="1"
                  role="columnheader"
                >
                  App Name
                </th>
                <th
                  colspan="1"
                  role="columnheader"
                >
                  App Summary
                </th>
                <th
                  colspan="1"
                  role="columnheader"
                >
                  Developer Name
                </th>
                <th
                  colspan="1"
                  role="columnheader"
                >
                  Is Listed
                </th>
                <th
                  colspan="1"
                  role="columnheader"
                >
                  Pending Revisions
                </th>
                <th
                  colspan="1"
                  role="columnheader"
                >
                  Direct API
                </th>
                <th
                  colspan="1"
                  role="columnheader"
                >
                  Created
                </th>
              </tr>
            </thead>
            <tbody>
              <tr
                class=""
                role="row"
              >
                <td
                  role="cell"
                >
                  09043eb8-9e5e-4650-b7f1-f0cb62699027
                </td>
                <td
                  role="cell"
                >
                  test
                </td>
                <td
                  role="cell"
                >
                  nXXT2zaK807ysWgy8F0WEhIYRP3TgosAtfuiLtQCImoSx0kynxbIF0nkGHU36Oz13kM3DG0Bcsicr8L6eWFKLBg4axlmiOEWcvwHAbBP9LRvoFkCl58k1wjhOExnpaZItEyOT1AXVKv8PE44aMGtVz
                </td>
                <td
                  role="cell"
                >
                  Pete's Proptech World Ltd
                </td>
                <td
                  role="cell"
                />
                <td
                  role="cell"
                />
                <td
                  role="cell"
                />
                <td
                  role="cell"
                >
                  <p>
                    02 Feb 2020 10:45
                  </p>
                </td>
              </tr>
              <tr
                class=""
                role="row"
              >
                <td
                  role="cell"
                >
                  261da083-cee2-4f5c-a18f-8f9375f1f5af
                </td>
                <td
                  role="cell"
                >
                  asd
                </td>
                <td
                  role="cell"
                >
                  asdQiiAJTmXGxPin7pwUiCsepZWXz1EJS71eGlvgPKH4hpE6J8DRDpzP2kDdOwpQPr4aHCCwWwxBJwzARLa7wMpJh5J61GhmQjLfKZkcDd47L9WEfQYVYAj0DTPJP0BuUMAAg2
                </td>
                <td
                  role="cell"
                >
                  Pete's Proptech World Ltd
                </td>
                <td
                  role="cell"
                />
                <td
                  role="cell"
                />
                <td
                  role="cell"
                />
                <td
                  role="cell"
                >
                  <p>
                    02 Feb 2020 10:45
                  </p>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`admin-apps AdminApprovals should match a snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <section
        class="el-page-container"
      >
        <h1
          class="el-title"
        >
          App Management
        </h1>
        <form
          action="#"
        >
          <div
            class="form-section"
          >
            <div
              class="form-heading"
            >
              Admin Apps Filter Form
            </div>
            <div
              class="form-subheading"
            >
              Filter the result by App, Developer and Company
            </div>
            <div
              class="columns"
              data-test=""
            >
              <div
                class="column"
                data-test=""
              >
                <div
                  class="field"
                >
                  <div
                    class="control "
                  >
                    <label
                      class="label inline-block "
                      for="appName"
                    >
                      App Name
                    </label>
                    <input
                      class="input is-primary"
                      data-test=""
                      id="appName"
                      maxlength="256"
                      name="appName"
                      placeholder=""
                      type="text"
                      value=""
                    />
                  </div>
                </div>
              </div>
              <div
                class="column"
                data-test=""
              >
                <div
                  class="field"
                >
                  <div
                    class="control "
                  >
                    <label
                      class="label inline-block "
                      for="developerName"
                    >
                      Developer Name
                    </label>
                    <input
                      class="input is-primary"
                      data-test=""
                      id="developerName"
                      maxlength="256"
                      name="developerName"
                      placeholder=""
                      type="text"
                      value=""
                    />
                  </div>
                </div>
              </div>
              <div
                class="column"
                data-test=""
              >
                <div
                  class="field"
                >
                  <div
                    class="control "
                  >
                    <label
                      class="label inline-block "
                      for="companyName"
                    >
                      Company Name
                    </label>
                    <input
                      class="input is-primary"
                      data-test=""
                      id="companyName"
                      maxlength="256"
                      name="companyName"
                      placeholder=""
                      type="text"
                      value=""
                    />
                  </div>
                </div>
              </div>
            </div>
            <div
              class="columns"
              data-test=""
            >
              <div
                class="column"
                data-test=""
              >
                <div
                  class="field"
                >
                  <div
                    class="control"
                  >
                    <label
                      class="label "
                      for="registeredFrom"
                    >
                      Registered From
                    </label>
                    <div
                      class="react-datepicker-wrapper"
                    >
                      <div
                        class="react-datepicker__input-container"
                      >
                        <input
                          class="input is-primary input is-primary"
                          id="registeredFrom"
                          name="registeredFrom"
                          type="input"
                          value=""
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div
                class="column"
                data-test=""
              >
                <div
                  class="field"
                >
                  <div
                    class="control"
                  >
                    <label
                      class="label "
                      for="registeredTo"
                    >
                      Registered To
                    </label>
                    <div
                      class="react-datepicker-wrapper"
                    >
                      <div
                        class="react-datepicker__input-container"
                      >
                        <input
                          class="input is-primary input is-primary"
                          id="registeredTo"
                          name="registeredTo"
                          type="input"
                          value=""
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div
                class="column"
                data-test=""
              >
                <div
                  class="field "
                >
                  <div
                    class="control"
                  >
                    <div
                      class="field field-checkbox"
                    >
                      <input
                        class="checkbox"
                        data-test=""
                        id="isListed"
                        type="checkbox"
                        value=""
                      />
                      <label
                        class="label"
                        for="isListed"
                      >
                        Is Listed
                      </label>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              class="columns"
              data-test=""
            >
              <div
                class="column"
                data-test=""
              >
                 
              </div>
              <div
                class="column"
                data-test=""
              >
                <div
                  class="level-right mt-5 pt-2"
                  data-test=""
                >
                  <button
                    class="button   is-primary "
                    data-test=""
                    type="submit"
                  >
                    Search
                  </button>
                  <button
                    class="button   is-primary "
                    data-test=""
                    type="reset"
                  >
                    Refresh
                  </button>
                </div>
              </div>
            </div>
          </div>
        </form>
        <section
          class="section has-padding has-margin has-background"
          data-test=""
        >
          <span>
            Total apps: 
            0
          </span>
        </section>
        <section
          class="section has-padding has-margin has-background"
          data-test=""
        >
          <div
            class="notification is-info "
            data-test=""
            role="alert"
          >
            No Results 
          </div>
        </section>
      </section>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <section
      class="el-page-container"
    >
      <h1
        class="el-title"
      >
        App Management
      </h1>
      <form
        action="#"
      >
        <div
          class="form-section"
        >
          <div
            class="form-heading"
          >
            Admin Apps Filter Form
          </div>
          <div
            class="form-subheading"
          >
            Filter the result by App, Developer and Company
          </div>
          <div
            class="columns"
            data-test=""
          >
            <div
              class="column"
              data-test=""
            >
              <div
                class="field"
              >
                <div
                  class="control "
                >
                  <label
                    class="label inline-block "
                    for="appName"
                  >
                    App Name
                  </label>
                  <input
                    class="input is-primary"
                    data-test=""
                    id="appName"
                    maxlength="256"
                    name="appName"
                    placeholder=""
                    type="text"
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              class="column"
              data-test=""
            >
              <div
                class="field"
              >
                <div
                  class="control "
                >
                  <label
                    class="label inline-block "
                    for="developerName"
                  >
                    Developer Name
                  </label>
                  <input
                    class="input is-primary"
                    data-test=""
                    id="developerName"
                    maxlength="256"
                    name="developerName"
                    placeholder=""
                    type="text"
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              class="column"
              data-test=""
            >
              <div
                class="field"
              >
                <div
                  class="control "
                >
                  <label
                    class="label inline-block "
                    for="companyName"
                  >
                    Company Name
                  </label>
                  <input
                    class="input is-primary"
                    data-test=""
                    id="companyName"
                    maxlength="256"
                    name="companyName"
                    placeholder=""
                    type="text"
                    value=""
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            class="columns"
            data-test=""
          >
            <div
              class="column"
              data-test=""
            >
              <div
                class="field"
              >
                <div
                  class="control"
                >
                  <label
                    class="label "
                    for="registeredFrom"
                  >
                    Registered From
                  </label>
                  <div
                    class="react-datepicker-wrapper"
                  >
                    <div
                      class="react-datepicker__input-container"
                    >
                      <input
                        class="input is-primary input is-primary"
                        id="registeredFrom"
                        name="registeredFrom"
                        type="input"
                        value=""
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              class="column"
              data-test=""
            >
              <div
                class="field"
              >
                <div
                  class="control"
                >
                  <label
                    class="label "
                    for="registeredTo"
                  >
                    Registered To
                  </label>
                  <div
                    class="react-datepicker-wrapper"
                  >
                    <div
                      class="react-datepicker__input-container"
                    >
                      <input
                        class="input is-primary input is-primary"
                        id="registeredTo"
                        name="registeredTo"
                        type="input"
                        value=""
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              class="column"
              data-test=""
            >
              <div
                class="field "
              >
                <div
                  class="control"
                >
                  <div
                    class="field field-checkbox"
                  >
                    <input
                      class="checkbox"
                      data-test=""
                      id="isListed"
                      type="checkbox"
                      value=""
                    />
                    <label
                      class="label"
                      for="isListed"
                    >
                      Is Listed
                    </label>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            class="columns"
            data-test=""
          >
            <div
              class="column"
              data-test=""
            >
               
            </div>
            <div
              class="column"
              data-test=""
            >
              <div
                class="level-right mt-5 pt-2"
                data-test=""
              >
                <button
                  class="button   is-primary "
                  data-test=""
                  type="submit"
                >
                  Search
                </button>
                <button
                  class="button   is-primary "
                  data-test=""
                  type="reset"
                >
                  Refresh
                </button>
              </div>
            </div>
          </div>
        </div>
      </form>
      <section
        class="section has-padding has-margin has-background"
        data-test=""
      >
        <span>
          Total apps: 
          0
        </span>
      </section>
      <section
        class="section has-padding has-margin has-background"
        data-test=""
      >
        <div
          class="notification is-info "
          data-test=""
          role="alert"
        >
          No Results 
        </div>
      </section>
    </section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`admin-apps renderChecked should return checked icon 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <div>
        <svg
          fill="currentColor"
          height="1em"
          stroke="currentColor"
          stroke-width="0"
          viewBox="0 0 512 512"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
          />
        </svg>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <div>
      <svg
        fill="currentColor"
        height="1em"
        stroke="currentColor"
        stroke-width="0"
        viewBox="0 0 512 512"
        width="1em"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
        />
      </svg>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`admin-apps renderChecked should return null 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <div />
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <div />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`admin-apps renderCreatedAt should match snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <div>
        <p>
          01 Jan 2020 00:00
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <div>
      <p>
        01 Jan 2020 00:00
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`admin-apps renderDeleteAction should render DeleteActions 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="el-snack-holder"
      />
      <div>
        <button
          class="button   is-danger "
          data-test=""
          type="button"
        >
          Delete
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="el-snack-holder"
    />
    <div>
      <button
        class="button   is-danger "
        data-test=""
        type="button"
      >
        Delete
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`admin-apps renderForm should return correctly 1`] = `
<Form>
  <FormSection>
    <FormHeading>
      Admin Apps Filter Form
    </FormHeading>
    <FormSubHeading>
      Filter the result by App, Developer and Company
    </FormSubHeading>
    <Grid>
      <GridItem>
        <Input
          id="appName"
          labelText="App Name"
          maxLength={256}
          name="appName"
          type="text"
        />
      </GridItem>
      <GridItem>
        <Input
          id="developerName"
          labelText="Developer Name"
          maxLength={256}
          name="developerName"
          type="text"
        />
      </GridItem>
      <GridItem>
        <Input
          id="companyName"
          labelText="Company Name"
          maxLength={256}
          name="companyName"
          type="text"
        />
      </GridItem>
    </Grid>
    <Grid>
      <GridItem>
        <DatePicker
          id="registeredFrom"
          labelText="Registered From"
          name="registeredFrom"
          reactDatePickerProps={
            Object {
              "endDate": "",
              "selectsStart": true,
              "startDate": "",
            }
          }
        />
      </GridItem>
      <GridItem>
        <DatePicker
          id="registeredTo"
          labelText="Registered To"
          name="registeredTo"
          reactDatePickerProps={
            Object {
              "endDate": "",
              "minDate": "",
              "selectsEnd": true,
              "startDate": "",
            }
          }
        />
      </GridItem>
      <GridItem>
        <Checkbox
          id="isListed"
          labelText="Is Listed"
          name="isListed"
        />
      </GridItem>
    </Grid>
    <Grid>
      <GridItem>
         
      </GridItem>
      <GridItem>
        <LevelRight
          className="mt-5 pt-2"
        >
          <Button
            type="submit"
            variant="primary"
          >
            Search
          </Button>
          <Button
            type="reset"
            variant="primary"
          >
            Refresh
          </Button>
        </LevelRight>
      </GridItem>
    </Grid>
  </FormSection>
</Form>
`;

exports[`admin-apps renderIsFeature should run correctly 1`] = `
<div
  className="field field-checkbox"
>
  <input
    checked="123"
    className="checkbox"
    id="123"
    name="123"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    className="label"
    htmlFor="123"
  />
</div>
`;
