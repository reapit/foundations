// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AdminDevManagement should match a snapshot when LOADING false 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "adminDevManagementRoute",
          "pathname": "/dev-management",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "adminDevManagementRoute",
              "pathname": "/dev-management",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "adminDevManagementRoute",
            "pathname": "/dev-management",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Component>
        <Component>
          <div
            className="loader-spinner body"
            data-test=""
          >
            <div />
            <div />
            <div />
            <div />
          </div>
        </Component>
      </Component>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`AdminDevManagement should render blank Info when data is empty 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "adminDevManagementRoute",
          "pathname": "/dev-management",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "adminDevManagementRoute",
              "pathname": "/dev-management",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "adminDevManagementRoute",
            "pathname": "/dev-management",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Component>
        <Component>
          <div
            className="loader-spinner body"
            data-test=""
          >
            <div />
            <div />
            <div />
            <div />
          </div>
        </Component>
      </Component>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`AdminDevManagement should show loader when LOADING true 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "adminDevManagementRoute",
          "pathname": "/dev-management",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "adminDevManagementRoute",
              "pathname": "/dev-management",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "adminDevManagementRoute",
            "pathname": "/dev-management",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Component>
        <Component>
          <div
            className="loader-spinner body"
            data-test=""
          >
            <div />
            <div />
            <div />
            <div />
          </div>
        </Component>
      </Component>
    </Router>
  </MemoryRouter>
</Provider>
`;
