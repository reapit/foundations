// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Subscriptions should match a snapshot when LOADING false 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "subscriptionsRoute",
          "pathname": "/subscriptions",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "subscriptionsRoute",
              "pathname": "/subscriptions",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "subscriptionsRoute",
            "pathname": "/subscriptions",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Subscriptions>
        <ErrorBoundary>
          <Component
            isHeadingSection={true}
          >
            <h3
              className=""
              id=""
            >
              Subscriptions
            </h3>
          </Component>
          <SubscriptionsFilterForm
            filterValues={
              Object {
                "developerId": "",
                "type": "",
              }
            }
            onSearch={[Function]}
          >
            <Formik
              initialValues={
                Object {
                  "developerId": "",
                  "type": "",
                }
              }
              onSubmit={[Function]}
            >
              <Form
                noValidate={true}
              >
                <form
                  action="#"
                  noValidate={true}
                  onReset={[Function]}
                  onSubmit={[Function]}
                >
                  <Component>
                    <div
                      className=""
                    >
                      <Component>
                        <div
                          className=""
                        >
                          Subscriptions Filter Form
                        </div>
                      </Component>
                      <Component>
                        <div
                          className=""
                        >
                          Filter the result by type and developer
                        </div>
                      </Component>
                      <Component
                        className="items-center"
                      >
                        <div
                          className=""
                          data-test=""
                        >
                          <Component>
                            <div
                              className=""
                              data-test=""
                            >
                              <Component
                                id="type"
                                labelText="Type"
                                name="type"
                                type="text"
                              >
                                <Field
                                  name="type"
                                  validate={null}
                                >
                                  <div
                                    className=""
                                  >
                                    <div
                                      className="control "
                                    >
                                      <label
                                        className="label inline-block "
                                        htmlFor="type"
                                      >
                                        Type
                                      </label>
                                      <input
                                        className=""
                                        data-test=""
                                        disabled={false}
                                        id="type"
                                        name="type"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        placeholder=""
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </Field>
                              </Component>
                            </div>
                          </Component>
                          <Component>
                            <div
                              className=""
                              data-test=""
                            >
                              <Component
                                id="developerId"
                                labelText="Dropdown Select"
                                mode="multiple"
                                name="developerId"
                                options={Array []}
                                placeholder="Please select"
                              >
                                <div
                                  className="field"
                                >
                                  <div
                                    className="control"
                                  >
                                    <Field
                                      name="developerId"
                                      validate={null}
                                    >
                                      <div
                                        className="field field-dropdown-select"
                                      >
                                        <label
                                          className="label "
                                        >
                                          Dropdown Select
                                        </label>
                                        <Select
                                          className="is-primary input"
                                          dropdownStyle={
                                            Object {
                                              "zIndex": 999,
                                            }
                                          }
                                          id="developerId"
                                          mode="multiple"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          placeholder="Please select"
                                          tagRender={[Function]}
                                          value={Array []}
                                        >
                                          <ForwardRef(Select)
                                            className="is-primary input"
                                            dropdownStyle={
                                              Object {
                                                "zIndex": 999,
                                              }
                                            }
                                            id="developerId"
                                            mode="multiple"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            placeholder="Please select"
                                            tagRender={[Function]}
                                            value={Array []}
                                          >
                                            <div
                                              className="rc-select is-primary input rc-select-multiple rc-select-show-search"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                            >
                                              <SelectTrigger
                                                containerWidth={null}
                                                dropdownStyle={
                                                  Object {
                                                    "zIndex": 999,
                                                  }
                                                }
                                                empty={true}
                                                getTriggerDOMNode={[Function]}
                                                popupElement={
                                                  <OptionList
                                                    childrenAsData={true}
                                                    defaultActiveFirstOption={true}
                                                    flattenOptions={Array []}
                                                    height={200}
                                                    id="developerId"
                                                    itemHeight={20}
                                                    multiple={true}
                                                    notFoundContent="Not Found"
                                                    onActiveValue={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    options={Array []}
                                                    prefixCls="rc-select"
                                                    searchValue=""
                                                    values={Set {}}
                                                    virtual={true}
                                                  />
                                                }
                                                prefixCls="rc-select"
                                              >
                                                <Trigger
                                                  action={Array []}
                                                  afterPopupVisibleChange={[Function]}
                                                  autoDestroy={false}
                                                  blurDelay={0.15}
                                                  builtinPlacements={
                                                    Object {
                                                      "bottomLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tl",
                                                          "bl",
                                                        ],
                                                      },
                                                      "bottomRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tr",
                                                          "br",
                                                        ],
                                                      },
                                                      "topLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "bl",
                                                          "tl",
                                                        ],
                                                      },
                                                      "topRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "br",
                                                          "tr",
                                                        ],
                                                      },
                                                    }
                                                  }
                                                  defaultPopupVisible={false}
                                                  destroyPopupOnHide={false}
                                                  focusDelay={0}
                                                  getDocument={[Function]}
                                                  getPopupClassNameFromAlign={[Function]}
                                                  getTriggerDOMNode={[Function]}
                                                  hideAction={Array []}
                                                  mask={false}
                                                  maskClosable={true}
                                                  mouseEnterDelay={0}
                                                  mouseLeaveDelay={0.1}
                                                  onPopupAlign={[Function]}
                                                  onPopupVisibleChange={[Function]}
                                                  popup={
                                                    <div>
                                                      <OptionList
                                                        childrenAsData={true}
                                                        defaultActiveFirstOption={true}
                                                        flattenOptions={Array []}
                                                        height={200}
                                                        id="developerId"
                                                        itemHeight={20}
                                                        multiple={true}
                                                        notFoundContent="Not Found"
                                                        onActiveValue={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        options={Array []}
                                                        prefixCls="rc-select"
                                                        searchValue=""
                                                        values={Set {}}
                                                        virtual={true}
                                                      />
                                                    </div>
                                                  }
                                                  popupAlign={Object {}}
                                                  popupClassName="rc-select-dropdown-empty"
                                                  popupPlacement="bottomLeft"
                                                  popupStyle={
                                                    Object {
                                                      "minWidth": null,
                                                      "width": null,
                                                      "zIndex": 999,
                                                    }
                                                  }
                                                  prefixCls="rc-select-dropdown"
                                                  showAction={Array []}
                                                >
                                                  <Selector
                                                    accessibilityIndex={0}
                                                    activeValue={null}
                                                    className="is-primary input"
                                                    domRef={
                                                      Object {
                                                        "current": <div
                                                          class="rc-select-selector"
                                                        >
                                                          <span
                                                            class="rc-select-selection-search"
                                                            style="width: 0px;"
                                                          >
                                                            <input
                                                              aria-activedescendant="developerId_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="developerId_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="developerId_list"
                                                              autocomplete="off"
                                                              class="rc-select-selection-search-input"
                                                              id="developerId"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                            <span
                                                              aria-hidden="true"
                                                              class="rc-select-selection-search-mirror"
                                                            >
                                                              
                                                               
                                                            </span>
                                                          </span>
                                                          <span
                                                            class="rc-select-selection-placeholder"
                                                          >
                                                            Please select
                                                          </span>
                                                        </div>,
                                                      }
                                                    }
                                                    dropdownStyle={
                                                      Object {
                                                        "zIndex": 999,
                                                      }
                                                    }
                                                    id="developerId"
                                                    inputElement={null}
                                                    key="trigger"
                                                    mode="multiple"
                                                    multiple={true}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onSearch={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    placeholder="Please select"
                                                    prefixCls="rc-select"
                                                    searchValue=""
                                                    showSearch={true}
                                                    tagRender={[Function]}
                                                    value={Array []}
                                                    values={Array []}
                                                  >
                                                    <div
                                                      className="rc-select-selector"
                                                      onClick={[Function]}
                                                      onMouseDown={[Function]}
                                                    >
                                                      <SelectSelector
                                                        accessibilityIndex={0}
                                                        activeValue={null}
                                                        className="is-primary input"
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="rc-select-selector"
                                                            >
                                                              <span
                                                                class="rc-select-selection-search"
                                                                style="width: 0px;"
                                                              >
                                                                <input
                                                                  aria-activedescendant="developerId_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="developerId_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="developerId_list"
                                                                  autocomplete="off"
                                                                  class="rc-select-selection-search-input"
                                                                  id="developerId"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                                <span
                                                                  aria-hidden="true"
                                                                  class="rc-select-selection-search-mirror"
                                                                >
                                                                  
                                                                   
                                                                </span>
                                                              </span>
                                                              <span
                                                                class="rc-select-selection-placeholder"
                                                              >
                                                                Please select
                                                              </span>
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownStyle={
                                                          Object {
                                                            "zIndex": 999,
                                                          }
                                                        }
                                                        id="developerId"
                                                        inputElement={null}
                                                        inputRef={
                                                          Object {
                                                            "current": <input
                                                              aria-activedescendant="developerId_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="developerId_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="developerId_list"
                                                              autocomplete="off"
                                                              class="rc-select-selection-search-input"
                                                              id="developerId"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              unselectable="on"
                                                              value=""
                                                            />,
                                                          }
                                                        }
                                                        mode="multiple"
                                                        multiple={true}
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onInputChange={[Function]}
                                                        onInputKeyDown={[Function]}
                                                        onInputMouseDown={[Function]}
                                                        onInputPaste={[Function]}
                                                        onSearch={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        placeholder="Please select"
                                                        prefixCls="rc-select"
                                                        searchValue=""
                                                        showSearch={true}
                                                        tagRender={[Function]}
                                                        value={Array []}
                                                        values={Array []}
                                                      >
                                                        <CSSMotionList
                                                          component={false}
                                                          keys={Array []}
                                                          motionAppear={true}
                                                        />
                                                        <span
                                                          className="rc-select-selection-search"
                                                          style={
                                                            Object {
                                                              "width": 0,
                                                            }
                                                          }
                                                        >
                                                          <Input
                                                            accessibilityIndex={0}
                                                            attrs={Object {}}
                                                            id="developerId"
                                                            inputElement={null}
                                                            onChange={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            prefixCls="rc-select"
                                                            value=""
                                                          >
                                                            <input
                                                              aria-activedescendant="developerId_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="developerId_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="developerId_list"
                                                              autoComplete="off"
                                                              className="rc-select-selection-search-input"
                                                              id="developerId"
                                                              onChange={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onPaste={[Function]}
                                                              readOnly={true}
                                                              role="combobox"
                                                              style={
                                                                Object {
                                                                  "opacity": 0,
                                                                }
                                                              }
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                          </Input>
                                                          <span
                                                            aria-hidden={true}
                                                            className="rc-select-selection-search-mirror"
                                                          >
                                                             
                                                          </span>
                                                        </span>
                                                        <span
                                                          className="rc-select-selection-placeholder"
                                                        >
                                                          Please select
                                                        </span>
                                                      </SelectSelector>
                                                    </div>
                                                  </Selector>
                                                </Trigger>
                                              </SelectTrigger>
                                            </div>
                                          </ForwardRef(Select)>
                                        </Select>
                                      </div>
                                    </Field>
                                  </div>
                                </div>
                                <div />
                              </Component>
                            </div>
                          </Component>
                          <Component
                            className="mt-4"
                          >
                            <div
                              className=""
                              data-test=""
                            >
                              <Component
                                type="submit"
                                variant="primary"
                              >
                                <button
                                  className="button  is-primary  "
                                  data-test=""
                                  disabled={false}
                                  type="submit"
                                >
                                  Search
                                </button>
                              </Component>
                            </div>
                          </Component>
                        </div>
                      </Component>
                    </div>
                  </Component>
                </form>
              </Form>
            </Formik>
          </SubscriptionsFilterForm>
          <Component
            message="No Results "
            type="info"
          >
            <div
              className="notification is-info "
              data-test=""
              role="alert"
            >
              No Results 
            </div>
          </Component>
          <Component
            onChange={[Function]}
            pageNumber={0}
            pageSize={0}
            totalCount={0}
          />
          <Component
            isCanceling={false}
            isShowConfirmModal={false}
            onConfirm={[Function]}
            setCancelSubId={[Function]}
          >
            <Component
              destroyOnClose={true}
              onClose={[Function]}
              visible={false}
            >
              <Component
                className=""
                closeIcon={
                  <span
                    aria-label="close"
                    className="delete"
                  />
                }
                destroyOnClose={true}
                onClose={[Function]}
                title={<Unknown />}
                visible={false}
                wrapClassName=""
              >
                <PortalWrapper
                  visible={false}
                />
              </Component>
            </Component>
          </Component>
        </ErrorBoundary>
      </Subscriptions>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Subscriptions should render blank Info when data is empty 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "subscriptionsRoute",
          "pathname": "/subscriptions",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "subscriptionsRoute",
              "pathname": "/subscriptions",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "subscriptionsRoute",
            "pathname": "/subscriptions",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Subscriptions>
        <ErrorBoundary>
          <Component
            isHeadingSection={true}
          >
            <h3
              className=""
              id=""
            >
              Subscriptions
            </h3>
          </Component>
          <SubscriptionsFilterForm
            filterValues={
              Object {
                "developerId": "",
                "type": "",
              }
            }
            onSearch={[Function]}
          >
            <Formik
              initialValues={
                Object {
                  "developerId": "",
                  "type": "",
                }
              }
              onSubmit={[Function]}
            >
              <Form
                noValidate={true}
              >
                <form
                  action="#"
                  noValidate={true}
                  onReset={[Function]}
                  onSubmit={[Function]}
                >
                  <Component>
                    <div
                      className=""
                    >
                      <Component>
                        <div
                          className=""
                        >
                          Subscriptions Filter Form
                        </div>
                      </Component>
                      <Component>
                        <div
                          className=""
                        >
                          Filter the result by type and developer
                        </div>
                      </Component>
                      <Component
                        className="items-center"
                      >
                        <div
                          className=""
                          data-test=""
                        >
                          <Component>
                            <div
                              className=""
                              data-test=""
                            >
                              <Component
                                id="type"
                                labelText="Type"
                                name="type"
                                type="text"
                              >
                                <Field
                                  name="type"
                                  validate={null}
                                >
                                  <div
                                    className=""
                                  >
                                    <div
                                      className="control "
                                    >
                                      <label
                                        className="label inline-block "
                                        htmlFor="type"
                                      >
                                        Type
                                      </label>
                                      <input
                                        className=""
                                        data-test=""
                                        disabled={false}
                                        id="type"
                                        name="type"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        placeholder=""
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </Field>
                              </Component>
                            </div>
                          </Component>
                          <Component>
                            <div
                              className=""
                              data-test=""
                            >
                              <Component
                                id="developerId"
                                labelText="Dropdown Select"
                                mode="multiple"
                                name="developerId"
                                options={Array []}
                                placeholder="Please select"
                              >
                                <div
                                  className="field"
                                >
                                  <div
                                    className="control"
                                  >
                                    <Field
                                      name="developerId"
                                      validate={null}
                                    >
                                      <div
                                        className="field field-dropdown-select"
                                      >
                                        <label
                                          className="label "
                                        >
                                          Dropdown Select
                                        </label>
                                        <Select
                                          className="is-primary input"
                                          dropdownStyle={
                                            Object {
                                              "zIndex": 999,
                                            }
                                          }
                                          id="developerId"
                                          mode="multiple"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          placeholder="Please select"
                                          tagRender={[Function]}
                                          value={Array []}
                                        >
                                          <ForwardRef(Select)
                                            className="is-primary input"
                                            dropdownStyle={
                                              Object {
                                                "zIndex": 999,
                                              }
                                            }
                                            id="developerId"
                                            mode="multiple"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            placeholder="Please select"
                                            tagRender={[Function]}
                                            value={Array []}
                                          >
                                            <div
                                              className="rc-select is-primary input rc-select-multiple rc-select-show-search"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                            >
                                              <SelectTrigger
                                                containerWidth={null}
                                                dropdownStyle={
                                                  Object {
                                                    "zIndex": 999,
                                                  }
                                                }
                                                empty={true}
                                                getTriggerDOMNode={[Function]}
                                                popupElement={
                                                  <OptionList
                                                    childrenAsData={true}
                                                    defaultActiveFirstOption={true}
                                                    flattenOptions={Array []}
                                                    height={200}
                                                    id="developerId"
                                                    itemHeight={20}
                                                    multiple={true}
                                                    notFoundContent="Not Found"
                                                    onActiveValue={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    options={Array []}
                                                    prefixCls="rc-select"
                                                    searchValue=""
                                                    values={Set {}}
                                                    virtual={true}
                                                  />
                                                }
                                                prefixCls="rc-select"
                                              >
                                                <Trigger
                                                  action={Array []}
                                                  afterPopupVisibleChange={[Function]}
                                                  autoDestroy={false}
                                                  blurDelay={0.15}
                                                  builtinPlacements={
                                                    Object {
                                                      "bottomLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tl",
                                                          "bl",
                                                        ],
                                                      },
                                                      "bottomRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tr",
                                                          "br",
                                                        ],
                                                      },
                                                      "topLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "bl",
                                                          "tl",
                                                        ],
                                                      },
                                                      "topRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "br",
                                                          "tr",
                                                        ],
                                                      },
                                                    }
                                                  }
                                                  defaultPopupVisible={false}
                                                  destroyPopupOnHide={false}
                                                  focusDelay={0}
                                                  getDocument={[Function]}
                                                  getPopupClassNameFromAlign={[Function]}
                                                  getTriggerDOMNode={[Function]}
                                                  hideAction={Array []}
                                                  mask={false}
                                                  maskClosable={true}
                                                  mouseEnterDelay={0}
                                                  mouseLeaveDelay={0.1}
                                                  onPopupAlign={[Function]}
                                                  onPopupVisibleChange={[Function]}
                                                  popup={
                                                    <div>
                                                      <OptionList
                                                        childrenAsData={true}
                                                        defaultActiveFirstOption={true}
                                                        flattenOptions={Array []}
                                                        height={200}
                                                        id="developerId"
                                                        itemHeight={20}
                                                        multiple={true}
                                                        notFoundContent="Not Found"
                                                        onActiveValue={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        options={Array []}
                                                        prefixCls="rc-select"
                                                        searchValue=""
                                                        values={Set {}}
                                                        virtual={true}
                                                      />
                                                    </div>
                                                  }
                                                  popupAlign={Object {}}
                                                  popupClassName="rc-select-dropdown-empty"
                                                  popupPlacement="bottomLeft"
                                                  popupStyle={
                                                    Object {
                                                      "minWidth": null,
                                                      "width": null,
                                                      "zIndex": 999,
                                                    }
                                                  }
                                                  prefixCls="rc-select-dropdown"
                                                  showAction={Array []}
                                                >
                                                  <Selector
                                                    accessibilityIndex={0}
                                                    activeValue={null}
                                                    className="is-primary input"
                                                    domRef={
                                                      Object {
                                                        "current": <div
                                                          class="rc-select-selector"
                                                        >
                                                          <span
                                                            class="rc-select-selection-search"
                                                            style="width: 0px;"
                                                          >
                                                            <input
                                                              aria-activedescendant="developerId_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="developerId_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="developerId_list"
                                                              autocomplete="off"
                                                              class="rc-select-selection-search-input"
                                                              id="developerId"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                            <span
                                                              aria-hidden="true"
                                                              class="rc-select-selection-search-mirror"
                                                            >
                                                              
                                                               
                                                            </span>
                                                          </span>
                                                          <span
                                                            class="rc-select-selection-placeholder"
                                                          >
                                                            Please select
                                                          </span>
                                                        </div>,
                                                      }
                                                    }
                                                    dropdownStyle={
                                                      Object {
                                                        "zIndex": 999,
                                                      }
                                                    }
                                                    id="developerId"
                                                    inputElement={null}
                                                    key="trigger"
                                                    mode="multiple"
                                                    multiple={true}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onSearch={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    placeholder="Please select"
                                                    prefixCls="rc-select"
                                                    searchValue=""
                                                    showSearch={true}
                                                    tagRender={[Function]}
                                                    value={Array []}
                                                    values={Array []}
                                                  >
                                                    <div
                                                      className="rc-select-selector"
                                                      onClick={[Function]}
                                                      onMouseDown={[Function]}
                                                    >
                                                      <SelectSelector
                                                        accessibilityIndex={0}
                                                        activeValue={null}
                                                        className="is-primary input"
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="rc-select-selector"
                                                            >
                                                              <span
                                                                class="rc-select-selection-search"
                                                                style="width: 0px;"
                                                              >
                                                                <input
                                                                  aria-activedescendant="developerId_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="developerId_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="developerId_list"
                                                                  autocomplete="off"
                                                                  class="rc-select-selection-search-input"
                                                                  id="developerId"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                                <span
                                                                  aria-hidden="true"
                                                                  class="rc-select-selection-search-mirror"
                                                                >
                                                                  
                                                                   
                                                                </span>
                                                              </span>
                                                              <span
                                                                class="rc-select-selection-placeholder"
                                                              >
                                                                Please select
                                                              </span>
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownStyle={
                                                          Object {
                                                            "zIndex": 999,
                                                          }
                                                        }
                                                        id="developerId"
                                                        inputElement={null}
                                                        inputRef={
                                                          Object {
                                                            "current": <input
                                                              aria-activedescendant="developerId_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="developerId_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="developerId_list"
                                                              autocomplete="off"
                                                              class="rc-select-selection-search-input"
                                                              id="developerId"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              unselectable="on"
                                                              value=""
                                                            />,
                                                          }
                                                        }
                                                        mode="multiple"
                                                        multiple={true}
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onInputChange={[Function]}
                                                        onInputKeyDown={[Function]}
                                                        onInputMouseDown={[Function]}
                                                        onInputPaste={[Function]}
                                                        onSearch={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        placeholder="Please select"
                                                        prefixCls="rc-select"
                                                        searchValue=""
                                                        showSearch={true}
                                                        tagRender={[Function]}
                                                        value={Array []}
                                                        values={Array []}
                                                      >
                                                        <CSSMotionList
                                                          component={false}
                                                          keys={Array []}
                                                          motionAppear={true}
                                                        />
                                                        <span
                                                          className="rc-select-selection-search"
                                                          style={
                                                            Object {
                                                              "width": 0,
                                                            }
                                                          }
                                                        >
                                                          <Input
                                                            accessibilityIndex={0}
                                                            attrs={Object {}}
                                                            id="developerId"
                                                            inputElement={null}
                                                            onChange={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            prefixCls="rc-select"
                                                            value=""
                                                          >
                                                            <input
                                                              aria-activedescendant="developerId_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="developerId_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="developerId_list"
                                                              autoComplete="off"
                                                              className="rc-select-selection-search-input"
                                                              id="developerId"
                                                              onChange={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onPaste={[Function]}
                                                              readOnly={true}
                                                              role="combobox"
                                                              style={
                                                                Object {
                                                                  "opacity": 0,
                                                                }
                                                              }
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                          </Input>
                                                          <span
                                                            aria-hidden={true}
                                                            className="rc-select-selection-search-mirror"
                                                          >
                                                             
                                                          </span>
                                                        </span>
                                                        <span
                                                          className="rc-select-selection-placeholder"
                                                        >
                                                          Please select
                                                        </span>
                                                      </SelectSelector>
                                                    </div>
                                                  </Selector>
                                                </Trigger>
                                              </SelectTrigger>
                                            </div>
                                          </ForwardRef(Select)>
                                        </Select>
                                      </div>
                                    </Field>
                                  </div>
                                </div>
                                <div />
                              </Component>
                            </div>
                          </Component>
                          <Component
                            className="mt-4"
                          >
                            <div
                              className=""
                              data-test=""
                            >
                              <Component
                                type="submit"
                                variant="primary"
                              >
                                <button
                                  className="button  is-primary  "
                                  data-test=""
                                  disabled={false}
                                  type="submit"
                                >
                                  Search
                                </button>
                              </Component>
                            </div>
                          </Component>
                        </div>
                      </Component>
                    </div>
                  </Component>
                </form>
              </Form>
            </Formik>
          </SubscriptionsFilterForm>
          <Component
            message="No Results "
            type="info"
          >
            <div
              className="notification is-info "
              data-test=""
              role="alert"
            >
              No Results 
            </div>
          </Component>
          <Component
            onChange={[Function]}
            pageNumber={0}
            pageSize={0}
            totalCount={0}
          />
          <Component
            isCanceling={false}
            isShowConfirmModal={false}
            onConfirm={[Function]}
            setCancelSubId={[Function]}
          >
            <Component
              destroyOnClose={true}
              onClose={[Function]}
              visible={false}
            >
              <Component
                className=""
                closeIcon={
                  <span
                    aria-label="close"
                    className="delete"
                  />
                }
                destroyOnClose={true}
                onClose={[Function]}
                title={<Unknown />}
                visible={false}
                wrapClassName=""
              >
                <PortalWrapper
                  visible={false}
                />
              </Component>
            </Component>
          </Component>
        </ErrorBoundary>
      </Subscriptions>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Subscriptions should show loader when LOADING true 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "subscriptionsRoute",
          "pathname": "/subscriptions",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "subscriptionsRoute",
              "pathname": "/subscriptions",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "subscriptionsRoute",
            "pathname": "/subscriptions",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Subscriptions>
        <ErrorBoundary>
          <Component
            isHeadingSection={true}
          >
            <h3
              className=""
              id=""
            >
              Subscriptions
            </h3>
          </Component>
          <SubscriptionsFilterForm
            filterValues={
              Object {
                "developerId": "",
                "type": "",
              }
            }
            onSearch={[Function]}
          >
            <Formik
              initialValues={
                Object {
                  "developerId": "",
                  "type": "",
                }
              }
              onSubmit={[Function]}
            >
              <Form
                noValidate={true}
              >
                <form
                  action="#"
                  noValidate={true}
                  onReset={[Function]}
                  onSubmit={[Function]}
                >
                  <Component>
                    <div
                      className=""
                    >
                      <Component>
                        <div
                          className=""
                        >
                          Subscriptions Filter Form
                        </div>
                      </Component>
                      <Component>
                        <div
                          className=""
                        >
                          Filter the result by type and developer
                        </div>
                      </Component>
                      <Component
                        className="items-center"
                      >
                        <div
                          className=""
                          data-test=""
                        >
                          <Component>
                            <div
                              className=""
                              data-test=""
                            >
                              <Component
                                id="type"
                                labelText="Type"
                                name="type"
                                type="text"
                              >
                                <Field
                                  name="type"
                                  validate={null}
                                >
                                  <div
                                    className=""
                                  >
                                    <div
                                      className="control "
                                    >
                                      <label
                                        className="label inline-block "
                                        htmlFor="type"
                                      >
                                        Type
                                      </label>
                                      <input
                                        className=""
                                        data-test=""
                                        disabled={false}
                                        id="type"
                                        name="type"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        placeholder=""
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </Field>
                              </Component>
                            </div>
                          </Component>
                          <Component>
                            <div
                              className=""
                              data-test=""
                            >
                              <Component
                                id="developerId"
                                labelText="Dropdown Select"
                                mode="multiple"
                                name="developerId"
                                options={Array []}
                                placeholder="Please select"
                              >
                                <div
                                  className="field"
                                >
                                  <div
                                    className="control"
                                  >
                                    <Field
                                      name="developerId"
                                      validate={null}
                                    >
                                      <div
                                        className="field field-dropdown-select"
                                      >
                                        <label
                                          className="label "
                                        >
                                          Dropdown Select
                                        </label>
                                        <Select
                                          className="is-primary input"
                                          dropdownStyle={
                                            Object {
                                              "zIndex": 999,
                                            }
                                          }
                                          id="developerId"
                                          mode="multiple"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          placeholder="Please select"
                                          tagRender={[Function]}
                                          value={Array []}
                                        >
                                          <ForwardRef(Select)
                                            className="is-primary input"
                                            dropdownStyle={
                                              Object {
                                                "zIndex": 999,
                                              }
                                            }
                                            id="developerId"
                                            mode="multiple"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            placeholder="Please select"
                                            tagRender={[Function]}
                                            value={Array []}
                                          >
                                            <div
                                              className="rc-select is-primary input rc-select-multiple rc-select-show-search"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                            >
                                              <SelectTrigger
                                                containerWidth={null}
                                                dropdownStyle={
                                                  Object {
                                                    "zIndex": 999,
                                                  }
                                                }
                                                empty={true}
                                                getTriggerDOMNode={[Function]}
                                                popupElement={
                                                  <OptionList
                                                    childrenAsData={true}
                                                    defaultActiveFirstOption={true}
                                                    flattenOptions={Array []}
                                                    height={200}
                                                    id="developerId"
                                                    itemHeight={20}
                                                    multiple={true}
                                                    notFoundContent="Not Found"
                                                    onActiveValue={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    options={Array []}
                                                    prefixCls="rc-select"
                                                    searchValue=""
                                                    values={Set {}}
                                                    virtual={true}
                                                  />
                                                }
                                                prefixCls="rc-select"
                                              >
                                                <Trigger
                                                  action={Array []}
                                                  afterPopupVisibleChange={[Function]}
                                                  autoDestroy={false}
                                                  blurDelay={0.15}
                                                  builtinPlacements={
                                                    Object {
                                                      "bottomLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tl",
                                                          "bl",
                                                        ],
                                                      },
                                                      "bottomRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tr",
                                                          "br",
                                                        ],
                                                      },
                                                      "topLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "bl",
                                                          "tl",
                                                        ],
                                                      },
                                                      "topRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "br",
                                                          "tr",
                                                        ],
                                                      },
                                                    }
                                                  }
                                                  defaultPopupVisible={false}
                                                  destroyPopupOnHide={false}
                                                  focusDelay={0}
                                                  getDocument={[Function]}
                                                  getPopupClassNameFromAlign={[Function]}
                                                  getTriggerDOMNode={[Function]}
                                                  hideAction={Array []}
                                                  mask={false}
                                                  maskClosable={true}
                                                  mouseEnterDelay={0}
                                                  mouseLeaveDelay={0.1}
                                                  onPopupAlign={[Function]}
                                                  onPopupVisibleChange={[Function]}
                                                  popup={
                                                    <div>
                                                      <OptionList
                                                        childrenAsData={true}
                                                        defaultActiveFirstOption={true}
                                                        flattenOptions={Array []}
                                                        height={200}
                                                        id="developerId"
                                                        itemHeight={20}
                                                        multiple={true}
                                                        notFoundContent="Not Found"
                                                        onActiveValue={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        options={Array []}
                                                        prefixCls="rc-select"
                                                        searchValue=""
                                                        values={Set {}}
                                                        virtual={true}
                                                      />
                                                    </div>
                                                  }
                                                  popupAlign={Object {}}
                                                  popupClassName="rc-select-dropdown-empty"
                                                  popupPlacement="bottomLeft"
                                                  popupStyle={
                                                    Object {
                                                      "minWidth": null,
                                                      "width": null,
                                                      "zIndex": 999,
                                                    }
                                                  }
                                                  prefixCls="rc-select-dropdown"
                                                  showAction={Array []}
                                                >
                                                  <Selector
                                                    accessibilityIndex={0}
                                                    activeValue={null}
                                                    className="is-primary input"
                                                    domRef={
                                                      Object {
                                                        "current": <div
                                                          class="rc-select-selector"
                                                        >
                                                          <span
                                                            class="rc-select-selection-search"
                                                            style="width: 0px;"
                                                          >
                                                            <input
                                                              aria-activedescendant="developerId_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="developerId_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="developerId_list"
                                                              autocomplete="off"
                                                              class="rc-select-selection-search-input"
                                                              id="developerId"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                            <span
                                                              aria-hidden="true"
                                                              class="rc-select-selection-search-mirror"
                                                            >
                                                              
                                                               
                                                            </span>
                                                          </span>
                                                          <span
                                                            class="rc-select-selection-placeholder"
                                                          >
                                                            Please select
                                                          </span>
                                                        </div>,
                                                      }
                                                    }
                                                    dropdownStyle={
                                                      Object {
                                                        "zIndex": 999,
                                                      }
                                                    }
                                                    id="developerId"
                                                    inputElement={null}
                                                    key="trigger"
                                                    mode="multiple"
                                                    multiple={true}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onSearch={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    placeholder="Please select"
                                                    prefixCls="rc-select"
                                                    searchValue=""
                                                    showSearch={true}
                                                    tagRender={[Function]}
                                                    value={Array []}
                                                    values={Array []}
                                                  >
                                                    <div
                                                      className="rc-select-selector"
                                                      onClick={[Function]}
                                                      onMouseDown={[Function]}
                                                    >
                                                      <SelectSelector
                                                        accessibilityIndex={0}
                                                        activeValue={null}
                                                        className="is-primary input"
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="rc-select-selector"
                                                            >
                                                              <span
                                                                class="rc-select-selection-search"
                                                                style="width: 0px;"
                                                              >
                                                                <input
                                                                  aria-activedescendant="developerId_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="developerId_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="developerId_list"
                                                                  autocomplete="off"
                                                                  class="rc-select-selection-search-input"
                                                                  id="developerId"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                                <span
                                                                  aria-hidden="true"
                                                                  class="rc-select-selection-search-mirror"
                                                                >
                                                                  
                                                                   
                                                                </span>
                                                              </span>
                                                              <span
                                                                class="rc-select-selection-placeholder"
                                                              >
                                                                Please select
                                                              </span>
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownStyle={
                                                          Object {
                                                            "zIndex": 999,
                                                          }
                                                        }
                                                        id="developerId"
                                                        inputElement={null}
                                                        inputRef={
                                                          Object {
                                                            "current": <input
                                                              aria-activedescendant="developerId_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="developerId_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="developerId_list"
                                                              autocomplete="off"
                                                              class="rc-select-selection-search-input"
                                                              id="developerId"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              unselectable="on"
                                                              value=""
                                                            />,
                                                          }
                                                        }
                                                        mode="multiple"
                                                        multiple={true}
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onInputChange={[Function]}
                                                        onInputKeyDown={[Function]}
                                                        onInputMouseDown={[Function]}
                                                        onInputPaste={[Function]}
                                                        onSearch={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        placeholder="Please select"
                                                        prefixCls="rc-select"
                                                        searchValue=""
                                                        showSearch={true}
                                                        tagRender={[Function]}
                                                        value={Array []}
                                                        values={Array []}
                                                      >
                                                        <CSSMotionList
                                                          component={false}
                                                          keys={Array []}
                                                          motionAppear={true}
                                                        />
                                                        <span
                                                          className="rc-select-selection-search"
                                                          style={
                                                            Object {
                                                              "width": 0,
                                                            }
                                                          }
                                                        >
                                                          <Input
                                                            accessibilityIndex={0}
                                                            attrs={Object {}}
                                                            id="developerId"
                                                            inputElement={null}
                                                            onChange={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            prefixCls="rc-select"
                                                            value=""
                                                          >
                                                            <input
                                                              aria-activedescendant="developerId_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="developerId_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="developerId_list"
                                                              autoComplete="off"
                                                              className="rc-select-selection-search-input"
                                                              id="developerId"
                                                              onChange={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onPaste={[Function]}
                                                              readOnly={true}
                                                              role="combobox"
                                                              style={
                                                                Object {
                                                                  "opacity": 0,
                                                                }
                                                              }
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                          </Input>
                                                          <span
                                                            aria-hidden={true}
                                                            className="rc-select-selection-search-mirror"
                                                          >
                                                             
                                                          </span>
                                                        </span>
                                                        <span
                                                          className="rc-select-selection-placeholder"
                                                        >
                                                          Please select
                                                        </span>
                                                      </SelectSelector>
                                                    </div>
                                                  </Selector>
                                                </Trigger>
                                              </SelectTrigger>
                                            </div>
                                          </ForwardRef(Select)>
                                        </Select>
                                      </div>
                                    </Field>
                                  </div>
                                </div>
                                <div />
                              </Component>
                            </div>
                          </Component>
                          <Component
                            className="mt-4"
                          >
                            <div
                              className=""
                              data-test=""
                            >
                              <Component
                                type="submit"
                                variant="primary"
                              >
                                <button
                                  className="button  is-primary  "
                                  data-test=""
                                  disabled={false}
                                  type="submit"
                                >
                                  Search
                                </button>
                              </Component>
                            </div>
                          </Component>
                        </div>
                      </Component>
                    </div>
                  </Component>
                </form>
              </Form>
            </Formik>
          </SubscriptionsFilterForm>
          <Component
            message="No Results "
            type="info"
          >
            <div
              className="notification is-info "
              data-test=""
              role="alert"
            >
              No Results 
            </div>
          </Component>
          <Component
            onChange={[Function]}
            pageNumber={0}
            pageSize={0}
            totalCount={0}
          />
          <Component
            isCanceling={false}
            isShowConfirmModal={false}
            onConfirm={[Function]}
            setCancelSubId={[Function]}
          >
            <Component
              destroyOnClose={true}
              onClose={[Function]}
              visible={false}
            >
              <Component
                className=""
                closeIcon={
                  <span
                    aria-label="close"
                    className="delete"
                  />
                }
                destroyOnClose={true}
                onClose={[Function]}
                title={<Unknown />}
                visible={false}
                wrapClassName=""
              >
                <PortalWrapper
                  visible={false}
                />
              </Component>
            </Component>
          </Component>
        </ErrorBoundary>
      </Subscriptions>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`renderResult should match snapshot when has result data 1`] = `
<React.Fragment>
  <Unknown>
    <div>
      Total: 
      0
    </div>
  </Unknown>
  <Unknown>
    <Unknown
      columns={
        Array [
          Object {
            "Header": "Subscription Type",
            "accessor": "type",
          },
          Object {
            "Header": "Summary",
            "accessor": "summary",
          },
          Object {
            "Header": "Application ID",
            "accessor": "applicationId",
          },
          Object {
            "Header": "Member Name",
            "accessor": "developerId",
          },
          Object {
            "Header": "Member Email",
            "accessor": "user",
          },
          Object {
            "Header": "Start Date",
            "accessor": "created",
          },
          Object {
            "Header": "Renewal Date",
            "accessor": "renews",
          },
          Object {
            "Header": "Frequency",
            "accessor": "frequency",
          },
          Object {
            "Header": "Cost",
            "accessor": "cost",
          },
          Object {
            "Header": "Status",
            "accessor": "cancelled",
          },
          Object {
            "Header": "",
            "accessor": "id",
          },
        ]
      }
      data={
        Array [
          Object {
            "applicationId": "123",
            "cost": 0,
            "created": "2020-11-17T07:53:38",
            "developerId": "b1da6abb-a522-45b8-b7da-de186ea4a01b",
            "frequency": "monthly",
            "id": "1de28f85-0239-497b-b20f-a855b79527e4",
            "renews": "2020-12-17",
            "summary": "Developer edition license for ltran@reapit.com",
            "type": "developerEdition",
            "user": "ltran@reapit.com",
          },
        ]
      }
      expandable={true}
      loading={false}
      scrollable={true}
    />
  </Unknown>
</React.Fragment>
`;

exports[`renderResult should match snapshot when no result 1`] = `
<Unknown
  message="No Results "
  type="info"
/>
`;
