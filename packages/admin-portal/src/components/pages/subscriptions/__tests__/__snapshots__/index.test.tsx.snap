// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Subscriptions should match a snapshot when LOADING false 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "subscriptionsRoute",
          "pathname": "/subscriptions",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "subscriptionsRoute",
              "pathname": "/subscriptions",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "subscriptionsRoute",
            "pathname": "/subscriptions",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Subscriptions>
        <ErrorBoundary>
          <H3>
            <h3
              className="title is-3"
              id=""
            >
              Subscriptions
            </h3>
          </H3>
          <SubscriptionsFilterForm
            filterValues={
              Object {
                "appName": "",
                "developerName": "",
                "status": "",
                "type": "",
                "userEmail": "",
              }
            }
            onSearch={[Function]}
          >
            <Formik
              initialValues={
                Object {
                  "appName": "",
                  "developerName": "",
                  "status": "",
                  "type": "",
                  "userEmail": "",
                }
              }
              onSubmit={[Function]}
            >
              <Form
                noValidate={true}
              >
                <form
                  action="#"
                  noValidate={true}
                  onReset={[Function]}
                  onSubmit={[Function]}
                >
                  <FormSection>
                    <div
                      className="form-section"
                    >
                      <FormHeading>
                        <div
                          className="form-heading"
                        >
                          Subscriptions Filter Form
                        </div>
                      </FormHeading>
                      <FormSubHeading>
                        <div
                          className="form-subheading"
                        >
                          Filter the result by type and developer
                        </div>
                      </FormSubHeading>
                      <Grid
                        className="items-center"
                      >
                        <div
                          className="columns items-center"
                          data-test=""
                        >
                          <GridItem>
                            <div
                              className="column"
                              data-test=""
                            >
                              <SelectBox
                                id="type"
                                labelText="Type"
                                name="type"
                                options={
                                  Array [
                                    Object {
                                      "label": "Application Listing",
                                      "value": "applicationListing",
                                    },
                                    Object {
                                      "label": "Developer Registration",
                                      "value": "developerRegistration",
                                    },
                                    Object {
                                      "label": "Developer Edition",
                                      "value": "developerEdition",
                                    },
                                  ]
                                }
                              >
                                <Field
                                  name="type"
                                  validate={null}
                                >
                                  <div
                                    className="field"
                                  >
                                    <div
                                      className="control"
                                    >
                                      <label
                                        className="label "
                                        htmlFor="type"
                                      >
                                        Type
                                      </label>
                                      <select
                                        className="input is-primary "
                                        data-test=""
                                        name="type"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        value=""
                                      >
                                        <option
                                          key="applicationListing"
                                          value="applicationListing"
                                        >
                                          Application Listing
                                        </option>
                                        <option
                                          key="developerRegistration"
                                          value="developerRegistration"
                                        >
                                          Developer Registration
                                        </option>
                                        <option
                                          key="developerEdition"
                                          value="developerEdition"
                                        >
                                          Developer Edition
                                        </option>
                                        <option
                                          disabled={true}
                                          hidden={true}
                                          value=""
                                        >
                                          Please select
                                        </option>
                                      </select>
                                    </div>
                                  </div>
                                </Field>
                              </SelectBox>
                            </div>
                          </GridItem>
                          <GridItem>
                            <div
                              className="column"
                              data-test=""
                            >
                              <Input
                                id="developerName"
                                labelText="Developer Name"
                                maxLength={256}
                                name="developerName"
                                type="text"
                              >
                                <Field
                                  name="developerName"
                                  validate={null}
                                >
                                  <div
                                    className="field"
                                  >
                                    <div
                                      className="control "
                                    >
                                      <label
                                        className="label inline-block "
                                        htmlFor="developerName"
                                      >
                                        Developer Name
                                      </label>
                                      <input
                                        className="input is-primary"
                                        data-test=""
                                        disabled={false}
                                        id="developerName"
                                        maxLength={256}
                                        name="developerName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        placeholder=""
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </Field>
                              </Input>
                            </div>
                          </GridItem>
                          <GridItem>
                            <div
                              className="column"
                              data-test=""
                            >
                              <Input
                                id="userEmail"
                                labelText="User Email"
                                maxLength={256}
                                name="userEmail"
                                type="text"
                              >
                                <Field
                                  name="userEmail"
                                  validate={null}
                                >
                                  <div
                                    className="field"
                                  >
                                    <div
                                      className="control "
                                    >
                                      <label
                                        className="label inline-block "
                                        htmlFor="userEmail"
                                      >
                                        User Email
                                      </label>
                                      <input
                                        className="input is-primary"
                                        data-test=""
                                        disabled={false}
                                        id="userEmail"
                                        maxLength={256}
                                        name="userEmail"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        placeholder=""
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </Field>
                              </Input>
                            </div>
                          </GridItem>
                          <GridItem>
                            <div
                              className="column"
                              data-test=""
                            >
                              <Input
                                id="appName"
                                labelText="App Name"
                                maxLength={256}
                                name="appName"
                                type="text"
                              >
                                <Field
                                  name="appName"
                                  validate={null}
                                >
                                  <div
                                    className="field"
                                  >
                                    <div
                                      className="control "
                                    >
                                      <label
                                        className="label inline-block "
                                        htmlFor="appName"
                                      >
                                        App Name
                                      </label>
                                      <input
                                        className="input is-primary"
                                        data-test=""
                                        disabled={false}
                                        id="appName"
                                        maxLength={256}
                                        name="appName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        placeholder=""
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </Field>
                              </Input>
                            </div>
                          </GridItem>
                          <GridItem>
                            <div
                              className="column"
                              data-test=""
                            >
                              <SelectBox
                                id="status"
                                labelText="Status"
                                name="status"
                                options={
                                  Array [
                                    Object {
                                      "label": "Active",
                                      "value": "active",
                                    },
                                    Object {
                                      "label": "Cancelled",
                                      "value": "cancelled",
                                    },
                                  ]
                                }
                              >
                                <Field
                                  name="status"
                                  validate={null}
                                >
                                  <div
                                    className="field"
                                  >
                                    <div
                                      className="control"
                                    >
                                      <label
                                        className="label "
                                        htmlFor="status"
                                      >
                                        Status
                                      </label>
                                      <select
                                        className="input is-primary "
                                        data-test=""
                                        name="status"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        value=""
                                      >
                                        <option
                                          key="active"
                                          value="active"
                                        >
                                          Active
                                        </option>
                                        <option
                                          key="cancelled"
                                          value="cancelled"
                                        >
                                          Cancelled
                                        </option>
                                        <option
                                          disabled={true}
                                          hidden={true}
                                          value=""
                                        >
                                          Please select
                                        </option>
                                      </select>
                                    </div>
                                  </div>
                                </Field>
                              </SelectBox>
                            </div>
                          </GridItem>
                          <GridItem
                            className="mt-4"
                          >
                            <div
                              className="column mt-4"
                              data-test=""
                            >
                              <Button
                                type="submit"
                                variant="primary"
                              >
                                <button
                                  className="button   is-primary "
                                  data-test=""
                                  disabled={false}
                                  type="submit"
                                >
                                  Search
                                </button>
                              </Button>
                            </div>
                          </GridItem>
                        </div>
                      </Grid>
                    </div>
                  </FormSection>
                </form>
              </Form>
            </Formik>
          </SubscriptionsFilterForm>
          <Alert
            message="No Results "
            type="primary"
          >
            <div
              className="notification is-primary "
              data-test=""
              role="alert"
            >
              No Results 
            </div>
          </Alert>
          <Pagination
            onChange={[Function]}
            pageNumber={0}
            pageSize={0}
            totalCount={0}
          />
          <CancelConfirmModal
            isCanceling={false}
            isShowConfirmModal={false}
            onConfirm={[Function]}
            setCancelSubId={[Function]}
          >
            <ModalV2
              destroyOnClose={true}
              onClose={[Function]}
              visible={false}
            >
              <Dialog
                className="modal-container"
                closeIcon={
                  <span
                    aria-label="close"
                    className="delete"
                  />
                }
                destroyOnClose={true}
                onClose={[Function]}
                title={<ModalHeaderV2 />}
                visible={false}
                wrapClassName=""
              />
            </ModalV2>
          </CancelConfirmModal>
        </ErrorBoundary>
      </Subscriptions>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Subscriptions should render blank Info when data is empty 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "subscriptionsRoute",
          "pathname": "/subscriptions",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "subscriptionsRoute",
              "pathname": "/subscriptions",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "subscriptionsRoute",
            "pathname": "/subscriptions",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Subscriptions>
        <ErrorBoundary>
          <H3>
            <h3
              className="title is-3"
              id=""
            >
              Subscriptions
            </h3>
          </H3>
          <SubscriptionsFilterForm
            filterValues={
              Object {
                "appName": "",
                "developerName": "",
                "status": "",
                "type": "",
                "userEmail": "",
              }
            }
            onSearch={[Function]}
          >
            <Formik
              initialValues={
                Object {
                  "appName": "",
                  "developerName": "",
                  "status": "",
                  "type": "",
                  "userEmail": "",
                }
              }
              onSubmit={[Function]}
            >
              <Form
                noValidate={true}
              >
                <form
                  action="#"
                  noValidate={true}
                  onReset={[Function]}
                  onSubmit={[Function]}
                >
                  <FormSection>
                    <div
                      className="form-section"
                    >
                      <FormHeading>
                        <div
                          className="form-heading"
                        >
                          Subscriptions Filter Form
                        </div>
                      </FormHeading>
                      <FormSubHeading>
                        <div
                          className="form-subheading"
                        >
                          Filter the result by type and developer
                        </div>
                      </FormSubHeading>
                      <Grid
                        className="items-center"
                      >
                        <div
                          className="columns items-center"
                          data-test=""
                        >
                          <GridItem>
                            <div
                              className="column"
                              data-test=""
                            >
                              <SelectBox
                                id="type"
                                labelText="Type"
                                name="type"
                                options={
                                  Array [
                                    Object {
                                      "label": "Application Listing",
                                      "value": "applicationListing",
                                    },
                                    Object {
                                      "label": "Developer Registration",
                                      "value": "developerRegistration",
                                    },
                                    Object {
                                      "label": "Developer Edition",
                                      "value": "developerEdition",
                                    },
                                  ]
                                }
                              >
                                <Field
                                  name="type"
                                  validate={null}
                                >
                                  <div
                                    className="field"
                                  >
                                    <div
                                      className="control"
                                    >
                                      <label
                                        className="label "
                                        htmlFor="type"
                                      >
                                        Type
                                      </label>
                                      <select
                                        className="input is-primary "
                                        data-test=""
                                        name="type"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        value=""
                                      >
                                        <option
                                          key="applicationListing"
                                          value="applicationListing"
                                        >
                                          Application Listing
                                        </option>
                                        <option
                                          key="developerRegistration"
                                          value="developerRegistration"
                                        >
                                          Developer Registration
                                        </option>
                                        <option
                                          key="developerEdition"
                                          value="developerEdition"
                                        >
                                          Developer Edition
                                        </option>
                                        <option
                                          disabled={true}
                                          hidden={true}
                                          value=""
                                        >
                                          Please select
                                        </option>
                                      </select>
                                    </div>
                                  </div>
                                </Field>
                              </SelectBox>
                            </div>
                          </GridItem>
                          <GridItem>
                            <div
                              className="column"
                              data-test=""
                            >
                              <Input
                                id="developerName"
                                labelText="Developer Name"
                                maxLength={256}
                                name="developerName"
                                type="text"
                              >
                                <Field
                                  name="developerName"
                                  validate={null}
                                >
                                  <div
                                    className="field"
                                  >
                                    <div
                                      className="control "
                                    >
                                      <label
                                        className="label inline-block "
                                        htmlFor="developerName"
                                      >
                                        Developer Name
                                      </label>
                                      <input
                                        className="input is-primary"
                                        data-test=""
                                        disabled={false}
                                        id="developerName"
                                        maxLength={256}
                                        name="developerName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        placeholder=""
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </Field>
                              </Input>
                            </div>
                          </GridItem>
                          <GridItem>
                            <div
                              className="column"
                              data-test=""
                            >
                              <Input
                                id="userEmail"
                                labelText="User Email"
                                maxLength={256}
                                name="userEmail"
                                type="text"
                              >
                                <Field
                                  name="userEmail"
                                  validate={null}
                                >
                                  <div
                                    className="field"
                                  >
                                    <div
                                      className="control "
                                    >
                                      <label
                                        className="label inline-block "
                                        htmlFor="userEmail"
                                      >
                                        User Email
                                      </label>
                                      <input
                                        className="input is-primary"
                                        data-test=""
                                        disabled={false}
                                        id="userEmail"
                                        maxLength={256}
                                        name="userEmail"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        placeholder=""
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </Field>
                              </Input>
                            </div>
                          </GridItem>
                          <GridItem>
                            <div
                              className="column"
                              data-test=""
                            >
                              <Input
                                id="appName"
                                labelText="App Name"
                                maxLength={256}
                                name="appName"
                                type="text"
                              >
                                <Field
                                  name="appName"
                                  validate={null}
                                >
                                  <div
                                    className="field"
                                  >
                                    <div
                                      className="control "
                                    >
                                      <label
                                        className="label inline-block "
                                        htmlFor="appName"
                                      >
                                        App Name
                                      </label>
                                      <input
                                        className="input is-primary"
                                        data-test=""
                                        disabled={false}
                                        id="appName"
                                        maxLength={256}
                                        name="appName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        placeholder=""
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </Field>
                              </Input>
                            </div>
                          </GridItem>
                          <GridItem>
                            <div
                              className="column"
                              data-test=""
                            >
                              <SelectBox
                                id="status"
                                labelText="Status"
                                name="status"
                                options={
                                  Array [
                                    Object {
                                      "label": "Active",
                                      "value": "active",
                                    },
                                    Object {
                                      "label": "Cancelled",
                                      "value": "cancelled",
                                    },
                                  ]
                                }
                              >
                                <Field
                                  name="status"
                                  validate={null}
                                >
                                  <div
                                    className="field"
                                  >
                                    <div
                                      className="control"
                                    >
                                      <label
                                        className="label "
                                        htmlFor="status"
                                      >
                                        Status
                                      </label>
                                      <select
                                        className="input is-primary "
                                        data-test=""
                                        name="status"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        value=""
                                      >
                                        <option
                                          key="active"
                                          value="active"
                                        >
                                          Active
                                        </option>
                                        <option
                                          key="cancelled"
                                          value="cancelled"
                                        >
                                          Cancelled
                                        </option>
                                        <option
                                          disabled={true}
                                          hidden={true}
                                          value=""
                                        >
                                          Please select
                                        </option>
                                      </select>
                                    </div>
                                  </div>
                                </Field>
                              </SelectBox>
                            </div>
                          </GridItem>
                          <GridItem
                            className="mt-4"
                          >
                            <div
                              className="column mt-4"
                              data-test=""
                            >
                              <Button
                                type="submit"
                                variant="primary"
                              >
                                <button
                                  className="button   is-primary "
                                  data-test=""
                                  disabled={false}
                                  type="submit"
                                >
                                  Search
                                </button>
                              </Button>
                            </div>
                          </GridItem>
                        </div>
                      </Grid>
                    </div>
                  </FormSection>
                </form>
              </Form>
            </Formik>
          </SubscriptionsFilterForm>
          <Alert
            message="No Results "
            type="primary"
          >
            <div
              className="notification is-primary "
              data-test=""
              role="alert"
            >
              No Results 
            </div>
          </Alert>
          <Pagination
            onChange={[Function]}
            pageNumber={0}
            pageSize={0}
            totalCount={0}
          />
          <CancelConfirmModal
            isCanceling={false}
            isShowConfirmModal={false}
            onConfirm={[Function]}
            setCancelSubId={[Function]}
          >
            <ModalV2
              destroyOnClose={true}
              onClose={[Function]}
              visible={false}
            >
              <Dialog
                className="modal-container"
                closeIcon={
                  <span
                    aria-label="close"
                    className="delete"
                  />
                }
                destroyOnClose={true}
                onClose={[Function]}
                title={<ModalHeaderV2 />}
                visible={false}
                wrapClassName=""
              />
            </ModalV2>
          </CancelConfirmModal>
        </ErrorBoundary>
      </Subscriptions>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Subscriptions should show loader when LOADING true 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "subscriptionsRoute",
          "pathname": "/subscriptions",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "subscriptionsRoute",
              "pathname": "/subscriptions",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "subscriptionsRoute",
            "pathname": "/subscriptions",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Subscriptions>
        <ErrorBoundary>
          <H3>
            <h3
              className="title is-3"
              id=""
            >
              Subscriptions
            </h3>
          </H3>
          <SubscriptionsFilterForm
            filterValues={
              Object {
                "appName": "",
                "developerName": "",
                "status": "",
                "type": "",
                "userEmail": "",
              }
            }
            onSearch={[Function]}
          >
            <Formik
              initialValues={
                Object {
                  "appName": "",
                  "developerName": "",
                  "status": "",
                  "type": "",
                  "userEmail": "",
                }
              }
              onSubmit={[Function]}
            >
              <Form
                noValidate={true}
              >
                <form
                  action="#"
                  noValidate={true}
                  onReset={[Function]}
                  onSubmit={[Function]}
                >
                  <FormSection>
                    <div
                      className="form-section"
                    >
                      <FormHeading>
                        <div
                          className="form-heading"
                        >
                          Subscriptions Filter Form
                        </div>
                      </FormHeading>
                      <FormSubHeading>
                        <div
                          className="form-subheading"
                        >
                          Filter the result by type and developer
                        </div>
                      </FormSubHeading>
                      <Grid
                        className="items-center"
                      >
                        <div
                          className="columns items-center"
                          data-test=""
                        >
                          <GridItem>
                            <div
                              className="column"
                              data-test=""
                            >
                              <SelectBox
                                id="type"
                                labelText="Type"
                                name="type"
                                options={
                                  Array [
                                    Object {
                                      "label": "Application Listing",
                                      "value": "applicationListing",
                                    },
                                    Object {
                                      "label": "Developer Registration",
                                      "value": "developerRegistration",
                                    },
                                    Object {
                                      "label": "Developer Edition",
                                      "value": "developerEdition",
                                    },
                                  ]
                                }
                              >
                                <Field
                                  name="type"
                                  validate={null}
                                >
                                  <div
                                    className="field"
                                  >
                                    <div
                                      className="control"
                                    >
                                      <label
                                        className="label "
                                        htmlFor="type"
                                      >
                                        Type
                                      </label>
                                      <select
                                        className="input is-primary "
                                        data-test=""
                                        name="type"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        value=""
                                      >
                                        <option
                                          key="applicationListing"
                                          value="applicationListing"
                                        >
                                          Application Listing
                                        </option>
                                        <option
                                          key="developerRegistration"
                                          value="developerRegistration"
                                        >
                                          Developer Registration
                                        </option>
                                        <option
                                          key="developerEdition"
                                          value="developerEdition"
                                        >
                                          Developer Edition
                                        </option>
                                        <option
                                          disabled={true}
                                          hidden={true}
                                          value=""
                                        >
                                          Please select
                                        </option>
                                      </select>
                                    </div>
                                  </div>
                                </Field>
                              </SelectBox>
                            </div>
                          </GridItem>
                          <GridItem>
                            <div
                              className="column"
                              data-test=""
                            >
                              <Input
                                id="developerName"
                                labelText="Developer Name"
                                maxLength={256}
                                name="developerName"
                                type="text"
                              >
                                <Field
                                  name="developerName"
                                  validate={null}
                                >
                                  <div
                                    className="field"
                                  >
                                    <div
                                      className="control "
                                    >
                                      <label
                                        className="label inline-block "
                                        htmlFor="developerName"
                                      >
                                        Developer Name
                                      </label>
                                      <input
                                        className="input is-primary"
                                        data-test=""
                                        disabled={false}
                                        id="developerName"
                                        maxLength={256}
                                        name="developerName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        placeholder=""
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </Field>
                              </Input>
                            </div>
                          </GridItem>
                          <GridItem>
                            <div
                              className="column"
                              data-test=""
                            >
                              <Input
                                id="userEmail"
                                labelText="User Email"
                                maxLength={256}
                                name="userEmail"
                                type="text"
                              >
                                <Field
                                  name="userEmail"
                                  validate={null}
                                >
                                  <div
                                    className="field"
                                  >
                                    <div
                                      className="control "
                                    >
                                      <label
                                        className="label inline-block "
                                        htmlFor="userEmail"
                                      >
                                        User Email
                                      </label>
                                      <input
                                        className="input is-primary"
                                        data-test=""
                                        disabled={false}
                                        id="userEmail"
                                        maxLength={256}
                                        name="userEmail"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        placeholder=""
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </Field>
                              </Input>
                            </div>
                          </GridItem>
                          <GridItem>
                            <div
                              className="column"
                              data-test=""
                            >
                              <Input
                                id="appName"
                                labelText="App Name"
                                maxLength={256}
                                name="appName"
                                type="text"
                              >
                                <Field
                                  name="appName"
                                  validate={null}
                                >
                                  <div
                                    className="field"
                                  >
                                    <div
                                      className="control "
                                    >
                                      <label
                                        className="label inline-block "
                                        htmlFor="appName"
                                      >
                                        App Name
                                      </label>
                                      <input
                                        className="input is-primary"
                                        data-test=""
                                        disabled={false}
                                        id="appName"
                                        maxLength={256}
                                        name="appName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        placeholder=""
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </Field>
                              </Input>
                            </div>
                          </GridItem>
                          <GridItem>
                            <div
                              className="column"
                              data-test=""
                            >
                              <SelectBox
                                id="status"
                                labelText="Status"
                                name="status"
                                options={
                                  Array [
                                    Object {
                                      "label": "Active",
                                      "value": "active",
                                    },
                                    Object {
                                      "label": "Cancelled",
                                      "value": "cancelled",
                                    },
                                  ]
                                }
                              >
                                <Field
                                  name="status"
                                  validate={null}
                                >
                                  <div
                                    className="field"
                                  >
                                    <div
                                      className="control"
                                    >
                                      <label
                                        className="label "
                                        htmlFor="status"
                                      >
                                        Status
                                      </label>
                                      <select
                                        className="input is-primary "
                                        data-test=""
                                        name="status"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        value=""
                                      >
                                        <option
                                          key="active"
                                          value="active"
                                        >
                                          Active
                                        </option>
                                        <option
                                          key="cancelled"
                                          value="cancelled"
                                        >
                                          Cancelled
                                        </option>
                                        <option
                                          disabled={true}
                                          hidden={true}
                                          value=""
                                        >
                                          Please select
                                        </option>
                                      </select>
                                    </div>
                                  </div>
                                </Field>
                              </SelectBox>
                            </div>
                          </GridItem>
                          <GridItem
                            className="mt-4"
                          >
                            <div
                              className="column mt-4"
                              data-test=""
                            >
                              <Button
                                type="submit"
                                variant="primary"
                              >
                                <button
                                  className="button   is-primary "
                                  data-test=""
                                  disabled={false}
                                  type="submit"
                                >
                                  Search
                                </button>
                              </Button>
                            </div>
                          </GridItem>
                        </div>
                      </Grid>
                    </div>
                  </FormSection>
                </form>
              </Form>
            </Formik>
          </SubscriptionsFilterForm>
          <Alert
            message="No Results "
            type="primary"
          >
            <div
              className="notification is-primary "
              data-test=""
              role="alert"
            >
              No Results 
            </div>
          </Alert>
          <Pagination
            onChange={[Function]}
            pageNumber={0}
            pageSize={0}
            totalCount={0}
          />
          <CancelConfirmModal
            isCanceling={false}
            isShowConfirmModal={false}
            onConfirm={[Function]}
            setCancelSubId={[Function]}
          >
            <ModalV2
              destroyOnClose={true}
              onClose={[Function]}
              visible={false}
            >
              <Dialog
                className="modal-container"
                closeIcon={
                  <span
                    aria-label="close"
                    className="delete"
                  />
                }
                destroyOnClose={true}
                onClose={[Function]}
                title={<ModalHeaderV2 />}
                visible={false}
                wrapClassName=""
              />
            </ModalV2>
          </CancelConfirmModal>
        </ErrorBoundary>
      </Subscriptions>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`renderResult should match snapshot when has result data 1`] = `
<React.Fragment>
  <Section
    hasPadding={false}
  >
    <div>
      Total: 
      0
    </div>
  </Section>
  <Table
    columns={
      Array [
        Object {
          "Header": "Subscription Type",
          "accessor": "type",
        },
        Object {
          "Header": "Summary",
          "accessor": "summary",
        },
        Object {
          "Header": "Application ID",
          "accessor": "applicationId",
        },
        Object {
          "Header": "Member Name",
          "accessor": "developerId",
        },
        Object {
          "Header": "Member Email",
          "accessor": "user",
        },
        Object {
          "Header": "Start Date",
          "accessor": "created",
        },
        Object {
          "Header": "Renewal Date",
          "accessor": "renews",
        },
        Object {
          "Header": "Frequency",
          "accessor": "frequency",
        },
        Object {
          "Header": "Cost",
          "accessor": "cost",
        },
        Object {
          "Header": "Status",
          "accessor": "cancelled",
        },
        Object {
          "Header": "",
          "accessor": "id",
        },
      ]
    }
    data={
      Array [
        Object {
          "applicationId": "123",
          "cost": 0,
          "created": "2020-11-17T07:53:38",
          "developerId": "b1da6abb-a522-45b8-b7da-de186ea4a01b",
          "frequency": "monthly",
          "id": "1de28f85-0239-497b-b20f-a855b79527e4",
          "renews": "2020-12-17",
          "summary": "Developer edition license for ltran@reapit.com",
          "type": "developerEdition",
          "user": "ltran@reapit.com",
        },
      ]
    }
    expandable={true}
    loading={false}
    scrollable={true}
  />
</React.Fragment>
`;

exports[`renderResult should match snapshot when no result 1`] = `
<Alert
  message="No Results "
  type="primary"
/>
`;
