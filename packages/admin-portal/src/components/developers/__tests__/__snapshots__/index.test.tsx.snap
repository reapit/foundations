// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DevsManagement should render component when loading 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.section>
        <mock-styled.h1
          classname=""
        >
          Developers
        </mock-styled.h1>
        <form>
          <mock-styled.div
            classname="mock-css.
  margin-bottom: 2.5rem;
"
          >
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="name"
                  type="search"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Developer Name
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="company"
                  type="search"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Company Name
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="gitHubUsername"
                  type="search"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Github Username
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="registeredFrom"
                  type="date"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Registered From
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="registeredTo"
                  type="date"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Registered To
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Status
              </mock-styled.label>
              <mock-styled.div>
                <mock-styled.select
                  name="status"
                >
                  <option
                    value=""
                  >
                    Please Select
                  </option>
                  <option
                    value="incomplete"
                  >
                    Incomplete
                  </option>
                  <option
                    value="pending"
                  >
                    Pending
                  </option>
                  <option
                    value="confirmed"
                  >
                    Confirmed
                  </option>
                  <option
                    value="underReview"
                  >
                    Under Review
                  </option>
                  <option
                    value="removed"
                  >
                    Removed
                  </option>
                </mock-styled.select>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </form>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div />
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.section>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.section>
      <mock-styled.h1
        classname=""
      >
        Developers
      </mock-styled.h1>
      <form>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 2.5rem;
"
        >
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="name"
                type="search"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Developer Name
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="company"
                type="search"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Company Name
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="gitHubUsername"
                type="search"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Github Username
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="registeredFrom"
                type="date"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Registered From
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="registeredTo"
                type="date"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Registered To
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.label>
              Status
            </mock-styled.label>
            <mock-styled.div>
              <mock-styled.select
                name="status"
              >
                <option
                  value=""
                >
                  Please Select
                </option>
                <option
                  value="incomplete"
                >
                  Incomplete
                </option>
                <option
                  value="pending"
                >
                  Pending
                </option>
                <option
                  value="confirmed"
                >
                  Confirmed
                </option>
                <option
                  value="underReview"
                >
                  Under Review
                </option>
                <option
                  value="removed"
                >
                  Removed
                </option>
              </mock-styled.select>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </form>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`DevsManagement should render component with data 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.section>
        <mock-styled.h1
          classname=""
        >
          Developers
        </mock-styled.h1>
        <form>
          <mock-styled.div
            classname="mock-css.
  margin-bottom: 2.5rem;
"
          >
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="name"
                  type="search"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Developer Name
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="company"
                  type="search"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Company Name
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="gitHubUsername"
                  type="search"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Github Username
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="registeredFrom"
                  type="date"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Registered From
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="registeredTo"
                  type="date"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Registered To
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Status
              </mock-styled.label>
              <mock-styled.div>
                <mock-styled.select
                  name="status"
                >
                  <option
                    value=""
                  >
                    Please Select
                  </option>
                  <option
                    value="incomplete"
                  >
                    Incomplete
                  </option>
                  <option
                    value="pending"
                  >
                    Pending
                  </option>
                  <option
                    value="confirmed"
                  >
                    Confirmed
                  </option>
                  <option
                    value="underReview"
                  >
                    Under Review
                  </option>
                  <option
                    value="removed"
                  >
                    Removed
                  </option>
                </mock-styled.select>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </form>
        <div
          class="mock-css.
  margin-bottom: 2.5rem;
"
        >
          <mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.button
                classname="mock-css."
                type="button"
              >
                <mock-styled.div />
                Download CSV
              </mock-styled.button>
            </mock-styled.div>
          </mock-styled.div>
        </div>
        <div
          class="mock-css.
  margin-bottom: 2.5rem;
"
        >
          <mock-styled.h2
            classname=""
          >
            Total Developers
          </mock-styled.h2>
          <mock-styled.p
            classname="mock-css."
          >
            1
          </mock-styled.p>
          <mock-styled.div
            data-has-call-to-action="false"
            data-has-expandable-action="true"
            data-num-columns-excl-action-col="7"
          >
            <mock-styled.div>
              <mock-styled.div>
                Company Name
              </mock-styled.div>
              <mock-styled.div>
                Developer Name
              </mock-styled.div>
              <mock-styled.div>
                Developer Email
              </mock-styled.div>
              <mock-styled.div>
                Job Title
              </mock-styled.div>
              <mock-styled.div>
                Account Status
              </mock-styled.div>
              <mock-styled.div>
                Created Date
              </mock-styled.div>
              <mock-styled.div>
                Agreed Terms Date
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.span
                  classname="mock-css."
                  style="font-size: 1.2rem;"
                >
                  <svg
                    style="font-size: 1.2rem;"
                  />
                </mock-styled.span>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div>
                <mock-styled.div
                  classname="mock-css."
                >
                  <mock-styled.div
                    data-narrow-label="Company Name"
                  >
                    Reapit Sales
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="mock-css."
                >
                  <mock-styled.div
                    data-narrow-label="Developer Name"
                  >
                    Sales Team
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="mock-css."
                >
                  <mock-styled.div
                    data-narrow-label="Developer Email"
                  >
                    test@example.com
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname=""
                >
                  <mock-styled.div
                    data-narrow-label="Job Title"
                  />
                </mock-styled.div>
                <mock-styled.div
                  classname=""
                >
                  <mock-styled.div
                    data-narrow-label="Account Status"
                  >
                    confirmed
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname=""
                >
                  <mock-styled.div
                    data-narrow-label="Created Date"
                  >
                    03 Mar 2022 10:18
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname=""
                >
                  <mock-styled.div
                    data-narrow-label="Agreed Terms Date"
                  >
                    -
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname=""
                >
                  <mock-styled.span
                    classname="mock-css."
                  >
                    <svg />
                  </mock-styled.span>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.div>
                  <mock-styled.div>
                    <mock-styled.div
                      classname="mock-css."
                    >
                      <mock-styled.button
                        classname="mock-css."
                        type="button"
                      >
                        <mock-styled.div />
                        Update Status
                      </mock-styled.button>
                      <mock-styled.button
                        classname="mock-css."
                        type="button"
                      >
                        <mock-styled.div />
                        DevEdition is Free
                      </mock-styled.button>
                      <mock-styled.button
                        classname="mock-css."
                        disabled="false"
                      >
                        <mock-styled.div />
                        Toggle Subscription 
                      </mock-styled.button>
                      <mock-styled.button
                        classname="mock-css."
                      >
                        <mock-styled.div />
                        Invite Member
                      </mock-styled.button>
                      <mock-styled.button
                        classname="mock-css."
                      >
                        <mock-styled.div />
                        Fetch Members
                      </mock-styled.button>
                      <mock-styled.button
                        classname="mock-css."
                      >
                        <mock-styled.div />
                        Fetch Apps
                      </mock-styled.button>
                      <mock-styled.button
                        classname="mock-css."
                        type="button"
                      >
                        <mock-styled.div />
                        Delete Developer
                      </mock-styled.button>
                    </mock-styled.div>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.input
              value="1"
            />
             of 
            1
          </mock-styled.div>
          <mock-styled.button
            data-testid="back-button"
            type="button"
          >
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.button>
          <mock-styled.button
            data-testid="forward-button"
            type="button"
          >
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.button>
        </mock-styled.div>
      </mock-styled.section>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.section>
      <mock-styled.h1
        classname=""
      >
        Developers
      </mock-styled.h1>
      <form>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 2.5rem;
"
        >
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="name"
                type="search"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Developer Name
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="company"
                type="search"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Company Name
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="gitHubUsername"
                type="search"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Github Username
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="registeredFrom"
                type="date"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Registered From
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="registeredTo"
                type="date"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Registered To
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.label>
              Status
            </mock-styled.label>
            <mock-styled.div>
              <mock-styled.select
                name="status"
              >
                <option
                  value=""
                >
                  Please Select
                </option>
                <option
                  value="incomplete"
                >
                  Incomplete
                </option>
                <option
                  value="pending"
                >
                  Pending
                </option>
                <option
                  value="confirmed"
                >
                  Confirmed
                </option>
                <option
                  value="underReview"
                >
                  Under Review
                </option>
                <option
                  value="removed"
                >
                  Removed
                </option>
              </mock-styled.select>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </form>
      <div
        class="mock-css.
  margin-bottom: 2.5rem;
"
      >
        <mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.button
              classname="mock-css."
              type="button"
            >
              <mock-styled.div />
              Download CSV
            </mock-styled.button>
          </mock-styled.div>
        </mock-styled.div>
      </div>
      <div
        class="mock-css.
  margin-bottom: 2.5rem;
"
      >
        <mock-styled.h2
          classname=""
        >
          Total Developers
        </mock-styled.h2>
        <mock-styled.p
          classname="mock-css."
        >
          1
        </mock-styled.p>
        <mock-styled.div
          data-has-call-to-action="false"
          data-has-expandable-action="true"
          data-num-columns-excl-action-col="7"
        >
          <mock-styled.div>
            <mock-styled.div>
              Company Name
            </mock-styled.div>
            <mock-styled.div>
              Developer Name
            </mock-styled.div>
            <mock-styled.div>
              Developer Email
            </mock-styled.div>
            <mock-styled.div>
              Job Title
            </mock-styled.div>
            <mock-styled.div>
              Account Status
            </mock-styled.div>
            <mock-styled.div>
              Created Date
            </mock-styled.div>
            <mock-styled.div>
              Agreed Terms Date
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname="mock-css."
                style="font-size: 1.2rem;"
              >
                <svg
                  style="font-size: 1.2rem;"
                />
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div>
              <mock-styled.div
                classname="mock-css."
              >
                <mock-styled.div
                  data-narrow-label="Company Name"
                >
                  Reapit Sales
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="mock-css."
              >
                <mock-styled.div
                  data-narrow-label="Developer Name"
                >
                  Sales Team
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="mock-css."
              >
                <mock-styled.div
                  data-narrow-label="Developer Email"
                >
                  test@example.com
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.div
                  data-narrow-label="Job Title"
                />
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.div
                  data-narrow-label="Account Status"
                >
                  confirmed
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.div
                  data-narrow-label="Created Date"
                >
                  03 Mar 2022 10:18
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.div
                  data-narrow-label="Agreed Terms Date"
                >
                  -
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.span
                  classname="mock-css."
                >
                  <svg />
                </mock-styled.span>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.div
                    classname="mock-css."
                  >
                    <mock-styled.button
                      classname="mock-css."
                      type="button"
                    >
                      <mock-styled.div />
                      Update Status
                    </mock-styled.button>
                    <mock-styled.button
                      classname="mock-css."
                      type="button"
                    >
                      <mock-styled.div />
                      DevEdition is Free
                    </mock-styled.button>
                    <mock-styled.button
                      classname="mock-css."
                      disabled="false"
                    >
                      <mock-styled.div />
                      Toggle Subscription 
                    </mock-styled.button>
                    <mock-styled.button
                      classname="mock-css."
                    >
                      <mock-styled.div />
                      Invite Member
                    </mock-styled.button>
                    <mock-styled.button
                      classname="mock-css."
                    >
                      <mock-styled.div />
                      Fetch Members
                    </mock-styled.button>
                    <mock-styled.button
                      classname="mock-css."
                    >
                      <mock-styled.div />
                      Fetch Apps
                    </mock-styled.button>
                    <mock-styled.button
                      classname="mock-css."
                      type="button"
                    >
                      <mock-styled.div />
                      Delete Developer
                    </mock-styled.button>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.input
            value="1"
          />
           of 
          1
        </mock-styled.div>
        <mock-styled.button
          data-testid="back-button"
          type="button"
        >
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.button>
        <mock-styled.button
          data-testid="forward-button"
          type="button"
        >
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.button>
      </mock-styled.div>
    </mock-styled.section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
