// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DeveloperStatusModal should render component with a developer 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <form>
        <mock-styled.div
          classname="el-mb11"
        >
          <mock-styled.div>
            <mock-styled.label>
              Update Developer Status
            </mock-styled.label>
            <mock-styled.div
              classname="el-has-grey-bg"
            >
              <mock-styled.input
                id="option-status-incomplete"
                name="status"
                type="radio"
                value="incomplete"
              />
              <mock-styled.label
                classname="el-has-grey-bg"
                htmlfor="option-status-incomplete"
              >
                <mock-styled.span>
                  Incomplete
                </mock-styled.span>
              </mock-styled.label>
              <mock-styled.input
                id="option-status-pending"
                name="status"
                type="radio"
                value="pending"
              />
              <mock-styled.label
                classname="el-has-grey-bg"
                htmlfor="option-status-pending"
              >
                <mock-styled.span>
                  Pending
                </mock-styled.span>
              </mock-styled.label>
              <mock-styled.input
                id="option-status-confirmed"
                name="status"
                type="radio"
                value="confirmed"
              />
              <mock-styled.label
                classname="el-has-grey-bg"
                htmlfor="option-status-confirmed"
              >
                <mock-styled.span>
                  Confirmed
                </mock-styled.span>
              </mock-styled.label>
              <mock-styled.input
                id="option-status-underReview"
                name="status"
                type="radio"
                value="underReview"
              />
              <mock-styled.label
                classname="el-has-grey-bg"
                htmlfor="option-status-underReview"
              >
                <mock-styled.span>
                  Under Review
                </mock-styled.span>
              </mock-styled.label>
              <mock-styled.input
                id="option-status-removed"
                name="status"
                type="radio"
                value="removed"
              />
              <mock-styled.label
                classname="el-has-grey-bg"
                htmlfor="option-status-removed"
              >
                <mock-styled.span>
                  Removed
                </mock-styled.span>
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                disabled="true"
                id="test-static-id"
                name="reapitReference"
                placeholder="Reapit Reference if account confirmed"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Reapit Reference
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.textarea
                classname=""
                name="notes"
                placeholder="Notes on developer"
                type="text"
              />
              <mock-styled.label>
                Notes
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div
            classname="el-button-group-align-right"
          >
            <mock-styled.button
              classname="el-intent-neutral"
            >
              <mock-styled.div />
              Cancel
            </mock-styled.button>
            <mock-styled.button
              classname="el-intent-primary"
              type="submit"
            >
              <mock-styled.div />
              Confirm
            </mock-styled.button>
          </mock-styled.div>
        </mock-styled.div>
      </form>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <form>
      <mock-styled.div
        classname="el-mb11"
      >
        <mock-styled.div>
          <mock-styled.label>
            Update Developer Status
          </mock-styled.label>
          <mock-styled.div
            classname="el-has-grey-bg"
          >
            <mock-styled.input
              id="option-status-incomplete"
              name="status"
              type="radio"
              value="incomplete"
            />
            <mock-styled.label
              classname="el-has-grey-bg"
              htmlfor="option-status-incomplete"
            >
              <mock-styled.span>
                Incomplete
              </mock-styled.span>
            </mock-styled.label>
            <mock-styled.input
              id="option-status-pending"
              name="status"
              type="radio"
              value="pending"
            />
            <mock-styled.label
              classname="el-has-grey-bg"
              htmlfor="option-status-pending"
            >
              <mock-styled.span>
                Pending
              </mock-styled.span>
            </mock-styled.label>
            <mock-styled.input
              id="option-status-confirmed"
              name="status"
              type="radio"
              value="confirmed"
            />
            <mock-styled.label
              classname="el-has-grey-bg"
              htmlfor="option-status-confirmed"
            >
              <mock-styled.span>
                Confirmed
              </mock-styled.span>
            </mock-styled.label>
            <mock-styled.input
              id="option-status-underReview"
              name="status"
              type="radio"
              value="underReview"
            />
            <mock-styled.label
              classname="el-has-grey-bg"
              htmlfor="option-status-underReview"
            >
              <mock-styled.span>
                Under Review
              </mock-styled.span>
            </mock-styled.label>
            <mock-styled.input
              id="option-status-removed"
              name="status"
              type="radio"
              value="removed"
            />
            <mock-styled.label
              classname="el-has-grey-bg"
              htmlfor="option-status-removed"
            >
              <mock-styled.span>
                Removed
              </mock-styled.span>
            </mock-styled.label>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.input
              classname=""
              disabled="true"
              id="test-static-id"
              name="reapitReference"
              placeholder="Reapit Reference if account confirmed"
            />
            <mock-styled.label
              htmlfor="test-static-id"
            >
              Reapit Reference
            </mock-styled.label>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.textarea
              classname=""
              name="notes"
              placeholder="Notes on developer"
              type="text"
            />
            <mock-styled.label>
              Notes
            </mock-styled.label>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div
          classname="el-button-group-align-right"
        >
          <mock-styled.button
            classname="el-intent-neutral"
          >
            <mock-styled.div />
            Cancel
          </mock-styled.button>
          <mock-styled.button
            classname="el-intent-primary"
            type="submit"
          >
            <mock-styled.div />
            Confirm
          </mock-styled.button>
        </mock-styled.div>
      </mock-styled.div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`DeveloperStatusModal should render component with no developer 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
