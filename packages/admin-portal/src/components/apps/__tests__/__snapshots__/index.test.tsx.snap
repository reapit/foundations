// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppsPage should render a component when has data 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <section
        class="el-page-container"
      >
        <mock-styled.h1
          classname="el-text-base"
        >
          Apps Management
        </mock-styled.h1>
        <form>
          <mock-styled.div
            classname="el-mb11"
          >
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="searchTerm"
                  type="search"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  App or Developer Name
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="companyName"
                  type="search"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Company Name
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="id"
                  type="search"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  App Id
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="registeredFrom"
                  type="date"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Registered From
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="registeredTo"
                  type="date"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Registered To
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="publicListedDateFrom"
                  type="date"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Publicly Listed From
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="publicListedDateTo"
                  type="date"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Publicly Listed To
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  In Public AppMarket
                </mock-styled.label>
                <mock-styled.div
                  classname="el-has-grey-bg"
                >
                  <mock-styled.input
                    id="option-public-all"
                    name="isPublic"
                    type="radio"
                    value=""
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-public-all"
                  >
                    <mock-styled.span>
                      All
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="option-public-true"
                    name="isPublic"
                    type="radio"
                    value="true"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-public-true"
                  >
                    <mock-styled.span>
                      Public
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="option-public-false"
                    name="isPublic"
                    type="radio"
                    value="false"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-public-false"
                  >
                    <mock-styled.span>
                      Private
                    </mock-styled.span>
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Integration or AC Enabled
                </mock-styled.label>
                <mock-styled.div
                  classname="el-has-grey-bg"
                >
                  <mock-styled.input
                    id="option-integration-all"
                    name="isDirectApi"
                    type="radio"
                    value=""
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-integration-all"
                  >
                    <mock-styled.span>
                      All
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="option-integration-true"
                    name="isDirectApi"
                    type="radio"
                    value="true"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-integration-true"
                  >
                    <mock-styled.span>
                      Integration
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="option-integration-false"
                    name="isDirectApi"
                    type="radio"
                    value="false"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-integration-false"
                  >
                    <mock-styled.span>
                      AC App
                    </mock-styled.span>
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Publicly Listed
                </mock-styled.label>
                <mock-styled.div
                  classname="el-has-grey-bg"
                >
                  <mock-styled.input
                    id="option-listed-all"
                    name="isListed"
                    type="radio"
                    value=""
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-listed-all"
                  >
                    <mock-styled.span>
                      All
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="option-listed-true"
                    name="isListed"
                    type="radio"
                    value="true"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-listed-true"
                  >
                    <mock-styled.span>
                      Listed
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="option-listed-false"
                    name="isListed"
                    type="radio"
                    value="false"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-listed-false"
                  >
                    <mock-styled.span>
                      Development
                    </mock-styled.span>
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Is Charged Consumption
                </mock-styled.label>
                <mock-styled.div
                  classname="el-has-grey-bg"
                >
                  <mock-styled.input
                    id="option-consumption-all"
                    name="isChargedConsumption"
                    type="radio"
                    value=""
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-consumption-all"
                  >
                    <mock-styled.span>
                      All
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="option-consumption-true"
                    name="isChargedConsumption"
                    type="radio"
                    value="true"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-consumption-true"
                  >
                    <mock-styled.span>
                      Charged
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="option-consumption-false"
                    name="isChargedConsumption"
                    type="radio"
                    value="false"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-consumption-false"
                  >
                    <mock-styled.span>
                      Free
                    </mock-styled.span>
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </form>
        <div
          class="el-mb11"
        >
          <mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.button
                classname="el-intent-primary"
                type="button"
              >
                <mock-styled.div />
                Download CSV
              </mock-styled.button>
            </mock-styled.div>
          </mock-styled.div>
        </div>
        <div
          class="el-mb11"
        >
          <mock-styled.h2
            classname="el-text-base"
          >
            Total Apps
          </mock-styled.h2>
          <mock-styled.p
            classname="el-text-base el-has-grey-text"
          >
            1
          </mock-styled.p>
          <mock-styled.div
            data-has-call-to-action="false"
            data-has-expandable-action="true"
            data-num-columns-excl-action-col="10"
            role="table"
          >
            <mock-styled.div
              role="row"
            >
              <mock-styled.div
                aria-label="App Name"
                role="columnheader"
              >
                App Name
              </mock-styled.div>
              <mock-styled.div
                aria-label="AppId"
                role="columnheader"
              >
                AppId
              </mock-styled.div>
              <mock-styled.div
                aria-label="Summary"
                role="columnheader"
              >
                Summary
              </mock-styled.div>
              <mock-styled.div
                aria-label="Developer Name"
                role="columnheader"
              >
                Developer Name
              </mock-styled.div>
              <mock-styled.div
                aria-label="Listed"
                role="columnheader"
              >
                Listed
              </mock-styled.div>
              <mock-styled.div
                aria-label="Integration"
                role="columnheader"
              >
                Integration
              </mock-styled.div>
              <mock-styled.div
                aria-label="Featured"
                role="columnheader"
              >
                Featured
              </mock-styled.div>
              <mock-styled.div
                aria-label="Created"
                role="columnheader"
              >
                Created
              </mock-styled.div>
              <mock-styled.div
                aria-label="Publicly Listed"
                role="columnheader"
              >
                Publicly Listed
              </mock-styled.div>
              <mock-styled.div
                aria-label="Public"
                role="columnheader"
              >
                Public
              </mock-styled.div>
              <mock-styled.div
                role="columnheader"
              >
                <mock-styled.span
                  classname="el-intent-default el-icon-new"
                  role="img"
                >
                  <svg
                    fill="none"
                    height="1em"
                    viewBox="0 0 24 24"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M18.917 12.88c.08-.584.08-1.176 0-1.76l2.06-1.85a1 1 0 0 0 .25-1.27l-1.18-2a1 1 0 0 0-1.19-.45l-2.65.9a7.2 7.2 0 0 0-1.52-.89l-.55-2.76a1 1 0 0 0-1-.8h-2.34a1 1 0 0 0-1 .8l-.53 2.74a7.5 7.5 0 0 0-1.52.89l-2.65-.9a1 1 0 0 0-1.19.47l-1.18 2a1 1 0 0 0 .25 1.27l2.1 1.85a6.5 6.5 0 0 0 0 1.76l-2.1 1.85a1 1 0 0 0-.25 1.27l1.18 2a1 1 0 0 0 1.19.45l2.65-.9c.47.356.98.654 1.52.89l.55 2.74a1 1 0 0 0 1 .8h2.36a1 1 0 0 0 1-.8l.55-2.74a7.2 7.2 0 0 0 1.52-.89l2.65.9a1 1 0 0 0 1.15-.45l1.18-2a1 1 0 0 0-.25-1.27zM11.977 15a3 3 0 1 1 0-6 3 3 0 0 1 0 6"
                      fill="currentColor"
                    />
                  </svg>
                </mock-styled.span>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
              role="row"
            >
              <mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                  role="cell"
                >
                  <mock-styled.div
                    data-narrow-label="App Name"
                  >
                    Reapit Insights
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                  role="cell"
                >
                  <mock-styled.div
                    data-narrow-label="AppId"
                  >
                    f83e679e-a7cd-4889-a7f9-f4a8a8ed5a09
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                  role="cell"
                >
                  <mock-styled.div
                    data-narrow-label="Summary"
                  >
                    Blah blah blah. Blah blah blah. Blah blah blah. Blah blah blah. Blah blah blah.
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                  role="cell"
                >
                  <mock-styled.div
                    data-narrow-label="Developer Name"
                  >
                    Reapit Ltd Internal
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                  role="cell"
                >
                  <mock-styled.div
                    data-narrow-label="Listed"
                  >
                    <mock-styled.span
                      classname="el-intent-success el-icon-new"
                      role="img"
                    >
                      <svg
                        fill="none"
                        height="1em"
                        viewBox="0 0 24 24"
                        width="1em"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          clip-rule="evenodd"
                          d="M20.289 6.387a1.323 1.323 0 0 0-1.87 0l-8.42 8.42-3.741-3.743a1.323 1.323 0 0 0-1.87 1.87l4.676 4.678a1.32 1.32 0 0 0 1.87 0l9.355-9.354a1.323 1.323 0 0 0 0-1.87"
                          fill="currentColor"
                          fill-rule="evenodd"
                        />
                      </svg>
                    </mock-styled.span>
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                  role="cell"
                >
                  <mock-styled.div
                    data-narrow-label="Integration"
                  >
                    <mock-styled.span
                      classname="el-intent-danger el-icon-new"
                      role="img"
                    >
                      <svg
                        fill="none"
                        height="1em"
                        viewBox="0 0 24 24"
                        width="1em"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="m12.36 13.83 5.66 5.66a1 1 0 1 0 1.41-1.41l-5.66-5.66 5.66-5.66a1 1 0 1 0-1.41-1.41l-5.66 5.66L6.7 5.35a1 1 0 0 0-1.41 0 1 1 0 0 0 0 1.41l5.66 5.66-5.66 5.66a1 1 0 0 0 0 1.41 1 1 0 0 0 1.41 0z"
                          fill="currentColor"
                        />
                      </svg>
                    </mock-styled.span>
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                  role="cell"
                >
                  <mock-styled.div
                    data-narrow-label="Featured"
                  >
                    <mock-styled.span
                      classname="el-intent-danger el-icon-new"
                      role="img"
                    >
                      <svg
                        fill="none"
                        height="1em"
                        viewBox="0 0 24 24"
                        width="1em"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="m12.36 13.83 5.66 5.66a1 1 0 1 0 1.41-1.41l-5.66-5.66 5.66-5.66a1 1 0 1 0-1.41-1.41l-5.66 5.66L6.7 5.35a1 1 0 0 0-1.41 0 1 1 0 0 0 0 1.41l5.66 5.66-5.66 5.66a1 1 0 0 0 0 1.41 1 1 0 0 0 1.41 0z"
                          fill="currentColor"
                        />
                      </svg>
                    </mock-styled.span>
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                  role="cell"
                >
                  <mock-styled.div
                    data-narrow-label="Created"
                  >
                    04 Mar 2021 09:37
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                  role="cell"
                >
                  <mock-styled.div
                    data-narrow-label="Publicly Listed"
                  >
                    -
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="el-table-cell-has-dark-text"
                  role="cell"
                >
                  <mock-styled.div
                    data-narrow-label="Public"
                  >
                    <mock-styled.span
                      classname="el-intent-danger el-icon-new"
                      role="img"
                    >
                      <svg
                        fill="none"
                        height="1em"
                        viewBox="0 0 24 24"
                        width="1em"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="m12.36 13.83 5.66 5.66a1 1 0 1 0 1.41-1.41l-5.66-5.66 5.66-5.66a1 1 0 1 0-1.41-1.41l-5.66 5.66L6.7 5.35a1 1 0 0 0-1.41 0 1 1 0 0 0 0 1.41l5.66 5.66-5.66 5.66a1 1 0 0 0 0 1.41 1 1 0 0 0 1.41 0z"
                          fill="currentColor"
                        />
                      </svg>
                    </mock-styled.span>
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname=""
                  role="cell"
                >
                  <mock-styled.span
                    classname="el-intent-default el-icon-new"
                    role="img"
                  >
                    <svg
                      fill="none"
                      height="1em"
                      viewBox="0 0 24 24"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M7 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4M19 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4"
                        fill="currentColor"
                      />
                    </svg>
                  </mock-styled.span>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                aria-hidden="false"
                classname=""
              >
                <mock-styled.div>
                  <mock-styled.div>
                    <mock-styled.div
                      classname="el-button-group-align-center"
                    >
                      <mock-styled.button
                        classname="el-intent-neutral"
                      >
                        <mock-styled.div />
                        View in AppMarket
                      </mock-styled.button>
                      <mock-styled.button
                        classname="el-intent-neutral"
                      >
                        <mock-styled.div />
                        View in DevPortal
                      </mock-styled.button>
                      <mock-styled.button
                        classname="el-intent-primary"
                        disabled="false"
                      >
                        <mock-styled.div />
                        Check AWS Only
                      </mock-styled.button>
                      <mock-styled.button
                        classname="el-intent-primary"
                      >
                        <mock-styled.div />
                        Toggle Subscription
                      </mock-styled.button>
                      <mock-styled.button
                        classname="el-intent-primary"
                      >
                        <mock-styled.div />
                        Togggle Featured
                      </mock-styled.button>
                      <mock-styled.button
                        classname="el-intent-primary"
                      >
                        <mock-styled.div />
                        Togggle API Consumption
                      </mock-styled.button>
                      <mock-styled.button
                        classname="el-intent-danger"
                        type="button"
                      >
                        <mock-styled.div />
                        Delete
                      </mock-styled.button>
                    </mock-styled.div>
                  </mock-styled.div>
                  <mock-styled.label>
                    Support Notification
                  </mock-styled.label>
                  <mock-styled.div
                    classname=""
                  >
                    <mock-styled.input
                      disabled="false"
                      id="enable-support-notificationf83e679e-a7cd-4889-a7f9-f4a8a8ed5a09"
                      name="support-notification-f83e679e-a7cd-4889-a7f9-f4a8a8ed5a09"
                      type="radio"
                      value="enable"
                    />
                    <mock-styled.label
                      classname=""
                      htmlfor="enable-support-notificationf83e679e-a7cd-4889-a7f9-f4a8a8ed5a09"
                    >
                      <mock-styled.span>
                        Enabled
                      </mock-styled.span>
                    </mock-styled.label>
                    <mock-styled.input
                      disabled="false"
                      id="disable-support-notificationf83e679e-a7cd-4889-a7f9-f4a8a8ed5a09"
                      name="support-notification-f83e679e-a7cd-4889-a7f9-f4a8a8ed5a09"
                      type="radio"
                      value="disable"
                    />
                    <mock-styled.label
                      classname=""
                      htmlfor="disable-support-notificationf83e679e-a7cd-4889-a7f9-f4a8a8ed5a09"
                    >
                      <mock-styled.span>
                        Disabled
                      </mock-styled.span>
                    </mock-styled.label>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </div>
        <mock-styled.div>
          <mock-styled.button
            aria-label="Previous"
            data-testid="back-button"
            role="button"
            type="button"
          >
            <mock-styled.span
              classname="el-icon-new"
              role="img"
            >
              <svg
                fill="none"
                height="1em"
                viewBox="0 0 24 24"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M15.496 20.004a1 1 0 0 1-.71-.29l-6.99-7a1 1 0 0 1 0-1.42l6.99-7a1.002 1.002 0 0 1 1.678.45c.093.347-.006.716-.26.97l-6.291 6.29 6.292 6.29a1 1 0 0 1-.71 1.71"
                  fill="currentColor"
                />
              </svg>
            </mock-styled.span>
          </mock-styled.button>
          <mock-styled.div>
            <mock-styled.input
              value="1"
            />
             of 
            1
          </mock-styled.div>
          <mock-styled.button
            aria-label="Next"
            data-testid="forward-button"
            role="button"
            type="button"
          >
            <mock-styled.span
              classname="el-icon-new"
              role="img"
            >
              <svg
                fill="none"
                height="1em"
                viewBox="0 0 24 24"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M8.505 20.004a1 1 0 0 1-1.005-1 1 1 0 0 1 .295-.71l6.292-6.29-6.292-6.29a1.005 1.005 0 0 1 0-1.42 1 1 0 0 1 1.419 0l6.99 7a1 1 0 0 1 0 1.42l-6.99 7a1 1 0 0 1-.71.29"
                  fill="currentColor"
                />
              </svg>
            </mock-styled.span>
          </mock-styled.button>
        </mock-styled.div>
      </section>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <section
      class="el-page-container"
    >
      <mock-styled.h1
        classname="el-text-base"
      >
        Apps Management
      </mock-styled.h1>
      <form>
        <mock-styled.div
          classname="el-mb11"
        >
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="searchTerm"
                type="search"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                App or Developer Name
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="companyName"
                type="search"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Company Name
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="id"
                type="search"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                App Id
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="registeredFrom"
                type="date"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Registered From
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="registeredTo"
                type="date"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Registered To
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="publicListedDateFrom"
                type="date"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Publicly Listed From
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="publicListedDateTo"
                type="date"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Publicly Listed To
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                In Public AppMarket
              </mock-styled.label>
              <mock-styled.div
                classname="el-has-grey-bg"
              >
                <mock-styled.input
                  id="option-public-all"
                  name="isPublic"
                  type="radio"
                  value=""
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-public-all"
                >
                  <mock-styled.span>
                    All
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="option-public-true"
                  name="isPublic"
                  type="radio"
                  value="true"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-public-true"
                >
                  <mock-styled.span>
                    Public
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="option-public-false"
                  name="isPublic"
                  type="radio"
                  value="false"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-public-false"
                >
                  <mock-styled.span>
                    Private
                  </mock-styled.span>
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Integration or AC Enabled
              </mock-styled.label>
              <mock-styled.div
                classname="el-has-grey-bg"
              >
                <mock-styled.input
                  id="option-integration-all"
                  name="isDirectApi"
                  type="radio"
                  value=""
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-integration-all"
                >
                  <mock-styled.span>
                    All
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="option-integration-true"
                  name="isDirectApi"
                  type="radio"
                  value="true"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-integration-true"
                >
                  <mock-styled.span>
                    Integration
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="option-integration-false"
                  name="isDirectApi"
                  type="radio"
                  value="false"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-integration-false"
                >
                  <mock-styled.span>
                    AC App
                  </mock-styled.span>
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Publicly Listed
              </mock-styled.label>
              <mock-styled.div
                classname="el-has-grey-bg"
              >
                <mock-styled.input
                  id="option-listed-all"
                  name="isListed"
                  type="radio"
                  value=""
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-listed-all"
                >
                  <mock-styled.span>
                    All
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="option-listed-true"
                  name="isListed"
                  type="radio"
                  value="true"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-listed-true"
                >
                  <mock-styled.span>
                    Listed
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="option-listed-false"
                  name="isListed"
                  type="radio"
                  value="false"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-listed-false"
                >
                  <mock-styled.span>
                    Development
                  </mock-styled.span>
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Is Charged Consumption
              </mock-styled.label>
              <mock-styled.div
                classname="el-has-grey-bg"
              >
                <mock-styled.input
                  id="option-consumption-all"
                  name="isChargedConsumption"
                  type="radio"
                  value=""
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-consumption-all"
                >
                  <mock-styled.span>
                    All
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="option-consumption-true"
                  name="isChargedConsumption"
                  type="radio"
                  value="true"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-consumption-true"
                >
                  <mock-styled.span>
                    Charged
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="option-consumption-false"
                  name="isChargedConsumption"
                  type="radio"
                  value="false"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-consumption-false"
                >
                  <mock-styled.span>
                    Free
                  </mock-styled.span>
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </form>
      <div
        class="el-mb11"
      >
        <mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.button
              classname="el-intent-primary"
              type="button"
            >
              <mock-styled.div />
              Download CSV
            </mock-styled.button>
          </mock-styled.div>
        </mock-styled.div>
      </div>
      <div
        class="el-mb11"
      >
        <mock-styled.h2
          classname="el-text-base"
        >
          Total Apps
        </mock-styled.h2>
        <mock-styled.p
          classname="el-text-base el-has-grey-text"
        >
          1
        </mock-styled.p>
        <mock-styled.div
          data-has-call-to-action="false"
          data-has-expandable-action="true"
          data-num-columns-excl-action-col="10"
          role="table"
        >
          <mock-styled.div
            role="row"
          >
            <mock-styled.div
              aria-label="App Name"
              role="columnheader"
            >
              App Name
            </mock-styled.div>
            <mock-styled.div
              aria-label="AppId"
              role="columnheader"
            >
              AppId
            </mock-styled.div>
            <mock-styled.div
              aria-label="Summary"
              role="columnheader"
            >
              Summary
            </mock-styled.div>
            <mock-styled.div
              aria-label="Developer Name"
              role="columnheader"
            >
              Developer Name
            </mock-styled.div>
            <mock-styled.div
              aria-label="Listed"
              role="columnheader"
            >
              Listed
            </mock-styled.div>
            <mock-styled.div
              aria-label="Integration"
              role="columnheader"
            >
              Integration
            </mock-styled.div>
            <mock-styled.div
              aria-label="Featured"
              role="columnheader"
            >
              Featured
            </mock-styled.div>
            <mock-styled.div
              aria-label="Created"
              role="columnheader"
            >
              Created
            </mock-styled.div>
            <mock-styled.div
              aria-label="Publicly Listed"
              role="columnheader"
            >
              Publicly Listed
            </mock-styled.div>
            <mock-styled.div
              aria-label="Public"
              role="columnheader"
            >
              Public
            </mock-styled.div>
            <mock-styled.div
              role="columnheader"
            >
              <mock-styled.span
                classname="el-intent-default el-icon-new"
                role="img"
              >
                <svg
                  fill="none"
                  height="1em"
                  viewBox="0 0 24 24"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M18.917 12.88c.08-.584.08-1.176 0-1.76l2.06-1.85a1 1 0 0 0 .25-1.27l-1.18-2a1 1 0 0 0-1.19-.45l-2.65.9a7.2 7.2 0 0 0-1.52-.89l-.55-2.76a1 1 0 0 0-1-.8h-2.34a1 1 0 0 0-1 .8l-.53 2.74a7.5 7.5 0 0 0-1.52.89l-2.65-.9a1 1 0 0 0-1.19.47l-1.18 2a1 1 0 0 0 .25 1.27l2.1 1.85a6.5 6.5 0 0 0 0 1.76l-2.1 1.85a1 1 0 0 0-.25 1.27l1.18 2a1 1 0 0 0 1.19.45l2.65-.9c.47.356.98.654 1.52.89l.55 2.74a1 1 0 0 0 1 .8h2.36a1 1 0 0 0 1-.8l.55-2.74a7.2 7.2 0 0 0 1.52-.89l2.65.9a1 1 0 0 0 1.15-.45l1.18-2a1 1 0 0 0-.25-1.27zM11.977 15a3 3 0 1 1 0-6 3 3 0 0 1 0 6"
                    fill="currentColor"
                  />
                </svg>
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
            role="row"
          >
            <mock-styled.div>
              <mock-styled.div
                classname="el-table-cell-has-dark-text"
                role="cell"
              >
                <mock-styled.div
                  data-narrow-label="App Name"
                >
                  Reapit Insights
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="el-table-cell-has-dark-text"
                role="cell"
              >
                <mock-styled.div
                  data-narrow-label="AppId"
                >
                  f83e679e-a7cd-4889-a7f9-f4a8a8ed5a09
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="el-table-cell-has-dark-text"
                role="cell"
              >
                <mock-styled.div
                  data-narrow-label="Summary"
                >
                  Blah blah blah. Blah blah blah. Blah blah blah. Blah blah blah. Blah blah blah.
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="el-table-cell-has-dark-text"
                role="cell"
              >
                <mock-styled.div
                  data-narrow-label="Developer Name"
                >
                  Reapit Ltd Internal
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="el-table-cell-has-dark-text"
                role="cell"
              >
                <mock-styled.div
                  data-narrow-label="Listed"
                >
                  <mock-styled.span
                    classname="el-intent-success el-icon-new"
                    role="img"
                  >
                    <svg
                      fill="none"
                      height="1em"
                      viewBox="0 0 24 24"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        clip-rule="evenodd"
                        d="M20.289 6.387a1.323 1.323 0 0 0-1.87 0l-8.42 8.42-3.741-3.743a1.323 1.323 0 0 0-1.87 1.87l4.676 4.678a1.32 1.32 0 0 0 1.87 0l9.355-9.354a1.323 1.323 0 0 0 0-1.87"
                        fill="currentColor"
                        fill-rule="evenodd"
                      />
                    </svg>
                  </mock-styled.span>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="el-table-cell-has-dark-text"
                role="cell"
              >
                <mock-styled.div
                  data-narrow-label="Integration"
                >
                  <mock-styled.span
                    classname="el-intent-danger el-icon-new"
                    role="img"
                  >
                    <svg
                      fill="none"
                      height="1em"
                      viewBox="0 0 24 24"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="m12.36 13.83 5.66 5.66a1 1 0 1 0 1.41-1.41l-5.66-5.66 5.66-5.66a1 1 0 1 0-1.41-1.41l-5.66 5.66L6.7 5.35a1 1 0 0 0-1.41 0 1 1 0 0 0 0 1.41l5.66 5.66-5.66 5.66a1 1 0 0 0 0 1.41 1 1 0 0 0 1.41 0z"
                        fill="currentColor"
                      />
                    </svg>
                  </mock-styled.span>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="el-table-cell-has-dark-text"
                role="cell"
              >
                <mock-styled.div
                  data-narrow-label="Featured"
                >
                  <mock-styled.span
                    classname="el-intent-danger el-icon-new"
                    role="img"
                  >
                    <svg
                      fill="none"
                      height="1em"
                      viewBox="0 0 24 24"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="m12.36 13.83 5.66 5.66a1 1 0 1 0 1.41-1.41l-5.66-5.66 5.66-5.66a1 1 0 1 0-1.41-1.41l-5.66 5.66L6.7 5.35a1 1 0 0 0-1.41 0 1 1 0 0 0 0 1.41l5.66 5.66-5.66 5.66a1 1 0 0 0 0 1.41 1 1 0 0 0 1.41 0z"
                        fill="currentColor"
                      />
                    </svg>
                  </mock-styled.span>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="el-table-cell-has-dark-text"
                role="cell"
              >
                <mock-styled.div
                  data-narrow-label="Created"
                >
                  04 Mar 2021 09:37
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="el-table-cell-has-dark-text"
                role="cell"
              >
                <mock-styled.div
                  data-narrow-label="Publicly Listed"
                >
                  -
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="el-table-cell-has-dark-text"
                role="cell"
              >
                <mock-styled.div
                  data-narrow-label="Public"
                >
                  <mock-styled.span
                    classname="el-intent-danger el-icon-new"
                    role="img"
                  >
                    <svg
                      fill="none"
                      height="1em"
                      viewBox="0 0 24 24"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="m12.36 13.83 5.66 5.66a1 1 0 1 0 1.41-1.41l-5.66-5.66 5.66-5.66a1 1 0 1 0-1.41-1.41l-5.66 5.66L6.7 5.35a1 1 0 0 0-1.41 0 1 1 0 0 0 0 1.41l5.66 5.66-5.66 5.66a1 1 0 0 0 0 1.41 1 1 0 0 0 1.41 0z"
                        fill="currentColor"
                      />
                    </svg>
                  </mock-styled.span>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname=""
                role="cell"
              >
                <mock-styled.span
                  classname="el-intent-default el-icon-new"
                  role="img"
                >
                  <svg
                    fill="none"
                    height="1em"
                    viewBox="0 0 24 24"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M7 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4M19 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4"
                      fill="currentColor"
                    />
                  </svg>
                </mock-styled.span>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              aria-hidden="false"
              classname=""
            >
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.div
                    classname="el-button-group-align-center"
                  >
                    <mock-styled.button
                      classname="el-intent-neutral"
                    >
                      <mock-styled.div />
                      View in AppMarket
                    </mock-styled.button>
                    <mock-styled.button
                      classname="el-intent-neutral"
                    >
                      <mock-styled.div />
                      View in DevPortal
                    </mock-styled.button>
                    <mock-styled.button
                      classname="el-intent-primary"
                      disabled="false"
                    >
                      <mock-styled.div />
                      Check AWS Only
                    </mock-styled.button>
                    <mock-styled.button
                      classname="el-intent-primary"
                    >
                      <mock-styled.div />
                      Toggle Subscription
                    </mock-styled.button>
                    <mock-styled.button
                      classname="el-intent-primary"
                    >
                      <mock-styled.div />
                      Togggle Featured
                    </mock-styled.button>
                    <mock-styled.button
                      classname="el-intent-primary"
                    >
                      <mock-styled.div />
                      Togggle API Consumption
                    </mock-styled.button>
                    <mock-styled.button
                      classname="el-intent-danger"
                      type="button"
                    >
                      <mock-styled.div />
                      Delete
                    </mock-styled.button>
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.label>
                  Support Notification
                </mock-styled.label>
                <mock-styled.div
                  classname=""
                >
                  <mock-styled.input
                    disabled="false"
                    id="enable-support-notificationf83e679e-a7cd-4889-a7f9-f4a8a8ed5a09"
                    name="support-notification-f83e679e-a7cd-4889-a7f9-f4a8a8ed5a09"
                    type="radio"
                    value="enable"
                  />
                  <mock-styled.label
                    classname=""
                    htmlfor="enable-support-notificationf83e679e-a7cd-4889-a7f9-f4a8a8ed5a09"
                  >
                    <mock-styled.span>
                      Enabled
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    disabled="false"
                    id="disable-support-notificationf83e679e-a7cd-4889-a7f9-f4a8a8ed5a09"
                    name="support-notification-f83e679e-a7cd-4889-a7f9-f4a8a8ed5a09"
                    type="radio"
                    value="disable"
                  />
                  <mock-styled.label
                    classname=""
                    htmlfor="disable-support-notificationf83e679e-a7cd-4889-a7f9-f4a8a8ed5a09"
                  >
                    <mock-styled.span>
                      Disabled
                    </mock-styled.span>
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </div>
      <mock-styled.div>
        <mock-styled.button
          aria-label="Previous"
          data-testid="back-button"
          role="button"
          type="button"
        >
          <mock-styled.span
            classname="el-icon-new"
            role="img"
          >
            <svg
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M15.496 20.004a1 1 0 0 1-.71-.29l-6.99-7a1 1 0 0 1 0-1.42l6.99-7a1.002 1.002 0 0 1 1.678.45c.093.347-.006.716-.26.97l-6.291 6.29 6.292 6.29a1 1 0 0 1-.71 1.71"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
        </mock-styled.button>
        <mock-styled.div>
          <mock-styled.input
            value="1"
          />
           of 
          1
        </mock-styled.div>
        <mock-styled.button
          aria-label="Next"
          data-testid="forward-button"
          role="button"
          type="button"
        >
          <mock-styled.span
            classname="el-icon-new"
            role="img"
          >
            <svg
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M8.505 20.004a1 1 0 0 1-1.005-1 1 1 0 0 1 .295-.71l6.292-6.29-6.292-6.29a1.005 1.005 0 0 1 0-1.42 1 1 0 0 1 1.419 0l6.99 7a1 1 0 0 1 0 1.42l-6.99 7a1 1 0 0 1-.71.29"
                fill="currentColor"
              />
            </svg>
          </mock-styled.span>
        </mock-styled.button>
      </mock-styled.div>
    </section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`AppsPage should render a component when loading 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <section
        class="el-page-container"
      >
        <mock-styled.h1
          classname="el-text-base"
        >
          Apps Management
        </mock-styled.h1>
        <form>
          <mock-styled.div
            classname="el-mb11"
          >
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="searchTerm"
                  type="search"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  App or Developer Name
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="companyName"
                  type="search"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Company Name
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="id"
                  type="search"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  App Id
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="registeredFrom"
                  type="date"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Registered From
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="registeredTo"
                  type="date"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Registered To
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="publicListedDateFrom"
                  type="date"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Publicly Listed From
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.input
                  classname=""
                  id="test-static-id"
                  name="publicListedDateTo"
                  type="date"
                />
                <mock-styled.label
                  htmlfor="test-static-id"
                >
                  Publicly Listed To
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  In Public AppMarket
                </mock-styled.label>
                <mock-styled.div
                  classname="el-has-grey-bg"
                >
                  <mock-styled.input
                    id="option-public-all"
                    name="isPublic"
                    type="radio"
                    value=""
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-public-all"
                  >
                    <mock-styled.span>
                      All
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="option-public-true"
                    name="isPublic"
                    type="radio"
                    value="true"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-public-true"
                  >
                    <mock-styled.span>
                      Public
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="option-public-false"
                    name="isPublic"
                    type="radio"
                    value="false"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-public-false"
                  >
                    <mock-styled.span>
                      Private
                    </mock-styled.span>
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Integration or AC Enabled
                </mock-styled.label>
                <mock-styled.div
                  classname="el-has-grey-bg"
                >
                  <mock-styled.input
                    id="option-integration-all"
                    name="isDirectApi"
                    type="radio"
                    value=""
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-integration-all"
                  >
                    <mock-styled.span>
                      All
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="option-integration-true"
                    name="isDirectApi"
                    type="radio"
                    value="true"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-integration-true"
                  >
                    <mock-styled.span>
                      Integration
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="option-integration-false"
                    name="isDirectApi"
                    type="radio"
                    value="false"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-integration-false"
                  >
                    <mock-styled.span>
                      AC App
                    </mock-styled.span>
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Publicly Listed
                </mock-styled.label>
                <mock-styled.div
                  classname="el-has-grey-bg"
                >
                  <mock-styled.input
                    id="option-listed-all"
                    name="isListed"
                    type="radio"
                    value=""
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-listed-all"
                  >
                    <mock-styled.span>
                      All
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="option-listed-true"
                    name="isListed"
                    type="radio"
                    value="true"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-listed-true"
                  >
                    <mock-styled.span>
                      Listed
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="option-listed-false"
                    name="isListed"
                    type="radio"
                    value="false"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-listed-false"
                  >
                    <mock-styled.span>
                      Development
                    </mock-styled.span>
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.label>
                  Is Charged Consumption
                </mock-styled.label>
                <mock-styled.div
                  classname="el-has-grey-bg"
                >
                  <mock-styled.input
                    id="option-consumption-all"
                    name="isChargedConsumption"
                    type="radio"
                    value=""
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-consumption-all"
                  >
                    <mock-styled.span>
                      All
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="option-consumption-true"
                    name="isChargedConsumption"
                    type="radio"
                    value="true"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-consumption-true"
                  >
                    <mock-styled.span>
                      Charged
                    </mock-styled.span>
                  </mock-styled.label>
                  <mock-styled.input
                    id="option-consumption-false"
                    name="isChargedConsumption"
                    type="radio"
                    value="false"
                  />
                  <mock-styled.label
                    classname="el-has-grey-bg"
                    htmlfor="option-consumption-false"
                  >
                    <mock-styled.span>
                      Free
                    </mock-styled.span>
                  </mock-styled.label>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </form>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div />
          </mock-styled.div>
        </mock-styled.div>
      </section>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <section
      class="el-page-container"
    >
      <mock-styled.h1
        classname="el-text-base"
      >
        Apps Management
      </mock-styled.h1>
      <form>
        <mock-styled.div
          classname="el-mb11"
        >
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="searchTerm"
                type="search"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                App or Developer Name
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="companyName"
                type="search"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Company Name
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="id"
                type="search"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                App Id
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="registeredFrom"
                type="date"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Registered From
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="registeredTo"
                type="date"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Registered To
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="publicListedDateFrom"
                type="date"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Publicly Listed From
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="publicListedDateTo"
                type="date"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Publicly Listed To
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                In Public AppMarket
              </mock-styled.label>
              <mock-styled.div
                classname="el-has-grey-bg"
              >
                <mock-styled.input
                  id="option-public-all"
                  name="isPublic"
                  type="radio"
                  value=""
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-public-all"
                >
                  <mock-styled.span>
                    All
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="option-public-true"
                  name="isPublic"
                  type="radio"
                  value="true"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-public-true"
                >
                  <mock-styled.span>
                    Public
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="option-public-false"
                  name="isPublic"
                  type="radio"
                  value="false"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-public-false"
                >
                  <mock-styled.span>
                    Private
                  </mock-styled.span>
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Integration or AC Enabled
              </mock-styled.label>
              <mock-styled.div
                classname="el-has-grey-bg"
              >
                <mock-styled.input
                  id="option-integration-all"
                  name="isDirectApi"
                  type="radio"
                  value=""
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-integration-all"
                >
                  <mock-styled.span>
                    All
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="option-integration-true"
                  name="isDirectApi"
                  type="radio"
                  value="true"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-integration-true"
                >
                  <mock-styled.span>
                    Integration
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="option-integration-false"
                  name="isDirectApi"
                  type="radio"
                  value="false"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-integration-false"
                >
                  <mock-styled.span>
                    AC App
                  </mock-styled.span>
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Publicly Listed
              </mock-styled.label>
              <mock-styled.div
                classname="el-has-grey-bg"
              >
                <mock-styled.input
                  id="option-listed-all"
                  name="isListed"
                  type="radio"
                  value=""
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-listed-all"
                >
                  <mock-styled.span>
                    All
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="option-listed-true"
                  name="isListed"
                  type="radio"
                  value="true"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-listed-true"
                >
                  <mock-styled.span>
                    Listed
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="option-listed-false"
                  name="isListed"
                  type="radio"
                  value="false"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-listed-false"
                >
                  <mock-styled.span>
                    Development
                  </mock-styled.span>
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Is Charged Consumption
              </mock-styled.label>
              <mock-styled.div
                classname="el-has-grey-bg"
              >
                <mock-styled.input
                  id="option-consumption-all"
                  name="isChargedConsumption"
                  type="radio"
                  value=""
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-consumption-all"
                >
                  <mock-styled.span>
                    All
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="option-consumption-true"
                  name="isChargedConsumption"
                  type="radio"
                  value="true"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-consumption-true"
                >
                  <mock-styled.span>
                    Charged
                  </mock-styled.span>
                </mock-styled.label>
                <mock-styled.input
                  id="option-consumption-false"
                  name="isChargedConsumption"
                  type="radio"
                  value="false"
                />
                <mock-styled.label
                  classname="el-has-grey-bg"
                  htmlfor="option-consumption-false"
                >
                  <mock-styled.span>
                    Free
                  </mock-styled.span>
                </mock-styled.label>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </form>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
    </section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
