// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToggleSupportNotification should match a snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="mocked-styled-93 el-snack-holder"
      />
      <label
        class="mocked-styled-41 el-label"
      >
        Support Notification
      </label>
      <div
        class="mocked-styled-129 el-toggle-radio-wrap"
      >
        <input
          checked=""
          class="mocked-styled-127 el-toggle-radio"
          id="enable-support-notificationMOCK_ID"
          name="support-notification-MOCK_ID"
          type="radio"
          value="enable"
        />
        <label
          class="mocked-styled-128 el-toggle-radio-label"
          for="enable-support-notificationMOCK_ID"
          role="button"
          tabindex="0"
        >
          <span
            class="mocked-styled-124 el-toggle-radio-item"
          >
            Enabled
          </span>
        </label>
        <input
          class="mocked-styled-127 el-toggle-radio"
          id="disable-support-notificationMOCK_ID"
          name="support-notification-MOCK_ID"
          type="radio"
          value="disable"
        />
        <label
          class="mocked-styled-128 el-toggle-radio-label"
          for="disable-support-notificationMOCK_ID"
          role="button"
          tabindex="0"
        >
          <span
            class="mocked-styled-124 el-toggle-radio-item"
          >
            Disabled
          </span>
        </label>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="mocked-styled-93 el-snack-holder"
    />
    <label
      class="mocked-styled-41 el-label"
    >
      Support Notification
    </label>
    <div
      class="mocked-styled-129 el-toggle-radio-wrap"
    >
      <input
        checked=""
        class="mocked-styled-127 el-toggle-radio"
        id="enable-support-notificationMOCK_ID"
        name="support-notification-MOCK_ID"
        type="radio"
        value="enable"
      />
      <label
        class="mocked-styled-128 el-toggle-radio-label"
        for="enable-support-notificationMOCK_ID"
        role="button"
        tabindex="0"
      >
        <span
          class="mocked-styled-124 el-toggle-radio-item"
        >
          Enabled
        </span>
      </label>
      <input
        class="mocked-styled-127 el-toggle-radio"
        id="disable-support-notificationMOCK_ID"
        name="support-notification-MOCK_ID"
        type="radio"
        value="disable"
      />
      <label
        class="mocked-styled-128 el-toggle-radio-label"
        for="disable-support-notificationMOCK_ID"
        role="button"
        tabindex="0"
      >
        <span
          class="mocked-styled-124 el-toggle-radio-item"
        >
          Disabled
        </span>
      </label>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
