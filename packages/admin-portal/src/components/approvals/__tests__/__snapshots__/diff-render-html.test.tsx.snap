// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DiffRenderHTML should match snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <div
        class="mock-css.
  background-color: var(--color-grey-lightest);
  border: 1px solid var(--color-grey-lightest);
  border-radius: 3px;
  padding: 10px;
  color: var(--color-black);
  display: flex;
  align-items: center;

  & a {
    color: var(--intent-secondary);
    font-weight: bold;
  }

  & ul,
  & ol {
    margin-top: 0;
    margin-left: 0;
    list-style-position: inside;

    & li div {
      display: inline-block;
    }
  }

  & p {
    margin: 1rem 0;
  }
"
      >
        <div
          class="mock-css.
  overflow-wrap: break-word;
  border-radius: 4px;
  width: 48%;
 mock-css.
  background-color: var(--intent-danger-light);
"
        >
          <mock-styled.div>
            <h1>
              hello world
            </h1>
          </mock-styled.div>
        </div>
        <span
          class="mock-css.
  font-size: 18px;
  color: var(--color-grey-dark);
"
        >
          →
        </span>
        <div
          class="mock-css.
  overflow-wrap: break-word;
  border-radius: 4px;
  width: 48%;
 mock-css.
  background-color: var(--intent-success-light);
"
        >
          <mock-styled.div>
            <p>
              hello galaxy
            </p>
          </mock-styled.div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <div
      class="mock-css.
  background-color: var(--color-grey-lightest);
  border: 1px solid var(--color-grey-lightest);
  border-radius: 3px;
  padding: 10px;
  color: var(--color-black);
  display: flex;
  align-items: center;

  & a {
    color: var(--intent-secondary);
    font-weight: bold;
  }

  & ul,
  & ol {
    margin-top: 0;
    margin-left: 0;
    list-style-position: inside;

    & li div {
      display: inline-block;
    }
  }

  & p {
    margin: 1rem 0;
  }
"
    >
      <div
        class="mock-css.
  overflow-wrap: break-word;
  border-radius: 4px;
  width: 48%;
 mock-css.
  background-color: var(--intent-danger-light);
"
      >
        <mock-styled.div>
          <h1>
            hello world
          </h1>
        </mock-styled.div>
      </div>
      <span
        class="mock-css.
  font-size: 18px;
  color: var(--color-grey-dark);
"
      >
        →
      </span>
      <div
        class="mock-css.
  overflow-wrap: break-word;
  border-radius: 4px;
  width: 48%;
 mock-css.
  background-color: var(--intent-success-light);
"
      >
        <mock-styled.div>
          <p>
            hello galaxy
          </p>
        </mock-styled.div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
