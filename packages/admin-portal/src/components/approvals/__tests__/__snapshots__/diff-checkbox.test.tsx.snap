// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DiffCheckbox should match snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <div
        class="mock-css.
  background-color: var(--color-grey-lightest);
  border: 1px solid var(--color-grey-lightest);
  border-radius: 3px;
  padding: 10px;
  color: var(--color-black);
  display: flex;
  align-items: center;
  justify-content: space-between;
"
        data-test=""
      >
        <span
          class="mock-css.
  padding: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  pointer-events: none;
 mock-css.
  background-color: var(--intent-danger-light);
"
        >
          <input
            checked=""
            data-test="current"
            readonly=""
            type="checkbox"
          />
        </span>
        <span
          class="mock-css.
  font-size: 18px;
  color: var(--color-grey-dark);
"
        >
          →
        </span>
        <span
          class="mock-css.
  padding: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  pointer-events: none;
 mock-css.
  background-color: var(--intent-success-light);
"
        >
          <input
            data-test="changed"
            readonly=""
            type="checkbox"
          />
        </span>
      </div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <div
      class="mock-css.
  background-color: var(--color-grey-lightest);
  border: 1px solid var(--color-grey-lightest);
  border-radius: 3px;
  padding: 10px;
  color: var(--color-black);
  display: flex;
  align-items: center;
  justify-content: space-between;
"
      data-test=""
    >
      <span
        class="mock-css.
  padding: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  pointer-events: none;
 mock-css.
  background-color: var(--intent-danger-light);
"
      >
        <input
          checked=""
          data-test="current"
          readonly=""
          type="checkbox"
        />
      </span>
      <span
        class="mock-css.
  font-size: 18px;
  color: var(--color-grey-dark);
"
      >
        →
      </span>
      <span
        class="mock-css.
  padding: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  pointer-events: none;
 mock-css.
  background-color: var(--intent-success-light);
"
      >
        <input
          data-test="changed"
          readonly=""
          type="checkbox"
        />
      </span>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
