// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilterForm should render component with data 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <form>
        <mock-styled.div
          classname="el-form-layout-has-margin"
        >
          <mock-styled.div>
            <mock-styled.h2
              classname="el-text-base"
            >
              Filters
            </mock-styled.h2>
            <mock-styled.p
              classname="el-text-base el-has-grey-text"
            >
              Apply a filter to get started. Developer and month are required by default.
            </mock-styled.p>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.label
              classname="el-flex el-mb3"
              htmlfor="developer-search-box"
            >
              Company
            </mock-styled.label>
            <mock-styled.div
              aria-controls=":r1:"
              aria-expanded="false"
              aria-haspopup="listbox"
              role="combobox"
            >
              <input
                id="developer-search-box"
                readonly=""
                style="display: none;"
                value=""
              />
              <mock-styled.div>
                <mock-styled.span
                  classname="el-intent-default el-icon-new"
                  role="img"
                  style="font-size: 1rem;"
                >
                  <svg
                    fill="none"
                    height="1em"
                    style="font-size: 1rem;"
                    viewBox="0 0 24 24"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="m21.71 20.29-5.4-5.39A7.9 7.9 0 0 0 18 10a8 8 0 1 0-8 8 7.9 7.9 0 0 0 4.9-1.69l5.39 5.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42M4 10a6 6 0 1 1 12 0 6 6 0 0 1-12 0"
                      fill="currentColor"
                    />
                  </svg>
                </mock-styled.span>
              </mock-styled.div>
              <mock-styled.div
                data-testid="search-input"
                name="developerId"
                placeholder="Search developer organisations"
                value=""
              />
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="month"
                type="month"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Month
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                App
              </mock-styled.label>
              <mock-styled.select
                disabled="true"
                name="appId"
              >
                <option
                  value=""
                >
                  Please Select
                </option>
                <option
                  value="f83e679e-a7cd-4889-a7f9-f4a8a8ed5a09"
                >
                  Reapit Insights
                </option>
              </mock-styled.select>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Customer
              </mock-styled.label>
              <mock-styled.select
                disabled="true"
                name="customerId"
              >
                <option
                  value=""
                >
                  Please Select
                </option>
                <option
                  value="SBOX"
                >
                  Sandbox Estates
                   (Code: 
                  SBOX
                  )
                </option>
              </mock-styled.select>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </form>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <form>
      <mock-styled.div
        classname="el-form-layout-has-margin"
      >
        <mock-styled.div>
          <mock-styled.h2
            classname="el-text-base"
          >
            Filters
          </mock-styled.h2>
          <mock-styled.p
            classname="el-text-base el-has-grey-text"
          >
            Apply a filter to get started. Developer and month are required by default.
          </mock-styled.p>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.label
            classname="el-flex el-mb3"
            htmlfor="developer-search-box"
          >
            Company
          </mock-styled.label>
          <mock-styled.div
            aria-controls=":r1:"
            aria-expanded="false"
            aria-haspopup="listbox"
            role="combobox"
          >
            <input
              id="developer-search-box"
              readonly=""
              style="display: none;"
              value=""
            />
            <mock-styled.div>
              <mock-styled.span
                classname="el-intent-default el-icon-new"
                role="img"
                style="font-size: 1rem;"
              >
                <svg
                  fill="none"
                  height="1em"
                  style="font-size: 1rem;"
                  viewBox="0 0 24 24"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="m21.71 20.29-5.4-5.39A7.9 7.9 0 0 0 18 10a8 8 0 1 0-8 8 7.9 7.9 0 0 0 4.9-1.69l5.39 5.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42M4 10a6 6 0 1 1 12 0 6 6 0 0 1-12 0"
                    fill="currentColor"
                  />
                </svg>
              </mock-styled.span>
            </mock-styled.div>
            <mock-styled.div
              data-testid="search-input"
              name="developerId"
              placeholder="Search developer organisations"
              value=""
            />
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.input
              classname=""
              id="test-static-id"
              name="month"
              type="month"
            />
            <mock-styled.label
              htmlfor="test-static-id"
            >
              Month
            </mock-styled.label>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.label>
              App
            </mock-styled.label>
            <mock-styled.select
              disabled="true"
              name="appId"
            >
              <option
                value=""
              >
                Please Select
              </option>
              <option
                value="f83e679e-a7cd-4889-a7f9-f4a8a8ed5a09"
              >
                Reapit Insights
              </option>
            </mock-styled.select>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.label>
              Customer
            </mock-styled.label>
            <mock-styled.select
              disabled="true"
              name="customerId"
            >
              <option
                value=""
              >
                Please Select
              </option>
              <option
                value="SBOX"
              >
                Sandbox Estates
                 (Code: 
                SBOX
                )
              </option>
            </mock-styled.select>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`FilterForm should render component with no data 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <form>
        <mock-styled.div
          classname="el-form-layout-has-margin"
        >
          <mock-styled.div>
            <mock-styled.h2
              classname="el-text-base"
            >
              Filters
            </mock-styled.h2>
            <mock-styled.p
              classname="el-text-base el-has-grey-text"
            >
              Apply a filter to get started. Developer and month are required by default.
            </mock-styled.p>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.label
              classname="el-flex el-mb3"
              htmlfor="developer-search-box"
            >
              Company
            </mock-styled.label>
            <mock-styled.div
              aria-controls=":r0:"
              aria-expanded="false"
              aria-haspopup="listbox"
              role="combobox"
            >
              <input
                id="developer-search-box"
                readonly=""
                style="display: none;"
                value=""
              />
              <mock-styled.div>
                <mock-styled.span
                  classname="el-intent-default el-icon-new"
                  role="img"
                  style="font-size: 1rem;"
                >
                  <svg
                    fill="none"
                    height="1em"
                    style="font-size: 1rem;"
                    viewBox="0 0 24 24"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="m21.71 20.29-5.4-5.39A7.9 7.9 0 0 0 18 10a8 8 0 1 0-8 8 7.9 7.9 0 0 0 4.9-1.69l5.39 5.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42M4 10a6 6 0 1 1 12 0 6 6 0 0 1-12 0"
                      fill="currentColor"
                    />
                  </svg>
                </mock-styled.span>
              </mock-styled.div>
              <mock-styled.div
                data-testid="search-input"
                name="developerId"
                placeholder="Search developer organisations"
                value=""
              />
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.input
                classname=""
                id="test-static-id"
                name="month"
                type="month"
              />
              <mock-styled.label
                htmlfor="test-static-id"
              >
                Month
              </mock-styled.label>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                App
              </mock-styled.label>
              <mock-styled.select
                disabled="true"
                name="appId"
              >
                <option
                  value=""
                >
                  Please Select
                </option>
              </mock-styled.select>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div>
            <mock-styled.div>
              <mock-styled.label>
                Customer
              </mock-styled.label>
              <mock-styled.select
                disabled="true"
                name="customerId"
              >
                <option
                  value=""
                >
                  Please Select
                </option>
              </mock-styled.select>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </form>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <form>
      <mock-styled.div
        classname="el-form-layout-has-margin"
      >
        <mock-styled.div>
          <mock-styled.h2
            classname="el-text-base"
          >
            Filters
          </mock-styled.h2>
          <mock-styled.p
            classname="el-text-base el-has-grey-text"
          >
            Apply a filter to get started. Developer and month are required by default.
          </mock-styled.p>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.label
            classname="el-flex el-mb3"
            htmlfor="developer-search-box"
          >
            Company
          </mock-styled.label>
          <mock-styled.div
            aria-controls=":r0:"
            aria-expanded="false"
            aria-haspopup="listbox"
            role="combobox"
          >
            <input
              id="developer-search-box"
              readonly=""
              style="display: none;"
              value=""
            />
            <mock-styled.div>
              <mock-styled.span
                classname="el-intent-default el-icon-new"
                role="img"
                style="font-size: 1rem;"
              >
                <svg
                  fill="none"
                  height="1em"
                  style="font-size: 1rem;"
                  viewBox="0 0 24 24"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="m21.71 20.29-5.4-5.39A7.9 7.9 0 0 0 18 10a8 8 0 1 0-8 8 7.9 7.9 0 0 0 4.9-1.69l5.39 5.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42M4 10a6 6 0 1 1 12 0 6 6 0 0 1-12 0"
                    fill="currentColor"
                  />
                </svg>
              </mock-styled.span>
            </mock-styled.div>
            <mock-styled.div
              data-testid="search-input"
              name="developerId"
              placeholder="Search developer organisations"
              value=""
            />
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.input
              classname=""
              id="test-static-id"
              name="month"
              type="month"
            />
            <mock-styled.label
              htmlfor="test-static-id"
            >
              Month
            </mock-styled.label>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.label>
              App
            </mock-styled.label>
            <mock-styled.select
              disabled="true"
              name="appId"
            >
              <option
                value=""
              >
                Please Select
              </option>
            </mock-styled.select>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.label>
              Customer
            </mock-styled.label>
            <mock-styled.select
              disabled="true"
              name="customerId"
            >
              <option
                value=""
              >
                Please Select
              </option>
            </mock-styled.select>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
