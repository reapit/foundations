// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CancelConfirmModal should render CancelConfirmModal 1`] = `
<Component
  isCanceling={false}
  isShowConfirmModal={true}
  onConfirm={[MockFunction]}
  setCancelSubId={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <Component
    destroyOnClose={true}
    onClose={[Function]}
    visible={true}
  >
    <Component
      className=""
      closeIcon={
        <span
          aria-label="close"
          className="delete"
        />
      }
      destroyOnClose={true}
      onClose={[Function]}
      title={<Unknown />}
      visible={true}
      wrapClassName=""
    >
      <PortalWrapper
        visible={true}
      >
        <Portal
          getContainer={[Function]}
        >
          <Portal
            containerInfo={
              <div>
                <div
                  class="rc-dialog-root"
                >
                  <div
                    class="rc-dialog-mask"
                  />
                  <div
                    aria-labelledby="rcDialogTitle0"
                    class="rc-dialog-wrap "
                    role="dialog"
                    tabindex="-1"
                  >
                    <div
                      class="rc-dialog "
                      role="document"
                    >
                      <div
                        aria-hidden="true"
                        style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                        tabindex="0"
                      />
                      <div
                        class="rc-dialog-content"
                      >
                        <button
                          aria-label="Close"
                          class="rc-dialog-close"
                          type="button"
                        >
                          <span
                            aria-label="close"
                            class="delete"
                          />
                        </button>
                        <div
                          class="rc-dialog-header"
                        >
                          <div
                            class="rc-dialog-title"
                            id="rcDialogTitle0"
                          >
                            <h4
                              class="modal-card-title is-4 pt-2 pb-2"
                            />
                          </div>
                        </div>
                        <div
                          class="rc-dialog-body"
                        >
                          <h5
                            class=""
                            id=""
                          >
                            Are you sure you want to cancel this appointment?
                          </h5>
                          <section
                            class=""
                            data-test=""
                          >
                            <button
                              class="button  is-info  "
                              data-test=""
                              type="button"
                            >
                              Yes
                            </button>
                            <button
                              class="button  is-info  "
                              data-test=""
                              type="button"
                            >
                              No
                            </button>
                          </section>
                        </div>
                      </div>
                      <div
                        aria-hidden="true"
                        style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                        tabindex="0"
                      />
                    </div>
                  </div>
                </div>
              </div>
            }
          >
            <Dialog
              className=""
              closable={true}
              closeIcon={
                <span
                  aria-label="close"
                  className="delete"
                />
              }
              destroyOnClose={true}
              focusTriggerAfterClose={true}
              getContainer={[Function]}
              getOpenCount={[Function]}
              keyboard={true}
              mask={true}
              maskClosable={true}
              onClose={[Function]}
              prefixCls="rc-dialog"
              switchScrollingEffect={[Function]}
              title={<Unknown />}
              visible={true}
              wrapClassName=""
            >
              <div
                className="rc-dialog-root"
              >
                <LazyRenderBox
                  className="rc-dialog-mask"
                  hiddenClassName="rc-dialog-mask-hidden"
                  key="mask"
                  style={Object {}}
                  visible={true}
                >
                  <div
                    className="rc-dialog-mask"
                    style={Object {}}
                  />
                </LazyRenderBox>
                <div
                  aria-labelledby="rcDialogTitle0"
                  className="rc-dialog-wrap "
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  onMouseUp={[Function]}
                  role="dialog"
                  style={
                    Object {
                      "display": null,
                    }
                  }
                  tabIndex={-1}
                >
                  <Animate
                    animation={Object {}}
                    component=""
                    componentProps={Object {}}
                    key="dialog"
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="visible"
                    transitionAppear={true}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={Object {}}
                      key="dialog-element"
                      transitionAppear={true}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <LazyRenderBox
                        className="rc-dialog "
                        key="dialog-element"
                        onMouseDown={[Function]}
                        role="document"
                        style={Object {}}
                        visible={true}
                      >
                        <div
                          className="rc-dialog "
                          onMouseDown={[Function]}
                          role="document"
                          style={Object {}}
                        >
                          <div
                            aria-hidden="true"
                            style={
                              Object {
                                "height": 0,
                                "outline": "none",
                                "overflow": "hidden",
                                "width": 0,
                              }
                            }
                            tabIndex={0}
                          />
                          <div
                            className="rc-dialog-content"
                          >
                            <button
                              aria-label="Close"
                              className="rc-dialog-close"
                              onClick={[Function]}
                              type="button"
                            >
                              <span
                                aria-label="close"
                                className="delete"
                              />
                            </button>
                            <div
                              className="rc-dialog-header"
                            >
                              <div
                                className="rc-dialog-title"
                                id="rcDialogTitle0"
                              >
                                <Component>
                                  <h4
                                    className="modal-card-title is-4 pt-2 pb-2"
                                  />
                                </Component>
                              </div>
                            </div>
                            <div
                              className="rc-dialog-body"
                            >
                              <Component>
                                <h5
                                  className=""
                                  id=""
                                >
                                  Are you sure you want to cancel this appointment?
                                </h5>
                              </Component>
                              <Component
                                hasMargin={false}
                                hasPadding={false}
                                isFlex={true}
                              >
                                <section
                                  className=""
                                  data-test=""
                                >
                                  <Component
                                    loading={false}
                                    onClick={[MockFunction]}
                                    type="button"
                                    variant="info"
                                  >
                                    <button
                                      className="button  is-info  "
                                      data-test=""
                                      disabled={false}
                                      onClick={[MockFunction]}
                                      type="button"
                                    >
                                      Yes
                                    </button>
                                  </Component>
                                  <Component
                                    disabled={false}
                                    onClick={[Function]}
                                    type="button"
                                    variant="info"
                                  >
                                    <button
                                      className="button  is-info  "
                                      data-test=""
                                      disabled={false}
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      No
                                    </button>
                                  </Component>
                                </section>
                              </Component>
                            </div>
                          </div>
                          <div
                            aria-hidden="true"
                            style={
                              Object {
                                "height": 0,
                                "outline": "none",
                                "overflow": "hidden",
                                "width": 0,
                              }
                            }
                            tabIndex={0}
                          />
                        </div>
                      </LazyRenderBox>
                    </AnimateChild>
                  </Animate>
                </div>
              </div>
            </Dialog>
          </Portal>
        </Portal>
      </PortalWrapper>
    </Component>
  </Component>
</Component>
`;
