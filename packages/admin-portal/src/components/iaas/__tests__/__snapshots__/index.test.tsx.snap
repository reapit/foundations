// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`IaaS should match snapshot when loading 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.section
        classname=""
      >
        <mock-styled.h1
          classname=""
        >
          IaaS Pipelines
        </mock-styled.h1>
        <form>
          <mock-styled.div
            classname="mock-css.
  margin-bottom: 2.5rem;
"
          >
            <mock-styled.div>
              <mock-styled.div>
                <input
                  id="developer-search-box"
                  readonly=""
                  style="display: none;"
                  value=""
                />
                <mock-styled.div>
                  <mock-styled.span
                    classname=""
                  >
                    <svg />
                  </mock-styled.span>
                </mock-styled.div>
                <mock-styled.div
                  data-testid="search-input"
                  name="developerId"
                  placeholder="Search developer organisations"
                  value=""
                />
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </form>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div />
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.section>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.section
      classname=""
    >
      <mock-styled.h1
        classname=""
      >
        IaaS Pipelines
      </mock-styled.h1>
      <form>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 2.5rem;
"
        >
          <mock-styled.div>
            <mock-styled.div>
              <input
                id="developer-search-box"
                readonly=""
                style="display: none;"
                value=""
              />
              <mock-styled.div>
                <mock-styled.span
                  classname=""
                >
                  <svg />
                </mock-styled.span>
              </mock-styled.div>
              <mock-styled.div
                data-testid="search-input"
                name="developerId"
                placeholder="Search developer organisations"
                value=""
              />
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </form>
      <mock-styled.div
        classname=""
      >
        <mock-styled.div>
          <mock-styled.div />
        </mock-styled.div>
      </mock-styled.div>
    </mock-styled.section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`IaaS should match snapshot with pipelines 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.section
        classname=""
      >
        <mock-styled.h1
          classname=""
        >
          IaaS Pipelines
        </mock-styled.h1>
        <form>
          <mock-styled.div
            classname="mock-css.
  margin-bottom: 2.5rem;
"
          >
            <mock-styled.div>
              <mock-styled.div>
                <input
                  id="developer-search-box"
                  readonly=""
                  style="display: none;"
                  value=""
                />
                <mock-styled.div>
                  <mock-styled.span
                    classname=""
                  >
                    <svg />
                  </mock-styled.span>
                </mock-styled.div>
                <mock-styled.div
                  data-testid="search-input"
                  name="developerId"
                  placeholder="Search developer organisations"
                  value=""
                />
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </form>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 2.5rem;
"
          data-has-call-to-action="true"
          data-has-expandable-action="false"
          data-num-columns-excl-action-col="3"
        >
          <mock-styled.div>
            <mock-styled.div>
              Name
            </mock-styled.div>
            <mock-styled.div>
              Build Status
            </mock-styled.div>
            <mock-styled.div>
              Repository
            </mock-styled.div>
            <mock-styled.div>
              Delete Pipeline
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div>
              <mock-styled.div
                classname="mock-css."
              >
                <mock-styled.span
                  classname="mock-css."
                >
                  <svg />
                </mock-styled.span>
                <mock-styled.div
                  data-narrow-label="Name"
                >
                  reapit-ltd-internal-thoughtless-cub
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.div
                  data-narrow-label="Build Status"
                >
                  <mock-styled.span
                    classname="mock-css."
                  />
                  Pre Provisioned
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.div
                  data-narrow-label="Repository"
                />
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.span
                    classname="mock-css."
                    style="font-size: 1.2rem;"
                  >
                    <svg
                      style="font-size: 1.2rem;"
                    />
                  </mock-styled.span>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div>
          <mock-styled.div>
            <mock-styled.input
              value="1"
            />
             of 
            6
          </mock-styled.div>
          <mock-styled.button
            data-testid="back-button"
            type="button"
          >
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </mock-styled.button>
          <mock-styled.button
            data-testid="forward-button"
            type="button"
          >
            <mock-styled.span
              classname="mock-css.
  cursor: pointer;
  svg {
    color: var(--intent-primary);
  }
"
            >
              <svg />
            </mock-styled.span>
          </mock-styled.button>
        </mock-styled.div>
      </mock-styled.section>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.section
      classname=""
    >
      <mock-styled.h1
        classname=""
      >
        IaaS Pipelines
      </mock-styled.h1>
      <form>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 2.5rem;
"
        >
          <mock-styled.div>
            <mock-styled.div>
              <input
                id="developer-search-box"
                readonly=""
                style="display: none;"
                value=""
              />
              <mock-styled.div>
                <mock-styled.span
                  classname=""
                >
                  <svg />
                </mock-styled.span>
              </mock-styled.div>
              <mock-styled.div
                data-testid="search-input"
                name="developerId"
                placeholder="Search developer organisations"
                value=""
              />
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </form>
      <mock-styled.div
        classname="mock-css.
  margin-bottom: 2.5rem;
"
        data-has-call-to-action="true"
        data-has-expandable-action="false"
        data-num-columns-excl-action-col="3"
      >
        <mock-styled.div>
          <mock-styled.div>
            Name
          </mock-styled.div>
          <mock-styled.div>
            Build Status
          </mock-styled.div>
          <mock-styled.div>
            Repository
          </mock-styled.div>
          <mock-styled.div>
            Delete Pipeline
          </mock-styled.div>
        </mock-styled.div>
        <mock-styled.div
          classname=""
        >
          <mock-styled.div>
            <mock-styled.div
              classname="mock-css."
            >
              <mock-styled.span
                classname="mock-css."
              >
                <svg />
              </mock-styled.span>
              <mock-styled.div
                data-narrow-label="Name"
              >
                reapit-ltd-internal-thoughtless-cub
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Build Status"
              >
                <mock-styled.span
                  classname="mock-css."
                />
                Pre Provisioned
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div
                data-narrow-label="Repository"
              />
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.div>
                <mock-styled.span
                  classname="mock-css."
                  style="font-size: 1.2rem;"
                >
                  <svg
                    style="font-size: 1.2rem;"
                  />
                </mock-styled.span>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.div>
      <mock-styled.div>
        <mock-styled.div>
          <mock-styled.input
            value="1"
          />
           of 
          6
        </mock-styled.div>
        <mock-styled.button
          data-testid="back-button"
          type="button"
        >
          <mock-styled.span
            classname=""
          >
            <svg />
          </mock-styled.span>
        </mock-styled.button>
        <mock-styled.button
          data-testid="forward-button"
          type="button"
        >
          <mock-styled.span
            classname="mock-css.
  cursor: pointer;
  svg {
    color: var(--intent-primary);
  }
"
          >
            <svg />
          </mock-styled.span>
        </mock-styled.button>
      </mock-styled.div>
    </mock-styled.section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
