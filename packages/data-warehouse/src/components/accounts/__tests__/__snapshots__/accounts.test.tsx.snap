// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Accounts should match a snapshot with accounts 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname="mock-css.
  flex: 1 1 auto;
"
      >
        <mock-styled.aside
          classname=""
        >
          <mock-styled.span
            classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css.
  font-size: 5rem;
"
          >
            <svg />
          </mock-styled.span>
          <mock-styled.p
            classname=""
          >
            Support
          </mock-styled.p>
          <mock-styled.p
            classname="mock-css."
          >
            Your first step is to provision a user account for the solution using the button below.
          </mock-styled.p>
          <mock-styled.p
            classname="mock-css."
          >
            Please see also below for more resources amd assistance.
          </mock-styled.p>
          <mock-styled.button
            classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css."
            disabled="false"
          >
            <mock-styled.div />
            Provision User
          </mock-styled.button>
          <mock-styled.button
            classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css."
          >
            <mock-styled.div />
            View Docs
          </mock-styled.button>
          <div>
            <mock-styled.button
              classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css."
            >
              <mock-styled.div />
              Video
            </mock-styled.button>
          </div>
          <mock-styled.button
            classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css."
          >
            <mock-styled.div />
            Help
          </mock-styled.button>
        </mock-styled.aside>
        <mock-styled.section
          classname=""
        >
          <mock-styled.h1
            classname=""
          >
            User Accounts
          </mock-styled.h1>
          <mock-styled.p
            classname="mock-css."
          >
            In order to access your organisations data warehouse, you must first create the user accounts to access it. You are to manage and create as many user accounts as you wish without any additional costs. We recommend that each individual user or application is provided with a unique set of credentials.
          </mock-styled.p>
          <mock-styled.p
            classname="mock-css."
          >
            Please note that creating the first user account is a long running process and can take several minutes to complete.
          </mock-styled.p>
          <mock-styled.h2
            classname=""
          >
            User Account Details
          </mock-styled.h2>
          <mock-styled.div
            classname="mock-css.
  margin-bottom: 2.5rem;
"
            data-has-call-to-action="false"
            data-has-expandable-action="true"
            data-num-columns-excl-action-col="2"
          >
            <mock-styled.div>
              <mock-styled.div>
                User Name
              </mock-styled.div>
              <mock-styled.div>
                Status
              </mock-styled.div>
              <mock-styled.div>
                <mock-styled.span
                  classname="mock-css."
                  style="font-size: 1.2rem;"
                >
                  <svg
                    style="font-size: 1.2rem;"
                  />
                </mock-styled.span>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div>
                <mock-styled.div
                  classname="mock-css."
                >
                  <mock-styled.span
                    classname="mock-css."
                  >
                    <svg />
                  </mock-styled.span>
                  <mock-styled.div
                    data-narrow-label="User Name"
                  >
                    hiyaall
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname="mock-css."
                >
                  <mock-styled.div
                    data-narrow-label="Status"
                  >
                    User is active
                  </mock-styled.div>
                </mock-styled.div>
                <mock-styled.div
                  classname=""
                >
                  <mock-styled.span
                    classname="mock-css."
                  >
                    <svg />
                  </mock-styled.span>
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.div>
                  <mock-styled.div>
                    <mock-styled.div
                      classname="mock-css."
                    >
                      <mock-styled.button
                        classname="mock-css."
                        disabled="false"
                      >
                        <mock-styled.div />
                        Update
                      </mock-styled.button>
                      <mock-styled.button
                        classname="mock-css."
                        disabled="false"
                      >
                        <mock-styled.div />
                        Deactivate
                      </mock-styled.button>
                    </mock-styled.div>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.section>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname="mock-css.
  flex: 1 1 auto;
"
    >
      <mock-styled.aside
        classname=""
      >
        <mock-styled.span
          classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css.
  font-size: 5rem;
"
        >
          <svg />
        </mock-styled.span>
        <mock-styled.p
          classname=""
        >
          Support
        </mock-styled.p>
        <mock-styled.p
          classname="mock-css."
        >
          Your first step is to provision a user account for the solution using the button below.
        </mock-styled.p>
        <mock-styled.p
          classname="mock-css."
        >
          Please see also below for more resources amd assistance.
        </mock-styled.p>
        <mock-styled.button
          classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css."
          disabled="false"
        >
          <mock-styled.div />
          Provision User
        </mock-styled.button>
        <mock-styled.button
          classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css."
        >
          <mock-styled.div />
          View Docs
        </mock-styled.button>
        <div>
          <mock-styled.button
            classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css."
          >
            <mock-styled.div />
            Video
          </mock-styled.button>
        </div>
        <mock-styled.button
          classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css."
        >
          <mock-styled.div />
          Help
        </mock-styled.button>
      </mock-styled.aside>
      <mock-styled.section
        classname=""
      >
        <mock-styled.h1
          classname=""
        >
          User Accounts
        </mock-styled.h1>
        <mock-styled.p
          classname="mock-css."
        >
          In order to access your organisations data warehouse, you must first create the user accounts to access it. You are to manage and create as many user accounts as you wish without any additional costs. We recommend that each individual user or application is provided with a unique set of credentials.
        </mock-styled.p>
        <mock-styled.p
          classname="mock-css."
        >
          Please note that creating the first user account is a long running process and can take several minutes to complete.
        </mock-styled.p>
        <mock-styled.h2
          classname=""
        >
          User Account Details
        </mock-styled.h2>
        <mock-styled.div
          classname="mock-css.
  margin-bottom: 2.5rem;
"
          data-has-call-to-action="false"
          data-has-expandable-action="true"
          data-num-columns-excl-action-col="2"
        >
          <mock-styled.div>
            <mock-styled.div>
              User Name
            </mock-styled.div>
            <mock-styled.div>
              Status
            </mock-styled.div>
            <mock-styled.div>
              <mock-styled.span
                classname="mock-css."
                style="font-size: 1.2rem;"
              >
                <svg
                  style="font-size: 1.2rem;"
                />
              </mock-styled.span>
            </mock-styled.div>
          </mock-styled.div>
          <mock-styled.div
            classname=""
          >
            <mock-styled.div>
              <mock-styled.div
                classname="mock-css."
              >
                <mock-styled.span
                  classname="mock-css."
                >
                  <svg />
                </mock-styled.span>
                <mock-styled.div
                  data-narrow-label="User Name"
                >
                  hiyaall
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname="mock-css."
              >
                <mock-styled.div
                  data-narrow-label="Status"
                >
                  User is active
                </mock-styled.div>
              </mock-styled.div>
              <mock-styled.div
                classname=""
              >
                <mock-styled.span
                  classname="mock-css."
                >
                  <svg />
                </mock-styled.span>
              </mock-styled.div>
            </mock-styled.div>
            <mock-styled.div
              classname=""
            >
              <mock-styled.div>
                <mock-styled.div>
                  <mock-styled.div
                    classname="mock-css."
                  >
                    <mock-styled.button
                      classname="mock-css."
                      disabled="false"
                    >
                      <mock-styled.div />
                      Update
                    </mock-styled.button>
                    <mock-styled.button
                      classname="mock-css."
                      disabled="false"
                    >
                      <mock-styled.div />
                      Deactivate
                    </mock-styled.button>
                  </mock-styled.div>
                </mock-styled.div>
              </mock-styled.div>
            </mock-styled.div>
          </mock-styled.div>
        </mock-styled.div>
      </mock-styled.section>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Accounts should match a snapshot with no accounts 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styled.div />
      <mock-styled.div
        classname="mock-css.
  flex: 1 1 auto;
"
      >
        <mock-styled.aside
          classname=""
        >
          <mock-styled.span
            classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css.
  font-size: 5rem;
"
          >
            <svg />
          </mock-styled.span>
          <mock-styled.p
            classname=""
          >
            Support
          </mock-styled.p>
          <mock-styled.p
            classname="mock-css."
          >
            Your first step is to provision a user account for the solution using the button below.
          </mock-styled.p>
          <mock-styled.p
            classname="mock-css."
          >
            Please see also below for more resources amd assistance.
          </mock-styled.p>
          <mock-styled.button
            classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css."
            disabled="false"
          >
            <mock-styled.div />
            Provision User
          </mock-styled.button>
          <mock-styled.button
            classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css."
          >
            <mock-styled.div />
            View Docs
          </mock-styled.button>
          <div>
            <mock-styled.button
              classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css."
            >
              <mock-styled.div />
              Video
            </mock-styled.button>
          </div>
          <mock-styled.button
            classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css."
          >
            <mock-styled.div />
            Help
          </mock-styled.button>
        </mock-styled.aside>
        <mock-styled.section
          classname=""
        >
          <mock-styled.h1
            classname=""
          >
            User Accounts
          </mock-styled.h1>
          <mock-styled.p
            classname="mock-css."
          >
            In order to access your organisations data warehouse, you must first create the user accounts to access it. You are to manage and create as many user accounts as you wish without any additional costs. We recommend that each individual user or application is provided with a unique set of credentials.
          </mock-styled.p>
          <mock-styled.p
            classname="mock-css."
          >
            Please note that creating the first user account is a long running process and can take several minutes to complete.
          </mock-styled.p>
          <mock-styled.h2
            classname=""
          >
            User Account Details
          </mock-styled.h2>
          <mock-styled.div
            classname="mock-css. mock-css. mock-css. mock-css."
          >
            <div
              class="mock-css.
  padding: 0 1rem;
  display: flex;
  align-items: center;
  border-radius: var(--default-border-radius) 0 0 var(--default-border-radius);
  cursor: pointer;

  , {
    color: var(--color-white);
  }
"
              data-testid="close-icon"
            >
              <mock-styled.span
                classname=""
              >
                <svg />
              </mock-styled.span>
            </div>
            <div
              class="mock-css.
  padding: 1rem;
  opacity: 0;
  transition: 0.5s;
  width: 100%;
"
            >
              No accounts yet provisioned for your organisation
            </div>
          </mock-styled.div>
        </mock-styled.section>
      </mock-styled.div>
    </div>
  </body>,
  "container": <div>
    <mock-styled.div />
    <mock-styled.div
      classname="mock-css.
  flex: 1 1 auto;
"
    >
      <mock-styled.aside
        classname=""
      >
        <mock-styled.span
          classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css.
  font-size: 5rem;
"
        >
          <svg />
        </mock-styled.span>
        <mock-styled.p
          classname=""
        >
          Support
        </mock-styled.p>
        <mock-styled.p
          classname="mock-css."
        >
          Your first step is to provision a user account for the solution using the button below.
        </mock-styled.p>
        <mock-styled.p
          classname="mock-css."
        >
          Please see also below for more resources amd assistance.
        </mock-styled.p>
        <mock-styled.button
          classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css."
          disabled="false"
        >
          <mock-styled.div />
          Provision User
        </mock-styled.button>
        <mock-styled.button
          classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css."
        >
          <mock-styled.div />
          View Docs
        </mock-styled.button>
        <div>
          <mock-styled.button
            classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css."
          >
            <mock-styled.div />
            Video
          </mock-styled.button>
        </div>
        <mock-styled.button
          classname="mock-css.
  margin-bottom: 0.75rem;
 mock-css."
        >
          <mock-styled.div />
          Help
        </mock-styled.button>
      </mock-styled.aside>
      <mock-styled.section
        classname=""
      >
        <mock-styled.h1
          classname=""
        >
          User Accounts
        </mock-styled.h1>
        <mock-styled.p
          classname="mock-css."
        >
          In order to access your organisations data warehouse, you must first create the user accounts to access it. You are to manage and create as many user accounts as you wish without any additional costs. We recommend that each individual user or application is provided with a unique set of credentials.
        </mock-styled.p>
        <mock-styled.p
          classname="mock-css."
        >
          Please note that creating the first user account is a long running process and can take several minutes to complete.
        </mock-styled.p>
        <mock-styled.h2
          classname=""
        >
          User Account Details
        </mock-styled.h2>
        <mock-styled.div
          classname="mock-css. mock-css. mock-css. mock-css."
        >
          <div
            class="mock-css.
  padding: 0 1rem;
  display: flex;
  align-items: center;
  border-radius: var(--default-border-radius) 0 0 var(--default-border-radius);
  cursor: pointer;

  , {
    color: var(--color-white);
  }
"
            data-testid="close-icon"
          >
            <mock-styled.span
              classname=""
            >
              <svg />
            </mock-styled.span>
          </div>
          <div
            class="mock-css.
  padding: 1rem;
  opacity: 0;
  transition: 0.5s;
  width: 100%;
"
          >
            No accounts yet provisioned for your organisation
          </div>
        </mock-styled.div>
      </mock-styled.section>
    </mock-styled.div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
